Module(
    body=[
        Expr(
            lineno=1,
            col_offset=0,
            end_lineno=12,
            end_col_offset=3,
            value=Constant(lineno=1, col_offset=0, end_lineno=12, end_col_offset=3, value='\nThis code is what let us use ES6-style modules in odoo.\nClassic Odoo modules are composed of a top-level :samp:`odoo.define({name},{body_function})` call.\nThis processor will take files starting with an `@odoo-module` annotation (in a comment) and convert them to classic modules.\nIf any file has the /** odoo-module */ on top of it, it will get processed by this class.\nIt performs several operations to get from ES6 syntax to the usual odoo one with minimal changes.\nThis is done on the fly, this not a pre-processing tool.\n\nCaveat: This is done without a full parser, only using regex. One can only expect to cover as much edge cases\nas possible with reasonable limitations. Also, this only changes imports and exports, so all JS features used in\nthe original source need to be supported by the browsers.\n', kind=None),
        ),
        Import(
            lineno=14,
            col_offset=0,
            end_lineno=14,
            end_col_offset=9,
            names=[alias(name='re', asname=None)],
        ),
        ImportFrom(
            lineno=15,
            col_offset=0,
            end_lineno=15,
            end_col_offset=29,
            module='functools',
            names=[alias(name='partial', asname=None)],
            level=0,
        ),
        FunctionDef(
            lineno=18,
            col_offset=0,
            end_lineno=50,
            end_col_offset=18,
            name='transpile_javascript',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(lineno=18, col_offset=25, end_lineno=18, end_col_offset=28, arg='url', annotation=None, type_comment=None),
                    arg(lineno=18, col_offset=30, end_lineno=18, end_col_offset=37, arg='content', annotation=None, type_comment=None),
                ],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=19,
                    col_offset=4,
                    end_lineno=25,
                    end_col_offset=7,
                    value=Constant(lineno=19, col_offset=4, end_lineno=25, end_col_offset=7, value='\n    Transpile the code from native JS modules to custom odoo modules.\n\n    :param content: The original source code\n    :param url: The url of the file in the project\n    :return: The transpiled source code\n    ', kind=None),
                ),
                Assign(
                    lineno=26,
                    col_offset=4,
                    end_lineno=26,
                    end_col_offset=41,
                    targets=[Name(lineno=26, col_offset=4, end_lineno=26, end_col_offset=15, id='module_path', ctx=Store())],
                    value=Call(
                        lineno=26,
                        col_offset=18,
                        end_lineno=26,
                        end_col_offset=41,
                        func=Name(lineno=26, col_offset=18, end_lineno=26, end_col_offset=36, id='url_to_module_path', ctx=Load()),
                        args=[Name(lineno=26, col_offset=37, end_lineno=26, end_col_offset=40, id='url', ctx=Load())],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=27,
                    col_offset=4,
                    end_lineno=27,
                    end_col_offset=78,
                    targets=[Name(lineno=27, col_offset=4, end_lineno=27, end_col_offset=22, id='legacy_odoo_define', ctx=Store())],
                    value=Call(
                        lineno=27,
                        col_offset=25,
                        end_lineno=27,
                        end_col_offset=78,
                        func=Name(lineno=27, col_offset=25, end_lineno=27, end_col_offset=56, id='get_aliased_odoo_define_content', ctx=Load()),
                        args=[
                            Name(lineno=27, col_offset=57, end_lineno=27, end_col_offset=68, id='module_path', ctx=Load()),
                            Name(lineno=27, col_offset=70, end_lineno=27, end_col_offset=77, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=30,
                    col_offset=4,
                    end_lineno=45,
                    end_col_offset=5,
                    targets=[Name(lineno=30, col_offset=4, end_lineno=30, end_col_offset=9, id='steps', ctx=Store())],
                    value=List(
                        lineno=30,
                        col_offset=12,
                        end_lineno=45,
                        end_col_offset=5,
                        elts=[
                            Name(lineno=31, col_offset=8, end_lineno=31, end_col_offset=37, id='convert_legacy_default_import', ctx=Load()),
                            Name(lineno=32, col_offset=8, end_lineno=32, end_col_offset=28, id='convert_basic_import', ctx=Load()),
                            Name(lineno=33, col_offset=8, end_lineno=33, end_col_offset=30, id='convert_default_import', ctx=Load()),
                            Name(lineno=34, col_offset=8, end_lineno=34, end_col_offset=27, id='convert_star_import', ctx=Load()),
                            Name(lineno=35, col_offset=8, end_lineno=35, end_col_offset=39, id='convert_unnamed_relative_import', ctx=Load()),
                            Name(lineno=36, col_offset=8, end_lineno=36, end_col_offset=27, id='convert_from_export', ctx=Load()),
                            Name(lineno=37, col_offset=8, end_lineno=37, end_col_offset=32, id='convert_star_from_export', ctx=Load()),
                            Call(
                                lineno=38,
                                col_offset=8,
                                end_lineno=38,
                                end_col_offset=46,
                                func=Name(lineno=38, col_offset=8, end_lineno=38, end_col_offset=15, id='partial', ctx=Load()),
                                args=[
                                    Name(lineno=38, col_offset=16, end_lineno=38, end_col_offset=40, id='convert_relative_require', ctx=Load()),
                                    Name(lineno=38, col_offset=42, end_lineno=38, end_col_offset=45, id='url', ctx=Load()),
                                ],
                                keywords=[],
                            ),
                            Name(lineno=39, col_offset=8, end_lineno=39, end_col_offset=20, id='remove_index', ctx=Load()),
                            Name(lineno=40, col_offset=8, end_lineno=40, end_col_offset=40, id='convert_export_function_or_class', ctx=Load()),
                            Name(lineno=41, col_offset=8, end_lineno=41, end_col_offset=31, id='convert_variable_export', ctx=Load()),
                            Name(lineno=42, col_offset=8, end_lineno=42, end_col_offset=29, id='convert_object_export', ctx=Load()),
                            Name(lineno=43, col_offset=8, end_lineno=43, end_col_offset=30, id='convert_default_export', ctx=Load()),
                            Call(
                                lineno=44,
                                col_offset=8,
                                end_lineno=44,
                                end_col_offset=51,
                                func=Name(lineno=44, col_offset=8, end_lineno=44, end_col_offset=15, id='partial', ctx=Load()),
                                args=[
                                    Name(lineno=44, col_offset=16, end_lineno=44, end_col_offset=37, id='wrap_with_odoo_define', ctx=Load()),
                                    Name(lineno=44, col_offset=39, end_lineno=44, end_col_offset=50, id='module_path', ctx=Load()),
                                ],
                                keywords=[],
                            ),
                        ],
                        ctx=Load(),
                    ),
                    type_comment=None,
                ),
                For(
                    lineno=46,
                    col_offset=4,
                    end_lineno=47,
                    end_col_offset=28,
                    target=Name(lineno=46, col_offset=8, end_lineno=46, end_col_offset=9, id='s', ctx=Store()),
                    iter=Name(lineno=46, col_offset=13, end_lineno=46, end_col_offset=18, id='steps', ctx=Load()),
                    body=[
                        Assign(
                            lineno=47,
                            col_offset=8,
                            end_lineno=47,
                            end_col_offset=28,
                            targets=[Name(lineno=47, col_offset=8, end_lineno=47, end_col_offset=15, id='content', ctx=Store())],
                            value=Call(
                                lineno=47,
                                col_offset=18,
                                end_lineno=47,
                                end_col_offset=28,
                                func=Name(lineno=47, col_offset=18, end_lineno=47, end_col_offset=19, id='s', ctx=Load()),
                                args=[Name(lineno=47, col_offset=20, end_lineno=47, end_col_offset=27, id='content', ctx=Load())],
                                keywords=[],
                            ),
                            type_comment=None,
                        ),
                    ],
                    orelse=[],
                    type_comment=None,
                ),
                If(
                    lineno=48,
                    col_offset=4,
                    end_lineno=49,
                    end_col_offset=37,
                    test=Name(lineno=48, col_offset=7, end_lineno=48, end_col_offset=25, id='legacy_odoo_define', ctx=Load()),
                    body=[
                        AugAssign(
                            lineno=49,
                            col_offset=8,
                            end_lineno=49,
                            end_col_offset=37,
                            target=Name(lineno=49, col_offset=8, end_lineno=49, end_col_offset=15, id='content', ctx=Store()),
                            op=Add(),
                            value=Name(lineno=49, col_offset=19, end_lineno=49, end_col_offset=37, id='legacy_odoo_define', ctx=Load()),
                        ),
                    ],
                    orelse=[],
                ),
                Return(
                    lineno=50,
                    col_offset=4,
                    end_lineno=50,
                    end_col_offset=18,
                    value=Name(lineno=50, col_offset=11, end_lineno=50, end_col_offset=18, id='content', ctx=Load()),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=53,
            col_offset=0,
            end_lineno=58,
            end_col_offset=20,
            targets=[Name(lineno=53, col_offset=0, end_lineno=53, end_col_offset=6, id='URL_RE', ctx=Store())],
            value=Call(
                lineno=53,
                col_offset=9,
                end_lineno=58,
                end_col_offset=20,
                func=Attribute(
                    lineno=53,
                    col_offset=9,
                    end_lineno=53,
                    end_col_offset=19,
                    value=Name(lineno=53, col_offset=9, end_lineno=53, end_col_offset=11, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=53, col_offset=20, end_lineno=58, end_col_offset=7, value='\n    /?(?P<module>\\S+)    # /module name\n    /([\\S/]*/)?static/   # ... /static/\n    (?P<type>src|tests|lib)  # src, test, or lib file\n    (?P<url>/[\\S/]*)     # URL (/...)\n    ', kind=None),
                    Attribute(
                        lineno=58,
                        col_offset=9,
                        end_lineno=58,
                        end_col_offset=19,
                        value=Name(lineno=58, col_offset=9, end_lineno=58, end_col_offset=11, id='re', ctx=Load()),
                        attr='VERBOSE',
                        ctx=Load(),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=61,
            col_offset=0,
            end_lineno=90,
            end_col_offset=119,
            name='url_to_module_path',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=61, col_offset=23, end_lineno=61, end_col_offset=26, arg='url', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=62,
                    col_offset=4,
                    end_lineno=75,
                    end_col_offset=7,
                    value=Constant(lineno=62, col_offset=4, end_lineno=75, end_col_offset=7, value='\n    Odoo modules each have a name. (odoo.define("<the name>", async function (require) {...});\n    It is used in to be required later. (const { something } = require("<the name>").\n    The transpiler transforms the url of the file in the project to this name.\n    It takes the module name and add a @ on the start of it, and map it to be the source of the static/src (or\n    static/tests, or static/lib) folder in that module.\n\n    in: web/static/src/one/two/three.js\n    out: @web/one/two/three.js\n    The module would therefore be defined and required by this path.\n\n    :param url: an url in the project\n    :return: a special path starting with @<module-name>.\n    ', kind=None),
                ),
                Assign(
                    lineno=76,
                    col_offset=4,
                    end_lineno=76,
                    end_col_offset=29,
                    targets=[Name(lineno=76, col_offset=4, end_lineno=76, end_col_offset=9, id='match', ctx=Store())],
                    value=Call(
                        lineno=76,
                        col_offset=12,
                        end_lineno=76,
                        end_col_offset=29,
                        func=Attribute(
                            lineno=76,
                            col_offset=12,
                            end_lineno=76,
                            end_col_offset=24,
                            value=Name(lineno=76, col_offset=12, end_lineno=76, end_col_offset=18, id='URL_RE', ctx=Load()),
                            attr='match',
                            ctx=Load(),
                        ),
                        args=[Name(lineno=76, col_offset=25, end_lineno=76, end_col_offset=28, id='url', ctx=Load())],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                If(
                    lineno=77,
                    col_offset=4,
                    end_lineno=90,
                    end_col_offset=119,
                    test=Name(lineno=77, col_offset=7, end_lineno=77, end_col_offset=12, id='match', ctx=Load()),
                    body=[
                        Assign(
                            lineno=78,
                            col_offset=8,
                            end_lineno=78,
                            end_col_offset=26,
                            targets=[Name(lineno=78, col_offset=8, end_lineno=78, end_col_offset=11, id='url', ctx=Store())],
                            value=Subscript(
                                lineno=78,
                                col_offset=14,
                                end_lineno=78,
                                end_col_offset=26,
                                value=Name(lineno=78, col_offset=14, end_lineno=78, end_col_offset=19, id='match', ctx=Load()),
                                slice=Constant(lineno=78, col_offset=20, end_lineno=78, end_col_offset=25, value='url', kind=None),
                                ctx=Load(),
                            ),
                            type_comment=None,
                        ),
                        If(
                            lineno=79,
                            col_offset=8,
                            end_lineno=80,
                            end_col_offset=39,
                            test=Call(
                                lineno=79,
                                col_offset=11,
                                end_lineno=79,
                                end_col_offset=48,
                                func=Attribute(
                                    lineno=79,
                                    col_offset=11,
                                    end_lineno=79,
                                    end_col_offset=23,
                                    value=Name(lineno=79, col_offset=11, end_lineno=79, end_col_offset=14, id='url', ctx=Load()),
                                    attr='endswith',
                                    ctx=Load(),
                                ),
                                args=[
                                    Tuple(
                                        lineno=79,
                                        col_offset=24,
                                        end_lineno=79,
                                        end_col_offset=47,
                                        elts=[
                                            Constant(lineno=79, col_offset=25, end_lineno=79, end_col_offset=36, value='/index.js', kind=None),
                                            Constant(lineno=79, col_offset=38, end_lineno=79, end_col_offset=46, value='/index', kind=None),
                                        ],
                                        ctx=Load(),
                                    ),
                                ],
                                keywords=[],
                            ),
                            body=[
                                Assign(
                                    lineno=80,
                                    col_offset=12,
                                    end_lineno=80,
                                    end_col_offset=39,
                                    targets=[
                                        Tuple(
                                            lineno=80,
                                            col_offset=12,
                                            end_lineno=80,
                                            end_col_offset=18,
                                            elts=[
                                                Name(lineno=80, col_offset=12, end_lineno=80, end_col_offset=15, id='url', ctx=Store()),
                                                Name(lineno=80, col_offset=17, end_lineno=80, end_col_offset=18, id='_', ctx=Store()),
                                            ],
                                            ctx=Store(),
                                        ),
                                    ],
                                    value=Call(
                                        lineno=80,
                                        col_offset=21,
                                        end_lineno=80,
                                        end_col_offset=39,
                                        func=Attribute(
                                            lineno=80,
                                            col_offset=21,
                                            end_lineno=80,
                                            end_col_offset=31,
                                            value=Name(lineno=80, col_offset=21, end_lineno=80, end_col_offset=24, id='url', ctx=Load()),
                                            attr='rsplit',
                                            ctx=Load(),
                                        ),
                                        args=[
                                            Constant(lineno=80, col_offset=32, end_lineno=80, end_col_offset=35, value='/', kind=None),
                                            Constant(lineno=80, col_offset=37, end_lineno=80, end_col_offset=38, value=1, kind=None),
                                        ],
                                        keywords=[],
                                    ),
                                    type_comment=None,
                                ),
                            ],
                            orelse=[],
                        ),
                        If(
                            lineno=81,
                            col_offset=8,
                            end_lineno=82,
                            end_col_offset=26,
                            test=Call(
                                lineno=81,
                                col_offset=11,
                                end_lineno=81,
                                end_col_offset=30,
                                func=Attribute(
                                    lineno=81,
                                    col_offset=11,
                                    end_lineno=81,
                                    end_col_offset=23,
                                    value=Name(lineno=81, col_offset=11, end_lineno=81, end_col_offset=14, id='url', ctx=Load()),
                                    attr='endswith',
                                    ctx=Load(),
                                ),
                                args=[Constant(lineno=81, col_offset=24, end_lineno=81, end_col_offset=29, value='.js', kind=None)],
                                keywords=[],
                            ),
                            body=[
                                Assign(
                                    lineno=82,
                                    col_offset=12,
                                    end_lineno=82,
                                    end_col_offset=26,
                                    targets=[Name(lineno=82, col_offset=12, end_lineno=82, end_col_offset=15, id='url', ctx=Store())],
                                    value=Subscript(
                                        lineno=82,
                                        col_offset=18,
                                        end_lineno=82,
                                        end_col_offset=26,
                                        value=Name(lineno=82, col_offset=18, end_lineno=82, end_col_offset=21, id='url', ctx=Load()),
                                        slice=Slice(
                                            lineno=82,
                                            col_offset=22,
                                            end_lineno=82,
                                            end_col_offset=25,
                                            lower=None,
                                            upper=UnaryOp(
                                                lineno=82,
                                                col_offset=23,
                                                end_lineno=82,
                                                end_col_offset=25,
                                                op=USub(),
                                                operand=Constant(lineno=82, col_offset=24, end_lineno=82, end_col_offset=25, value=3, kind=None),
                                            ),
                                            step=None,
                                        ),
                                        ctx=Load(),
                                    ),
                                    type_comment=None,
                                ),
                            ],
                            orelse=[],
                        ),
                        If(
                            lineno=83,
                            col_offset=8,
                            end_lineno=88,
                            end_col_offset=60,
                            test=Compare(
                                lineno=83,
                                col_offset=11,
                                end_lineno=83,
                                end_col_offset=33,
                                left=Subscript(
                                    lineno=83,
                                    col_offset=11,
                                    end_lineno=83,
                                    end_col_offset=24,
                                    value=Name(lineno=83, col_offset=11, end_lineno=83, end_col_offset=16, id='match', ctx=Load()),
                                    slice=Constant(lineno=83, col_offset=17, end_lineno=83, end_col_offset=23, value='type', kind=None),
                                    ctx=Load(),
                                ),
                                ops=[Eq()],
                                comparators=[Constant(lineno=83, col_offset=28, end_lineno=83, end_col_offset=33, value='src', kind=None)],
                            ),
                            body=[
                                Return(
                                    lineno=84,
                                    col_offset=12,
                                    end_lineno=84,
                                    end_col_offset=51,
                                    value=BinOp(
                                        lineno=84,
                                        col_offset=19,
                                        end_lineno=84,
                                        end_col_offset=51,
                                        left=Constant(lineno=84, col_offset=19, end_lineno=84, end_col_offset=26, value='@%s%s', kind=None),
                                        op=Mod(),
                                        right=Tuple(
                                            lineno=84,
                                            col_offset=29,
                                            end_lineno=84,
                                            end_col_offset=51,
                                            elts=[
                                                Subscript(
                                                    lineno=84,
                                                    col_offset=30,
                                                    end_lineno=84,
                                                    end_col_offset=45,
                                                    value=Name(lineno=84, col_offset=30, end_lineno=84, end_col_offset=35, id='match', ctx=Load()),
                                                    slice=Constant(lineno=84, col_offset=36, end_lineno=84, end_col_offset=44, value='module', kind=None),
                                                    ctx=Load(),
                                                ),
                                                Name(lineno=84, col_offset=47, end_lineno=84, end_col_offset=50, id='url', ctx=Load()),
                                            ],
                                            ctx=Load(),
                                        ),
                                    ),
                                ),
                            ],
                            orelse=[
                                If(
                                    lineno=85,
                                    col_offset=8,
                                    end_lineno=88,
                                    end_col_offset=60,
                                    test=Compare(
                                        lineno=85,
                                        col_offset=13,
                                        end_lineno=85,
                                        end_col_offset=35,
                                        left=Subscript(
                                            lineno=85,
                                            col_offset=13,
                                            end_lineno=85,
                                            end_col_offset=26,
                                            value=Name(lineno=85, col_offset=13, end_lineno=85, end_col_offset=18, id='match', ctx=Load()),
                                            slice=Constant(lineno=85, col_offset=19, end_lineno=85, end_col_offset=25, value='type', kind=None),
                                            ctx=Load(),
                                        ),
                                        ops=[Eq()],
                                        comparators=[Constant(lineno=85, col_offset=30, end_lineno=85, end_col_offset=35, value='lib', kind=None)],
                                    ),
                                    body=[
                                        Return(
                                            lineno=86,
                                            col_offset=12,
                                            end_lineno=86,
                                            end_col_offset=58,
                                            value=BinOp(
                                                lineno=86,
                                                col_offset=19,
                                                end_lineno=86,
                                                end_col_offset=58,
                                                left=Constant(lineno=86, col_offset=19, end_lineno=86, end_col_offset=33, value='@%s/../lib%s', kind=None),
                                                op=Mod(),
                                                right=Tuple(
                                                    lineno=86,
                                                    col_offset=36,
                                                    end_lineno=86,
                                                    end_col_offset=58,
                                                    elts=[
                                                        Subscript(
                                                            lineno=86,
                                                            col_offset=37,
                                                            end_lineno=86,
                                                            end_col_offset=52,
                                                            value=Name(lineno=86, col_offset=37, end_lineno=86, end_col_offset=42, id='match', ctx=Load()),
                                                            slice=Constant(lineno=86, col_offset=43, end_lineno=86, end_col_offset=51, value='module', kind=None),
                                                            ctx=Load(),
                                                        ),
                                                        Name(lineno=86, col_offset=54, end_lineno=86, end_col_offset=57, id='url', ctx=Load()),
                                                    ],
                                                    ctx=Load(),
                                                ),
                                            ),
                                        ),
                                    ],
                                    orelse=[
                                        Return(
                                            lineno=88,
                                            col_offset=12,
                                            end_lineno=88,
                                            end_col_offset=60,
                                            value=BinOp(
                                                lineno=88,
                                                col_offset=19,
                                                end_lineno=88,
                                                end_col_offset=60,
                                                left=Constant(lineno=88, col_offset=19, end_lineno=88, end_col_offset=35, value='@%s/../tests%s', kind=None),
                                                op=Mod(),
                                                right=Tuple(
                                                    lineno=88,
                                                    col_offset=38,
                                                    end_lineno=88,
                                                    end_col_offset=60,
                                                    elts=[
                                                        Subscript(
                                                            lineno=88,
                                                            col_offset=39,
                                                            end_lineno=88,
                                                            end_col_offset=54,
                                                            value=Name(lineno=88, col_offset=39, end_lineno=88, end_col_offset=44, id='match', ctx=Load()),
                                                            slice=Constant(lineno=88, col_offset=45, end_lineno=88, end_col_offset=53, value='module', kind=None),
                                                            ctx=Load(),
                                                        ),
                                                        Name(lineno=88, col_offset=56, end_lineno=88, end_col_offset=59, id='url', ctx=Load()),
                                                    ],
                                                    ctx=Load(),
                                                ),
                                            ),
                                        ),
                                    ],
                                ),
                            ],
                        ),
                    ],
                    orelse=[
                        Raise(
                            lineno=90,
                            col_offset=8,
                            end_lineno=90,
                            end_col_offset=119,
                            exc=Call(
                                lineno=90,
                                col_offset=14,
                                end_lineno=90,
                                end_col_offset=119,
                                func=Name(lineno=90, col_offset=14, end_lineno=90, end_col_offset=24, id='ValueError', ctx=Load()),
                                args=[
                                    BinOp(
                                        lineno=90,
                                        col_offset=25,
                                        end_lineno=90,
                                        end_col_offset=118,
                                        left=Constant(lineno=90, col_offset=25, end_lineno=90, end_col_offset=112, value="The js file %r must be in the folder '/static/src' or '/static/lib' or '/static/test'", kind=None),
                                        op=Mod(),
                                        right=Name(lineno=90, col_offset=115, end_lineno=90, end_col_offset=118, id='url', ctx=Load()),
                                    ),
                                ],
                                keywords=[],
                            ),
                            cause=None,
                        ),
                    ],
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=93,
            col_offset=0,
            end_lineno=104,
            end_col_offset=3,
            name='wrap_with_odoo_define',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(lineno=93, col_offset=26, end_lineno=93, end_col_offset=37, arg='module_path', annotation=None, type_comment=None),
                    arg(lineno=93, col_offset=39, end_lineno=93, end_col_offset=46, arg='content', annotation=None, type_comment=None),
                ],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=94,
                    col_offset=4,
                    end_lineno=97,
                    end_col_offset=7,
                    value=Constant(lineno=94, col_offset=4, end_lineno=97, end_col_offset=7, value='\n    Wraps the current content (source code) with the odoo.define call.\n    Should logically be called once all other operations have been performed.\n    ', kind=None),
                ),
                Return(
                    lineno=98,
                    col_offset=4,
                    end_lineno=104,
                    end_col_offset=3,
                    value=JoinedStr(
                        lineno=98,
                        col_offset=11,
                        end_lineno=104,
                        end_col_offset=3,
                        values=[
                            Constant(lineno=98, col_offset=11, end_lineno=104, end_col_offset=3, value='odoo.define(', kind=None),
                            FormattedValue(
                                lineno=98,
                                col_offset=11,
                                end_lineno=104,
                                end_col_offset=3,
                                value=Name(lineno=98, col_offset=12, end_lineno=98, end_col_offset=23, id='module_path', ctx=Load()),
                                conversion=114,
                                format_spec=None,
                            ),
                            Constant(lineno=98, col_offset=11, end_lineno=104, end_col_offset=3, value=", async function (require) {\n'use strict';\nlet __exports = {};\n", kind=None),
                            FormattedValue(
                                lineno=98,
                                col_offset=11,
                                end_lineno=104,
                                end_col_offset=3,
                                value=Name(lineno=101, col_offset=13, end_lineno=101, end_col_offset=20, id='content', ctx=Load()),
                                conversion=-1,
                                format_spec=None,
                            ),
                            Constant(lineno=98, col_offset=11, end_lineno=104, end_col_offset=3, value='\nreturn __exports;\n});\n', kind=None),
                        ],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=107,
            col_offset=0,
            end_lineno=113,
            end_col_offset=35,
            targets=[Name(lineno=107, col_offset=0, end_lineno=107, end_col_offset=22, id='EXPORT_FCT_OR_CLASS_RE', ctx=Store())],
            value=Call(
                lineno=107,
                col_offset=25,
                end_lineno=113,
                end_col_offset=35,
                func=Attribute(
                    lineno=107,
                    col_offset=25,
                    end_lineno=107,
                    end_col_offset=35,
                    value=Name(lineno=107, col_offset=25, end_lineno=107, end_col_offset=27, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=107, col_offset=36, end_lineno=113, end_col_offset=7, value='\n    ^\n    (?P<space>\\s*)                          # space and empty line\n    export\\s+                               # export\n    (?P<type>(async\\s+)?function|class)\\s+  # async function or function or class\n    (?P<identifier>\\w+)                     # name of the class or the function\n    ', kind=None),
                    BinOp(
                        lineno=113,
                        col_offset=9,
                        end_lineno=113,
                        end_col_offset=34,
                        left=Attribute(
                            lineno=113,
                            col_offset=9,
                            end_lineno=113,
                            end_col_offset=21,
                            value=Name(lineno=113, col_offset=9, end_lineno=113, end_col_offset=11, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=113,
                            col_offset=24,
                            end_lineno=113,
                            end_col_offset=34,
                            value=Name(lineno=113, col_offset=24, end_lineno=113, end_col_offset=26, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=116,
            col_offset=0,
            end_lineno=139,
            end_col_offset=52,
            name='convert_export_function_or_class',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=116, col_offset=37, end_lineno=116, end_col_offset=44, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=117,
                    col_offset=4,
                    end_lineno=137,
                    end_col_offset=7,
                    value=Constant(lineno=117, col_offset=4, end_lineno=137, end_col_offset=7, value='\n    Transpile functions and classes that are being exported.\n\n    .. code-block:: javascript\n\n        // before\n        export function name\n        // after\n        const name = __exports.name = function name\n\n        // before\n        export async function name\n        // after\n        const name = __exports.name = async function name\n\n        // before\n        export class name\n        // after\n        const name = __exports.name = class name\n\n    ', kind=None),
                ),
                Assign(
                    lineno=138,
                    col_offset=4,
                    end_lineno=138,
                    end_col_offset=96,
                    targets=[Name(lineno=138, col_offset=4, end_lineno=138, end_col_offset=8, id='repl', ctx=Store())],
                    value=Constant(lineno=138, col_offset=11, end_lineno=138, end_col_offset=96, value='\\g<space>const \\g<identifier> = __exports.\\g<identifier> = \\g<type> \\g<identifier>', kind=None),
                    type_comment=None,
                ),
                Return(
                    lineno=139,
                    col_offset=4,
                    end_lineno=139,
                    end_col_offset=52,
                    value=Call(
                        lineno=139,
                        col_offset=11,
                        end_lineno=139,
                        end_col_offset=52,
                        func=Attribute(
                            lineno=139,
                            col_offset=11,
                            end_lineno=139,
                            end_col_offset=37,
                            value=Name(lineno=139, col_offset=11, end_lineno=139, end_col_offset=33, id='EXPORT_FCT_OR_CLASS_RE', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=139, col_offset=38, end_lineno=139, end_col_offset=42, id='repl', ctx=Load()),
                            Name(lineno=139, col_offset=44, end_lineno=139, end_col_offset=51, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=142,
            col_offset=0,
            end_lineno=148,
            end_col_offset=35,
            targets=[Name(lineno=142, col_offset=0, end_lineno=142, end_col_offset=30, id='EXPORT_FCT_OR_CLASS_DEFAULT_RE', ctx=Store())],
            value=Call(
                lineno=142,
                col_offset=33,
                end_lineno=148,
                end_col_offset=35,
                func=Attribute(
                    lineno=142,
                    col_offset=33,
                    end_lineno=142,
                    end_col_offset=43,
                    value=Name(lineno=142, col_offset=33, end_lineno=142, end_col_offset=35, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=142, col_offset=44, end_lineno=148, end_col_offset=7, value='\n    ^\n    (?P<space>\\s*)                          # space and empty line\n    export\\s+default\\s+                     # export default\n    (?P<type>(async\\s+)?function|class)\\s+  # async function or function or class\n    (?P<identifier>\\w+)                     # name of the class or the function\n    ', kind=None),
                    BinOp(
                        lineno=148,
                        col_offset=9,
                        end_lineno=148,
                        end_col_offset=34,
                        left=Attribute(
                            lineno=148,
                            col_offset=9,
                            end_lineno=148,
                            end_col_offset=21,
                            value=Name(lineno=148, col_offset=9, end_lineno=148, end_col_offset=11, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=148,
                            col_offset=24,
                            end_lineno=148,
                            end_col_offset=34,
                            value=Name(lineno=148, col_offset=24, end_lineno=148, end_col_offset=26, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=151,
            col_offset=0,
            end_lineno=174,
            end_col_offset=60,
            name='convert_export_function_or_class_default',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=151, col_offset=45, end_lineno=151, end_col_offset=52, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=152,
                    col_offset=4,
                    end_lineno=172,
                    end_col_offset=7,
                    value=Constant(lineno=152, col_offset=4, end_lineno=172, end_col_offset=7, value='\n    Transpile functions and classes that are being exported as default value.\n\n    .. code-block:: javascript\n\n        // before\n        export default function name\n        // after\n        const name = __exports[Symbol.for("default")] = function name\n\n        // before\n        export default async function name\n        // after\n        const name = __exports[Symbol.for("default")] = async function name\n\n        // before\n        export default class name\n        // after\n        const name = __exports[Symbol.for("default")] = class name\n\n    ', kind=None),
                ),
                Assign(
                    lineno=173,
                    col_offset=4,
                    end_lineno=173,
                    end_col_offset=108,
                    targets=[Name(lineno=173, col_offset=4, end_lineno=173, end_col_offset=8, id='repl', ctx=Store())],
                    value=Constant(lineno=173, col_offset=11, end_lineno=173, end_col_offset=108, value='\\g<space>const \\g<identifier> = __exports[Symbol.for("default")] = \\g<type> \\g<identifier>', kind=None),
                    type_comment=None,
                ),
                Return(
                    lineno=174,
                    col_offset=4,
                    end_lineno=174,
                    end_col_offset=60,
                    value=Call(
                        lineno=174,
                        col_offset=11,
                        end_lineno=174,
                        end_col_offset=60,
                        func=Attribute(
                            lineno=174,
                            col_offset=11,
                            end_lineno=174,
                            end_col_offset=45,
                            value=Name(lineno=174, col_offset=11, end_lineno=174, end_col_offset=41, id='EXPORT_FCT_OR_CLASS_DEFAULT_RE', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=174, col_offset=46, end_lineno=174, end_col_offset=50, id='repl', ctx=Load()),
                            Name(lineno=174, col_offset=52, end_lineno=174, end_col_offset=59, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=177,
            col_offset=0,
            end_lineno=183,
            end_col_offset=35,
            targets=[Name(lineno=177, col_offset=0, end_lineno=177, end_col_offset=13, id='EXPORT_VAR_RE', ctx=Store())],
            value=Call(
                lineno=177,
                col_offset=16,
                end_lineno=183,
                end_col_offset=35,
                func=Attribute(
                    lineno=177,
                    col_offset=16,
                    end_lineno=177,
                    end_col_offset=26,
                    value=Name(lineno=177, col_offset=16, end_lineno=177, end_col_offset=18, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=177, col_offset=27, end_lineno=183, end_col_offset=7, value='\n    ^\n    (?P<space>\\s*)              # space and empty line\n    export\\s+                   # export\n    (?P<type>let|const|var)\\s+  # let or cont or var\n    (?P<identifier>\\w+)         # variable name\n    ', kind=None),
                    BinOp(
                        lineno=183,
                        col_offset=9,
                        end_lineno=183,
                        end_col_offset=34,
                        left=Attribute(
                            lineno=183,
                            col_offset=9,
                            end_lineno=183,
                            end_col_offset=21,
                            value=Name(lineno=183, col_offset=9, end_lineno=183, end_col_offset=11, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=183,
                            col_offset=24,
                            end_lineno=183,
                            end_col_offset=34,
                            value=Name(lineno=183, col_offset=24, end_lineno=183, end_col_offset=26, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=186,
            col_offset=0,
            end_lineno=200,
            end_col_offset=43,
            name='convert_variable_export',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=186, col_offset=28, end_lineno=186, end_col_offset=35, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=187,
                    col_offset=4,
                    end_lineno=198,
                    end_col_offset=7,
                    value=Constant(lineno=187, col_offset=4, end_lineno=198, end_col_offset=7, value='\n    Transpile variables that are being exported.\n\n    .. code-block:: javascript\n\n        // before\n        export let name\n        // after\n        let name = __exports.name\n        // (same with var and const)\n\n    ', kind=None),
                ),
                Assign(
                    lineno=199,
                    col_offset=4,
                    end_lineno=199,
                    end_col_offset=73,
                    targets=[Name(lineno=199, col_offset=4, end_lineno=199, end_col_offset=8, id='repl', ctx=Store())],
                    value=Constant(lineno=199, col_offset=11, end_lineno=199, end_col_offset=73, value='\\g<space>\\g<type> \\g<identifier> = __exports.\\g<identifier>', kind=None),
                    type_comment=None,
                ),
                Return(
                    lineno=200,
                    col_offset=4,
                    end_lineno=200,
                    end_col_offset=43,
                    value=Call(
                        lineno=200,
                        col_offset=11,
                        end_lineno=200,
                        end_col_offset=43,
                        func=Attribute(
                            lineno=200,
                            col_offset=11,
                            end_lineno=200,
                            end_col_offset=28,
                            value=Name(lineno=200, col_offset=11, end_lineno=200, end_col_offset=24, id='EXPORT_VAR_RE', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=200, col_offset=29, end_lineno=200, end_col_offset=33, id='repl', ctx=Load()),
                            Name(lineno=200, col_offset=35, end_lineno=200, end_col_offset=42, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=203,
            col_offset=0,
            end_lineno=209,
            end_col_offset=35,
            targets=[Name(lineno=203, col_offset=0, end_lineno=203, end_col_offset=21, id='EXPORT_DEFAULT_VAR_RE', ctx=Store())],
            value=Call(
                lineno=203,
                col_offset=24,
                end_lineno=209,
                end_col_offset=35,
                func=Attribute(
                    lineno=203,
                    col_offset=24,
                    end_lineno=203,
                    end_col_offset=34,
                    value=Name(lineno=203, col_offset=24, end_lineno=203, end_col_offset=26, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=203, col_offset=35, end_lineno=209, end_col_offset=7, value='\n    ^\n    (?P<space>\\s*)              # space and empty line\n    export\\s+default\\s+         # export default\n    (?P<type>let|const|var)\\s+  # let or const or var\n    (?P<identifier>\\w+)\\s*      # variable name\n    ', kind=None),
                    BinOp(
                        lineno=209,
                        col_offset=9,
                        end_lineno=209,
                        end_col_offset=34,
                        left=Attribute(
                            lineno=209,
                            col_offset=9,
                            end_lineno=209,
                            end_col_offset=21,
                            value=Name(lineno=209, col_offset=9, end_lineno=209, end_col_offset=11, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=209,
                            col_offset=24,
                            end_lineno=209,
                            end_col_offset=34,
                            value=Name(lineno=209, col_offset=24, end_lineno=209, end_col_offset=26, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=212,
            col_offset=0,
            end_lineno=225,
            end_col_offset=51,
            name='convert_variable_export_default',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=212, col_offset=36, end_lineno=212, end_col_offset=43, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=213,
                    col_offset=4,
                    end_lineno=223,
                    end_col_offset=7,
                    value=Constant(lineno=213, col_offset=4, end_lineno=223, end_col_offset=7, value='\n    Transpile the variables that are exported as default values.\n\n    .. code-block:: javascript\n\n        // before\n        export default let name\n        // after\n        let name = __exports[Symbol.for("default")]\n\n    ', kind=None),
                ),
                Assign(
                    lineno=224,
                    col_offset=4,
                    end_lineno=224,
                    end_col_offset=85,
                    targets=[Name(lineno=224, col_offset=4, end_lineno=224, end_col_offset=8, id='repl', ctx=Store())],
                    value=Constant(lineno=224, col_offset=11, end_lineno=224, end_col_offset=85, value='\\g<space>\\g<type> \\g<identifier> = __exports[Symbol.for("default")]', kind=None),
                    type_comment=None,
                ),
                Return(
                    lineno=225,
                    col_offset=4,
                    end_lineno=225,
                    end_col_offset=51,
                    value=Call(
                        lineno=225,
                        col_offset=11,
                        end_lineno=225,
                        end_col_offset=51,
                        func=Attribute(
                            lineno=225,
                            col_offset=11,
                            end_lineno=225,
                            end_col_offset=36,
                            value=Name(lineno=225, col_offset=11, end_lineno=225, end_col_offset=32, id='EXPORT_DEFAULT_VAR_RE', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=225, col_offset=37, end_lineno=225, end_col_offset=41, id='repl', ctx=Load()),
                            Name(lineno=225, col_offset=43, end_lineno=225, end_col_offset=50, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=228,
            col_offset=0,
            end_lineno=233,
            end_col_offset=35,
            targets=[Name(lineno=228, col_offset=0, end_lineno=228, end_col_offset=16, id='EXPORT_OBJECT_RE', ctx=Store())],
            value=Call(
                lineno=228,
                col_offset=19,
                end_lineno=233,
                end_col_offset=35,
                func=Attribute(
                    lineno=228,
                    col_offset=19,
                    end_lineno=228,
                    end_col_offset=29,
                    value=Name(lineno=228, col_offset=19, end_lineno=228, end_col_offset=21, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=228, col_offset=30, end_lineno=233, end_col_offset=7, value='\n    ^\n    (?P<space>\\s*)                      # space and empty line\n    export\\s*                           # export\n    (?P<object>{[\\w\\s,]+})              # { a, b, c as x, ... }\n    ', kind=None),
                    BinOp(
                        lineno=233,
                        col_offset=9,
                        end_lineno=233,
                        end_col_offset=34,
                        left=Attribute(
                            lineno=233,
                            col_offset=9,
                            end_lineno=233,
                            end_col_offset=21,
                            value=Name(lineno=233, col_offset=9, end_lineno=233, end_col_offset=11, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=233,
                            col_offset=24,
                            end_lineno=233,
                            end_col_offset=34,
                            value=Name(lineno=233, col_offset=24, end_lineno=233, end_col_offset=26, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=236,
            col_offset=0,
            end_lineno=251,
            end_col_offset=46,
            name='convert_object_export',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=236, col_offset=26, end_lineno=236, end_col_offset=33, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=237,
                    col_offset=4,
                    end_lineno=246,
                    end_col_offset=7,
                    value=Constant(lineno=237, col_offset=4, end_lineno=246, end_col_offset=7, value='\n    Transpile exports of multiple elements\n\n    .. code-block:: javascript\n\n        // before\n        export { a, b, c as x }\n        // after\n        Object.assign(__exports, { a, b, x: c })\n    ', kind=None),
                ),
                FunctionDef(
                    lineno=247,
                    col_offset=4,
                    end_lineno=250,
                    end_col_offset=67,
                    name='repl',
                    args=arguments(
                        posonlyargs=[],
                        args=[arg(lineno=247, col_offset=13, end_lineno=247, end_col_offset=21, arg='matchobj', annotation=None, type_comment=None)],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        Assign(
                            lineno=248,
                            col_offset=8,
                            end_lineno=248,
                            end_col_offset=112,
                            targets=[Name(lineno=248, col_offset=8, end_lineno=248, end_col_offset=22, id='object_process', ctx=Store())],
                            value=BinOp(
                                lineno=248,
                                col_offset=25,
                                end_lineno=248,
                                end_col_offset=112,
                                left=BinOp(
                                    lineno=248,
                                    col_offset=25,
                                    end_lineno=248,
                                    end_col_offset=106,
                                    left=Constant(lineno=248, col_offset=25, end_lineno=248, end_col_offset=28, value='{', kind=None),
                                    op=Add(),
                                    right=Call(
                                        lineno=248,
                                        col_offset=31,
                                        end_lineno=248,
                                        end_col_offset=106,
                                        func=Attribute(
                                            lineno=248,
                                            col_offset=31,
                                            end_lineno=248,
                                            end_col_offset=40,
                                            value=Constant(lineno=248, col_offset=31, end_lineno=248, end_col_offset=35, value=', ', kind=None),
                                            attr='join',
                                            ctx=Load(),
                                        ),
                                        args=[
                                            ListComp(
                                                lineno=248,
                                                col_offset=41,
                                                end_lineno=248,
                                                end_col_offset=105,
                                                elt=Call(
                                                    lineno=248,
                                                    col_offset=42,
                                                    end_lineno=248,
                                                    end_col_offset=57,
                                                    func=Name(lineno=248, col_offset=42, end_lineno=248, end_col_offset=52, id='convert_as', ctx=Load()),
                                                    args=[Name(lineno=248, col_offset=53, end_lineno=248, end_col_offset=56, id='val', ctx=Load())],
                                                    keywords=[],
                                                ),
                                                generators=[
                                                    comprehension(
                                                        target=Name(lineno=248, col_offset=62, end_lineno=248, end_col_offset=65, id='val', ctx=Store()),
                                                        iter=Call(
                                                            lineno=248,
                                                            col_offset=69,
                                                            end_lineno=248,
                                                            end_col_offset=104,
                                                            func=Attribute(
                                                                lineno=248,
                                                                col_offset=69,
                                                                end_lineno=248,
                                                                end_col_offset=99,
                                                                value=Subscript(
                                                                    lineno=248,
                                                                    col_offset=69,
                                                                    end_lineno=248,
                                                                    end_col_offset=93,
                                                                    value=Subscript(
                                                                        lineno=248,
                                                                        col_offset=69,
                                                                        end_lineno=248,
                                                                        end_col_offset=87,
                                                                        value=Name(lineno=248, col_offset=69, end_lineno=248, end_col_offset=77, id='matchobj', ctx=Load()),
                                                                        slice=Constant(lineno=248, col_offset=78, end_lineno=248, end_col_offset=86, value='object', kind=None),
                                                                        ctx=Load(),
                                                                    ),
                                                                    slice=Slice(
                                                                        lineno=248,
                                                                        col_offset=88,
                                                                        end_lineno=248,
                                                                        end_col_offset=92,
                                                                        lower=Constant(lineno=248, col_offset=88, end_lineno=248, end_col_offset=89, value=1, kind=None),
                                                                        upper=UnaryOp(
                                                                            lineno=248,
                                                                            col_offset=90,
                                                                            end_lineno=248,
                                                                            end_col_offset=92,
                                                                            op=USub(),
                                                                            operand=Constant(lineno=248, col_offset=91, end_lineno=248, end_col_offset=92, value=1, kind=None),
                                                                        ),
                                                                        step=None,
                                                                    ),
                                                                    ctx=Load(),
                                                                ),
                                                                attr='split',
                                                                ctx=Load(),
                                                            ),
                                                            args=[Constant(lineno=248, col_offset=100, end_lineno=248, end_col_offset=103, value=',', kind=None)],
                                                            keywords=[],
                                                        ),
                                                        ifs=[],
                                                        is_async=0,
                                                    ),
                                                ],
                                            ),
                                        ],
                                        keywords=[],
                                    ),
                                ),
                                op=Add(),
                                right=Constant(lineno=248, col_offset=109, end_lineno=248, end_col_offset=112, value='}', kind=None),
                            ),
                            type_comment=None,
                        ),
                        Assign(
                            lineno=249,
                            col_offset=8,
                            end_lineno=249,
                            end_col_offset=33,
                            targets=[Name(lineno=249, col_offset=8, end_lineno=249, end_col_offset=13, id='space', ctx=Store())],
                            value=Subscript(
                                lineno=249,
                                col_offset=16,
                                end_lineno=249,
                                end_col_offset=33,
                                value=Name(lineno=249, col_offset=16, end_lineno=249, end_col_offset=24, id='matchobj', ctx=Load()),
                                slice=Constant(lineno=249, col_offset=25, end_lineno=249, end_col_offset=32, value='space', kind=None),
                                ctx=Load(),
                            ),
                            type_comment=None,
                        ),
                        Return(
                            lineno=250,
                            col_offset=8,
                            end_lineno=250,
                            end_col_offset=67,
                            value=JoinedStr(
                                lineno=250,
                                col_offset=15,
                                end_lineno=250,
                                end_col_offset=67,
                                values=[
                                    FormattedValue(
                                        lineno=250,
                                        col_offset=15,
                                        end_lineno=250,
                                        end_col_offset=67,
                                        value=Name(lineno=250, col_offset=18, end_lineno=250, end_col_offset=23, id='space', ctx=Load()),
                                        conversion=-1,
                                        format_spec=None,
                                    ),
                                    Constant(lineno=250, col_offset=15, end_lineno=250, end_col_offset=67, value='Object.assign(__exports, ', kind=None),
                                    FormattedValue(
                                        lineno=250,
                                        col_offset=15,
                                        end_lineno=250,
                                        end_col_offset=67,
                                        value=Name(lineno=250, col_offset=50, end_lineno=250, end_col_offset=64, id='object_process', ctx=Load()),
                                        conversion=-1,
                                        format_spec=None,
                                    ),
                                    Constant(lineno=250, col_offset=15, end_lineno=250, end_col_offset=67, value=')', kind=None),
                                ],
                            ),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                Return(
                    lineno=251,
                    col_offset=4,
                    end_lineno=251,
                    end_col_offset=46,
                    value=Call(
                        lineno=251,
                        col_offset=11,
                        end_lineno=251,
                        end_col_offset=46,
                        func=Attribute(
                            lineno=251,
                            col_offset=11,
                            end_lineno=251,
                            end_col_offset=31,
                            value=Name(lineno=251, col_offset=11, end_lineno=251, end_col_offset=27, id='EXPORT_OBJECT_RE', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=251, col_offset=32, end_lineno=251, end_col_offset=36, id='repl', ctx=Load()),
                            Name(lineno=251, col_offset=38, end_lineno=251, end_col_offset=45, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=254,
            col_offset=0,
            end_lineno=261,
            end_col_offset=35,
            targets=[Name(lineno=254, col_offset=0, end_lineno=254, end_col_offset=14, id='EXPORT_FROM_RE', ctx=Store())],
            value=Call(
                lineno=254,
                col_offset=17,
                end_lineno=261,
                end_col_offset=35,
                func=Attribute(
                    lineno=254,
                    col_offset=17,
                    end_lineno=254,
                    end_col_offset=27,
                    value=Name(lineno=254, col_offset=17, end_lineno=254, end_col_offset=19, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=254, col_offset=28, end_lineno=261, end_col_offset=7, value='\n    ^\n    (?P<space>\\s*)                      # space and empty line\n    export\\s*                           # export\n    (?P<object>{[\\w\\s,]+})\\s*           # { a, b, c as x, ... }\n    from\\s*                             # from\n    (?P<path>(?P<quote>["\'`])([^"\'`]+)(?P=quote))   # "file path" ("some/path.js")\n    ', kind=None),
                    BinOp(
                        lineno=261,
                        col_offset=9,
                        end_lineno=261,
                        end_col_offset=34,
                        left=Attribute(
                            lineno=261,
                            col_offset=9,
                            end_lineno=261,
                            end_col_offset=21,
                            value=Name(lineno=261, col_offset=9, end_lineno=261, end_col_offset=11, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=261,
                            col_offset=24,
                            end_lineno=261,
                            end_col_offset=34,
                            value=Name(lineno=261, col_offset=24, end_lineno=261, end_col_offset=26, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=264,
            col_offset=0,
            end_lineno=284,
            end_col_offset=44,
            name='convert_from_export',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=264, col_offset=24, end_lineno=264, end_col_offset=31, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=265,
                    col_offset=4,
                    end_lineno=274,
                    end_col_offset=7,
                    value=Constant(lineno=265, col_offset=4, end_lineno=274, end_col_offset=7, value='\n    Transpile exports coming from another source\n\n    .. code-block:: javascript\n\n        // before\n        export { a, b, c as x } from "some/path.js"\n        // after\n        { a, b, c } = {require("some/path.js"); Object.assign(__exports, { a, b, x: c });}\n    ', kind=None),
                ),
                FunctionDef(
                    lineno=275,
                    col_offset=4,
                    end_lineno=283,
                    end_col_offset=9,
                    name='repl',
                    args=arguments(
                        posonlyargs=[],
                        args=[arg(lineno=275, col_offset=13, end_lineno=275, end_col_offset=21, arg='matchobj', annotation=None, type_comment=None)],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        Assign(
                            lineno=276,
                            col_offset=8,
                            end_lineno=276,
                            end_col_offset=108,
                            targets=[Name(lineno=276, col_offset=8, end_lineno=276, end_col_offset=20, id='object_clean', ctx=Store())],
                            value=BinOp(
                                lineno=276,
                                col_offset=23,
                                end_lineno=276,
                                end_col_offset=108,
                                left=BinOp(
                                    lineno=276,
                                    col_offset=23,
                                    end_lineno=276,
                                    end_col_offset=102,
                                    left=Constant(lineno=276, col_offset=23, end_lineno=276, end_col_offset=26, value='{', kind=None),
                                    op=Add(),
                                    right=Call(
                                        lineno=276,
                                        col_offset=29,
                                        end_lineno=276,
                                        end_col_offset=102,
                                        func=Attribute(
                                            lineno=276,
                                            col_offset=29,
                                            end_lineno=276,
                                            end_col_offset=37,
                                            value=Constant(lineno=276, col_offset=29, end_lineno=276, end_col_offset=32, value=',', kind=None),
                                            attr='join',
                                            ctx=Load(),
                                        ),
                                        args=[
                                            ListComp(
                                                lineno=276,
                                                col_offset=38,
                                                end_lineno=276,
                                                end_col_offset=101,
                                                elt=Call(
                                                    lineno=276,
                                                    col_offset=39,
                                                    end_lineno=276,
                                                    end_col_offset=53,
                                                    func=Name(lineno=276, col_offset=39, end_lineno=276, end_col_offset=48, id='remove_as', ctx=Load()),
                                                    args=[Name(lineno=276, col_offset=49, end_lineno=276, end_col_offset=52, id='val', ctx=Load())],
                                                    keywords=[],
                                                ),
                                                generators=[
                                                    comprehension(
                                                        target=Name(lineno=276, col_offset=58, end_lineno=276, end_col_offset=61, id='val', ctx=Store()),
                                                        iter=Call(
                                                            lineno=276,
                                                            col_offset=65,
                                                            end_lineno=276,
                                                            end_col_offset=100,
                                                            func=Attribute(
                                                                lineno=276,
                                                                col_offset=65,
                                                                end_lineno=276,
                                                                end_col_offset=95,
                                                                value=Subscript(
                                                                    lineno=276,
                                                                    col_offset=65,
                                                                    end_lineno=276,
                                                                    end_col_offset=89,
                                                                    value=Subscript(
                                                                        lineno=276,
                                                                        col_offset=65,
                                                                        end_lineno=276,
                                                                        end_col_offset=83,
                                                                        value=Name(lineno=276, col_offset=65, end_lineno=276, end_col_offset=73, id='matchobj', ctx=Load()),
                                                                        slice=Constant(lineno=276, col_offset=74, end_lineno=276, end_col_offset=82, value='object', kind=None),
                                                                        ctx=Load(),
                                                                    ),
                                                                    slice=Slice(
                                                                        lineno=276,
                                                                        col_offset=84,
                                                                        end_lineno=276,
                                                                        end_col_offset=88,
                                                                        lower=Constant(lineno=276, col_offset=84, end_lineno=276, end_col_offset=85, value=1, kind=None),
                                                                        upper=UnaryOp(
                                                                            lineno=276,
                                                                            col_offset=86,
                                                                            end_lineno=276,
                                                                            end_col_offset=88,
                                                                            op=USub(),
                                                                            operand=Constant(lineno=276, col_offset=87, end_lineno=276, end_col_offset=88, value=1, kind=None),
                                                                        ),
                                                                        step=None,
                                                                    ),
                                                                    ctx=Load(),
                                                                ),
                                                                attr='split',
                                                                ctx=Load(),
                                                            ),
                                                            args=[Constant(lineno=276, col_offset=96, end_lineno=276, end_col_offset=99, value=',', kind=None)],
                                                            keywords=[],
                                                        ),
                                                        ifs=[],
                                                        is_async=0,
                                                    ),
                                                ],
                                            ),
                                        ],
                                        keywords=[],
                                    ),
                                ),
                                op=Add(),
                                right=Constant(lineno=276, col_offset=105, end_lineno=276, end_col_offset=108, value='}', kind=None),
                            ),
                            type_comment=None,
                        ),
                        Assign(
                            lineno=277,
                            col_offset=8,
                            end_lineno=277,
                            end_col_offset=112,
                            targets=[Name(lineno=277, col_offset=8, end_lineno=277, end_col_offset=22, id='object_process', ctx=Store())],
                            value=BinOp(
                                lineno=277,
                                col_offset=25,
                                end_lineno=277,
                                end_col_offset=112,
                                left=BinOp(
                                    lineno=277,
                                    col_offset=25,
                                    end_lineno=277,
                                    end_col_offset=106,
                                    left=Constant(lineno=277, col_offset=25, end_lineno=277, end_col_offset=28, value='{', kind=None),
                                    op=Add(),
                                    right=Call(
                                        lineno=277,
                                        col_offset=31,
                                        end_lineno=277,
                                        end_col_offset=106,
                                        func=Attribute(
                                            lineno=277,
                                            col_offset=31,
                                            end_lineno=277,
                                            end_col_offset=40,
                                            value=Constant(lineno=277, col_offset=31, end_lineno=277, end_col_offset=35, value=', ', kind=None),
                                            attr='join',
                                            ctx=Load(),
                                        ),
                                        args=[
                                            ListComp(
                                                lineno=277,
                                                col_offset=41,
                                                end_lineno=277,
                                                end_col_offset=105,
                                                elt=Call(
                                                    lineno=277,
                                                    col_offset=42,
                                                    end_lineno=277,
                                                    end_col_offset=57,
                                                    func=Name(lineno=277, col_offset=42, end_lineno=277, end_col_offset=52, id='convert_as', ctx=Load()),
                                                    args=[Name(lineno=277, col_offset=53, end_lineno=277, end_col_offset=56, id='val', ctx=Load())],
                                                    keywords=[],
                                                ),
                                                generators=[
                                                    comprehension(
                                                        target=Name(lineno=277, col_offset=62, end_lineno=277, end_col_offset=65, id='val', ctx=Store()),
                                                        iter=Call(
                                                            lineno=277,
                                                            col_offset=69,
                                                            end_lineno=277,
                                                            end_col_offset=104,
                                                            func=Attribute(
                                                                lineno=277,
                                                                col_offset=69,
                                                                end_lineno=277,
                                                                end_col_offset=99,
                                                                value=Subscript(
                                                                    lineno=277,
                                                                    col_offset=69,
                                                                    end_lineno=277,
                                                                    end_col_offset=93,
                                                                    value=Subscript(
                                                                        lineno=277,
                                                                        col_offset=69,
                                                                        end_lineno=277,
                                                                        end_col_offset=87,
                                                                        value=Name(lineno=277, col_offset=69, end_lineno=277, end_col_offset=77, id='matchobj', ctx=Load()),
                                                                        slice=Constant(lineno=277, col_offset=78, end_lineno=277, end_col_offset=86, value='object', kind=None),
                                                                        ctx=Load(),
                                                                    ),
                                                                    slice=Slice(
                                                                        lineno=277,
                                                                        col_offset=88,
                                                                        end_lineno=277,
                                                                        end_col_offset=92,
                                                                        lower=Constant(lineno=277, col_offset=88, end_lineno=277, end_col_offset=89, value=1, kind=None),
                                                                        upper=UnaryOp(
                                                                            lineno=277,
                                                                            col_offset=90,
                                                                            end_lineno=277,
                                                                            end_col_offset=92,
                                                                            op=USub(),
                                                                            operand=Constant(lineno=277, col_offset=91, end_lineno=277, end_col_offset=92, value=1, kind=None),
                                                                        ),
                                                                        step=None,
                                                                    ),
                                                                    ctx=Load(),
                                                                ),
                                                                attr='split',
                                                                ctx=Load(),
                                                            ),
                                                            args=[Constant(lineno=277, col_offset=100, end_lineno=277, end_col_offset=103, value=',', kind=None)],
                                                            keywords=[],
                                                        ),
                                                        ifs=[],
                                                        is_async=0,
                                                    ),
                                                ],
                                            ),
                                        ],
                                        keywords=[],
                                    ),
                                ),
                                op=Add(),
                                right=Constant(lineno=277, col_offset=109, end_lineno=277, end_col_offset=112, value='}', kind=None),
                            ),
                            type_comment=None,
                        ),
                        Return(
                            lineno=278,
                            col_offset=8,
                            end_lineno=283,
                            end_col_offset=9,
                            value=BinOp(
                                lineno=278,
                                col_offset=15,
                                end_lineno=283,
                                end_col_offset=9,
                                left=Constant(lineno=278, col_offset=15, end_lineno=278, end_col_offset=115, value='%(space)s{const %(object_clean)s = require(%(path)s);Object.assign(__exports, %(object_process)s)}', kind=None),
                                op=Mod(),
                                right=Dict(
                                    lineno=278,
                                    col_offset=118,
                                    end_lineno=283,
                                    end_col_offset=9,
                                    keys=[
                                        Constant(lineno=279, col_offset=12, end_lineno=279, end_col_offset=26, value='object_clean', kind=None),
                                        Constant(lineno=280, col_offset=12, end_lineno=280, end_col_offset=28, value='object_process', kind=None),
                                        Constant(lineno=281, col_offset=12, end_lineno=281, end_col_offset=19, value='space', kind=None),
                                        Constant(lineno=282, col_offset=12, end_lineno=282, end_col_offset=18, value='path', kind=None),
                                    ],
                                    values=[
                                        Name(lineno=279, col_offset=28, end_lineno=279, end_col_offset=40, id='object_clean', ctx=Load()),
                                        Name(lineno=280, col_offset=30, end_lineno=280, end_col_offset=44, id='object_process', ctx=Load()),
                                        Subscript(
                                            lineno=281,
                                            col_offset=21,
                                            end_lineno=281,
                                            end_col_offset=38,
                                            value=Name(lineno=281, col_offset=21, end_lineno=281, end_col_offset=29, id='matchobj', ctx=Load()),
                                            slice=Constant(lineno=281, col_offset=30, end_lineno=281, end_col_offset=37, value='space', kind=None),
                                            ctx=Load(),
                                        ),
                                        Subscript(
                                            lineno=282,
                                            col_offset=20,
                                            end_lineno=282,
                                            end_col_offset=36,
                                            value=Name(lineno=282, col_offset=20, end_lineno=282, end_col_offset=28, id='matchobj', ctx=Load()),
                                            slice=Constant(lineno=282, col_offset=29, end_lineno=282, end_col_offset=35, value='path', kind=None),
                                            ctx=Load(),
                                        ),
                                    ],
                                ),
                            ),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                Return(
                    lineno=284,
                    col_offset=4,
                    end_lineno=284,
                    end_col_offset=44,
                    value=Call(
                        lineno=284,
                        col_offset=11,
                        end_lineno=284,
                        end_col_offset=44,
                        func=Attribute(
                            lineno=284,
                            col_offset=11,
                            end_lineno=284,
                            end_col_offset=29,
                            value=Name(lineno=284, col_offset=11, end_lineno=284, end_col_offset=25, id='EXPORT_FROM_RE', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=284, col_offset=30, end_lineno=284, end_col_offset=34, id='repl', ctx=Load()),
                            Name(lineno=284, col_offset=36, end_lineno=284, end_col_offset=43, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=287,
            col_offset=0,
            end_lineno=292,
            end_col_offset=35,
            targets=[Name(lineno=287, col_offset=0, end_lineno=287, end_col_offset=19, id='EXPORT_STAR_FROM_RE', ctx=Store())],
            value=Call(
                lineno=287,
                col_offset=22,
                end_lineno=292,
                end_col_offset=35,
                func=Attribute(
                    lineno=287,
                    col_offset=22,
                    end_lineno=287,
                    end_col_offset=32,
                    value=Name(lineno=287, col_offset=22, end_lineno=287, end_col_offset=24, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=287, col_offset=33, end_lineno=292, end_col_offset=7, value='\n    ^\n    (?P<space>\\s*)                      # space and empty line\n    export\\s*\\*\\s*from\\s*               # export * from\n    (?P<path>(?P<quote>["\'`])([^"\'`]+)(?P=quote))   # "file path" ("some/path.js")\n    ', kind=None),
                    BinOp(
                        lineno=292,
                        col_offset=9,
                        end_lineno=292,
                        end_col_offset=34,
                        left=Attribute(
                            lineno=292,
                            col_offset=9,
                            end_lineno=292,
                            end_col_offset=21,
                            value=Name(lineno=292, col_offset=9, end_lineno=292, end_col_offset=11, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=292,
                            col_offset=24,
                            end_lineno=292,
                            end_col_offset=34,
                            value=Name(lineno=292, col_offset=24, end_lineno=292, end_col_offset=26, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=295,
            col_offset=0,
            end_lineno=307,
            end_col_offset=49,
            name='convert_star_from_export',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=295, col_offset=29, end_lineno=295, end_col_offset=36, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=296,
                    col_offset=4,
                    end_lineno=305,
                    end_col_offset=7,
                    value=Constant(lineno=296, col_offset=4, end_lineno=305, end_col_offset=7, value='\n    Transpile exports star coming from another source\n\n    .. code-block:: javascript\n\n        // before\n        export * from "some/path.js"\n        // after\n        Object.assign(__exports, require("some/path.js"))\n    ', kind=None),
                ),
                Assign(
                    lineno=306,
                    col_offset=4,
                    end_lineno=306,
                    end_col_offset=66,
                    targets=[Name(lineno=306, col_offset=4, end_lineno=306, end_col_offset=8, id='repl', ctx=Store())],
                    value=Constant(lineno=306, col_offset=11, end_lineno=306, end_col_offset=66, value='\\g<space>Object.assign(__exports, require(\\g<path>))', kind=None),
                    type_comment=None,
                ),
                Return(
                    lineno=307,
                    col_offset=4,
                    end_lineno=307,
                    end_col_offset=49,
                    value=Call(
                        lineno=307,
                        col_offset=11,
                        end_lineno=307,
                        end_col_offset=49,
                        func=Attribute(
                            lineno=307,
                            col_offset=11,
                            end_lineno=307,
                            end_col_offset=34,
                            value=Name(lineno=307, col_offset=11, end_lineno=307, end_col_offset=30, id='EXPORT_STAR_FROM_RE', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=307, col_offset=35, end_lineno=307, end_col_offset=39, id='repl', ctx=Load()),
                            Name(lineno=307, col_offset=41, end_lineno=307, end_col_offset=48, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=310,
            col_offset=0,
            end_lineno=315,
            end_col_offset=35,
            targets=[Name(lineno=310, col_offset=0, end_lineno=310, end_col_offset=17, id='EXPORT_DEFAULT_RE', ctx=Store())],
            value=Call(
                lineno=310,
                col_offset=20,
                end_lineno=315,
                end_col_offset=35,
                func=Attribute(
                    lineno=310,
                    col_offset=20,
                    end_lineno=310,
                    end_col_offset=30,
                    value=Name(lineno=310, col_offset=20, end_lineno=310, end_col_offset=22, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=310, col_offset=31, end_lineno=315, end_col_offset=7, value='\n    ^\n    (?P<space>\\s*)      # space and empty line\n    export\\s+default    # export default\n    (\\s+\\w+\\s*=)?       # something (optional)\n    ', kind=None),
                    BinOp(
                        lineno=315,
                        col_offset=9,
                        end_lineno=315,
                        end_col_offset=34,
                        left=Attribute(
                            lineno=315,
                            col_offset=9,
                            end_lineno=315,
                            end_col_offset=21,
                            value=Name(lineno=315, col_offset=9, end_lineno=315, end_col_offset=11, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=315,
                            col_offset=24,
                            end_lineno=315,
                            end_col_offset=34,
                            value=Name(lineno=315, col_offset=24, end_lineno=315, end_col_offset=26, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=318,
            col_offset=0,
            end_lineno=342,
            end_col_offset=51,
            name='convert_default_export',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=318, col_offset=27, end_lineno=318, end_col_offset=34, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=319,
                    col_offset=4,
                    end_lineno=338,
                    end_col_offset=7,
                    value=Constant(lineno=319, col_offset=4, end_lineno=338, end_col_offset=7, value='\n    This function handles the default exports.\n    Either by calling another operation with a TRUE flag, and if any default is left, doing a simple replacement.\n\n    (see convert_export_function_or_class_default and convert_variable_export_default).\n    +\n    .. code-block:: javascript\n\n        // before\n        export default\n        // after\n        __exports[Symbol.for("default")] =\n\n    .. code-block:: javascript\n\n        // before\n        export default something =\n        // after\n        __exports[Symbol.for("default")] =\n    ', kind=None),
                ),
                Assign(
                    lineno=339,
                    col_offset=4,
                    end_lineno=339,
                    end_col_offset=67,
                    targets=[Name(lineno=339, col_offset=4, end_lineno=339, end_col_offset=15, id='new_content', ctx=Store())],
                    value=Call(
                        lineno=339,
                        col_offset=18,
                        end_lineno=339,
                        end_col_offset=67,
                        func=Name(lineno=339, col_offset=18, end_lineno=339, end_col_offset=58, id='convert_export_function_or_class_default', ctx=Load()),
                        args=[Name(lineno=339, col_offset=59, end_lineno=339, end_col_offset=66, id='content', ctx=Load())],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=340,
                    col_offset=4,
                    end_lineno=340,
                    end_col_offset=62,
                    targets=[Name(lineno=340, col_offset=4, end_lineno=340, end_col_offset=15, id='new_content', ctx=Store())],
                    value=Call(
                        lineno=340,
                        col_offset=18,
                        end_lineno=340,
                        end_col_offset=62,
                        func=Name(lineno=340, col_offset=18, end_lineno=340, end_col_offset=49, id='convert_variable_export_default', ctx=Load()),
                        args=[Name(lineno=340, col_offset=50, end_lineno=340, end_col_offset=61, id='new_content', ctx=Load())],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=341,
                    col_offset=4,
                    end_lineno=341,
                    end_col_offset=61,
                    targets=[Name(lineno=341, col_offset=4, end_lineno=341, end_col_offset=8, id='repl', ctx=Store())],
                    value=Constant(lineno=341, col_offset=11, end_lineno=341, end_col_offset=61, value='\\g<space>__exports[Symbol.for("default")] =', kind=None),
                    type_comment=None,
                ),
                Return(
                    lineno=342,
                    col_offset=4,
                    end_lineno=342,
                    end_col_offset=51,
                    value=Call(
                        lineno=342,
                        col_offset=11,
                        end_lineno=342,
                        end_col_offset=51,
                        func=Attribute(
                            lineno=342,
                            col_offset=11,
                            end_lineno=342,
                            end_col_offset=32,
                            value=Name(lineno=342, col_offset=11, end_lineno=342, end_col_offset=28, id='EXPORT_DEFAULT_RE', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=342, col_offset=33, end_lineno=342, end_col_offset=37, id='repl', ctx=Load()),
                            Name(lineno=342, col_offset=39, end_lineno=342, end_col_offset=50, id='new_content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=345,
            col_offset=0,
            end_lineno=352,
            end_col_offset=35,
            targets=[Name(lineno=345, col_offset=0, end_lineno=345, end_col_offset=15, id='IMPORT_BASIC_RE', ctx=Store())],
            value=Call(
                lineno=345,
                col_offset=18,
                end_lineno=352,
                end_col_offset=35,
                func=Attribute(
                    lineno=345,
                    col_offset=18,
                    end_lineno=345,
                    end_col_offset=28,
                    value=Name(lineno=345, col_offset=18, end_lineno=345, end_col_offset=20, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=345, col_offset=29, end_lineno=352, end_col_offset=7, value='\n    ^\n    (?P<space>\\s*)                      # space and empty line\n    import\\s+                           # import\n    (?P<object>{(\\s*\\w+\\s*,?\\s*)+})\\s*  # { a, b, c as x, ... }\n    from\\s*                             # from\n    (?P<path>(?P<quote>["\'`])([^"\'`]+)(?P=quote))   # "file path" ("some/path")\n    ', kind=None),
                    BinOp(
                        lineno=352,
                        col_offset=9,
                        end_lineno=352,
                        end_col_offset=34,
                        left=Attribute(
                            lineno=352,
                            col_offset=9,
                            end_lineno=352,
                            end_col_offset=21,
                            value=Name(lineno=352, col_offset=9, end_lineno=352, end_col_offset=11, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=352,
                            col_offset=24,
                            end_lineno=352,
                            end_col_offset=34,
                            value=Name(lineno=352, col_offset=24, end_lineno=352, end_col_offset=26, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=355,
            col_offset=0,
            end_lineno=369,
            end_col_offset=45,
            name='convert_basic_import',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=355, col_offset=25, end_lineno=355, end_col_offset=32, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=356,
                    col_offset=4,
                    end_lineno=365,
                    end_col_offset=7,
                    value=Constant(lineno=356, col_offset=4, end_lineno=365, end_col_offset=7, value='\n    Transpile the simpler import call.\n\n    .. code-block:: javascript\n\n        // before\n        import { a, b, c as x } from "some/path"\n        // after\n        const {a, b, c: x} = require("some/path")\n    ', kind=None),
                ),
                FunctionDef(
                    lineno=366,
                    col_offset=4,
                    end_lineno=368,
                    end_col_offset=85,
                    name='repl',
                    args=arguments(
                        posonlyargs=[],
                        args=[arg(lineno=366, col_offset=13, end_lineno=366, end_col_offset=21, arg='matchobj', annotation=None, type_comment=None)],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        Assign(
                            lineno=367,
                            col_offset=8,
                            end_lineno=367,
                            end_col_offset=61,
                            targets=[Name(lineno=367, col_offset=8, end_lineno=367, end_col_offset=18, id='new_object', ctx=Store())],
                            value=Call(
                                lineno=367,
                                col_offset=21,
                                end_lineno=367,
                                end_col_offset=61,
                                func=Attribute(
                                    lineno=367,
                                    col_offset=21,
                                    end_lineno=367,
                                    end_col_offset=47,
                                    value=Subscript(
                                        lineno=367,
                                        col_offset=21,
                                        end_lineno=367,
                                        end_col_offset=39,
                                        value=Name(lineno=367, col_offset=21, end_lineno=367, end_col_offset=29, id='matchobj', ctx=Load()),
                                        slice=Constant(lineno=367, col_offset=30, end_lineno=367, end_col_offset=38, value='object', kind=None),
                                        ctx=Load(),
                                    ),
                                    attr='replace',
                                    ctx=Load(),
                                ),
                                args=[
                                    Constant(lineno=367, col_offset=48, end_lineno=367, end_col_offset=54, value=' as ', kind=None),
                                    Constant(lineno=367, col_offset=56, end_lineno=367, end_col_offset=60, value=': ', kind=None),
                                ],
                                keywords=[],
                            ),
                            type_comment=None,
                        ),
                        Return(
                            lineno=368,
                            col_offset=8,
                            end_lineno=368,
                            end_col_offset=85,
                            value=JoinedStr(
                                lineno=368,
                                col_offset=15,
                                end_lineno=368,
                                end_col_offset=85,
                                values=[
                                    FormattedValue(
                                        lineno=368,
                                        col_offset=15,
                                        end_lineno=368,
                                        end_col_offset=85,
                                        value=Subscript(
                                            lineno=368,
                                            col_offset=18,
                                            end_lineno=368,
                                            end_col_offset=35,
                                            value=Name(lineno=368, col_offset=18, end_lineno=368, end_col_offset=26, id='matchobj', ctx=Load()),
                                            slice=Constant(lineno=368, col_offset=27, end_lineno=368, end_col_offset=34, value='space', kind=None),
                                            ctx=Load(),
                                        ),
                                        conversion=-1,
                                        format_spec=None,
                                    ),
                                    Constant(lineno=368, col_offset=15, end_lineno=368, end_col_offset=85, value='const ', kind=None),
                                    FormattedValue(
                                        lineno=368,
                                        col_offset=15,
                                        end_lineno=368,
                                        end_col_offset=85,
                                        value=Name(lineno=368, col_offset=43, end_lineno=368, end_col_offset=53, id='new_object', ctx=Load()),
                                        conversion=-1,
                                        format_spec=None,
                                    ),
                                    Constant(lineno=368, col_offset=15, end_lineno=368, end_col_offset=85, value=' = require(', kind=None),
                                    FormattedValue(
                                        lineno=368,
                                        col_offset=15,
                                        end_lineno=368,
                                        end_col_offset=85,
                                        value=Subscript(
                                            lineno=368,
                                            col_offset=66,
                                            end_lineno=368,
                                            end_col_offset=82,
                                            value=Name(lineno=368, col_offset=66, end_lineno=368, end_col_offset=74, id='matchobj', ctx=Load()),
                                            slice=Constant(lineno=368, col_offset=75, end_lineno=368, end_col_offset=81, value='path', kind=None),
                                            ctx=Load(),
                                        ),
                                        conversion=-1,
                                        format_spec=None,
                                    ),
                                    Constant(lineno=368, col_offset=15, end_lineno=368, end_col_offset=85, value=')', kind=None),
                                ],
                            ),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                Return(
                    lineno=369,
                    col_offset=4,
                    end_lineno=369,
                    end_col_offset=45,
                    value=Call(
                        lineno=369,
                        col_offset=11,
                        end_lineno=369,
                        end_col_offset=45,
                        func=Attribute(
                            lineno=369,
                            col_offset=11,
                            end_lineno=369,
                            end_col_offset=30,
                            value=Name(lineno=369, col_offset=11, end_lineno=369, end_col_offset=26, id='IMPORT_BASIC_RE', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=369, col_offset=31, end_lineno=369, end_col_offset=35, id='repl', ctx=Load()),
                            Name(lineno=369, col_offset=37, end_lineno=369, end_col_offset=44, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=372,
            col_offset=0,
            end_lineno=379,
            end_col_offset=35,
            targets=[Name(lineno=372, col_offset=0, end_lineno=372, end_col_offset=24, id='IMPORT_LEGACY_DEFAULT_RE', ctx=Store())],
            value=Call(
                lineno=372,
                col_offset=27,
                end_lineno=379,
                end_col_offset=35,
                func=Attribute(
                    lineno=372,
                    col_offset=27,
                    end_lineno=372,
                    end_col_offset=37,
                    value=Name(lineno=372, col_offset=27, end_lineno=372, end_col_offset=29, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=372, col_offset=38, end_lineno=379, end_col_offset=7, value='\n    ^\n    (?P<space>\\s*)                                      # space and empty line\n    import\\s+                                           # import\n    (?P<identifier>\\w+)\\s*                              # default variable name\n    from\\s*                                             # from\n    (?P<path>(?P<quote>["\'`])([^@\\."\'`][^"\'`]*)(?P=quote))  # legacy alias file ("addon_name.module_name" or "some/path")\n    ', kind=None),
                    BinOp(
                        lineno=379,
                        col_offset=9,
                        end_lineno=379,
                        end_col_offset=34,
                        left=Attribute(
                            lineno=379,
                            col_offset=9,
                            end_lineno=379,
                            end_col_offset=21,
                            value=Name(lineno=379, col_offset=9, end_lineno=379, end_col_offset=11, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=379,
                            col_offset=24,
                            end_lineno=379,
                            end_col_offset=34,
                            value=Name(lineno=379, col_offset=24, end_lineno=379, end_col_offset=26, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=382,
            col_offset=0,
            end_lineno=396,
            end_col_offset=54,
            name='convert_legacy_default_import',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=382, col_offset=34, end_lineno=382, end_col_offset=41, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=383,
                    col_offset=4,
                    end_lineno=394,
                    end_col_offset=7,
                    value=Constant(lineno=383, col_offset=4, end_lineno=394, end_col_offset=7, value='\n    Transpile legacy imports (that were used as they were default import).\n    Legacy imports means that their name is not a path but a <addon_name>.<module_name>.\n    It requires slightly different processing.\n\n    .. code-block:: javascript\n\n        // before\n        import module_name from "addon.module_name"\n        // after\n        const module_name = require("addon.module_name")\n    ', kind=None),
                ),
                Assign(
                    lineno=395,
                    col_offset=4,
                    end_lineno=395,
                    end_col_offset=67,
                    targets=[Name(lineno=395, col_offset=4, end_lineno=395, end_col_offset=8, id='repl', ctx=Store())],
                    value=Constant(lineno=395, col_offset=11, end_lineno=395, end_col_offset=67, value='\\g<space>const \\g<identifier> = require(\\g<path>)', kind=None),
                    type_comment=None,
                ),
                Return(
                    lineno=396,
                    col_offset=4,
                    end_lineno=396,
                    end_col_offset=54,
                    value=Call(
                        lineno=396,
                        col_offset=11,
                        end_lineno=396,
                        end_col_offset=54,
                        func=Attribute(
                            lineno=396,
                            col_offset=11,
                            end_lineno=396,
                            end_col_offset=39,
                            value=Name(lineno=396, col_offset=11, end_lineno=396, end_col_offset=35, id='IMPORT_LEGACY_DEFAULT_RE', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=396, col_offset=40, end_lineno=396, end_col_offset=44, id='repl', ctx=Load()),
                            Name(lineno=396, col_offset=46, end_lineno=396, end_col_offset=53, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=399,
            col_offset=0,
            end_lineno=406,
            end_col_offset=35,
            targets=[Name(lineno=399, col_offset=0, end_lineno=399, end_col_offset=14, id='IMPORT_DEFAULT', ctx=Store())],
            value=Call(
                lineno=399,
                col_offset=17,
                end_lineno=406,
                end_col_offset=35,
                func=Attribute(
                    lineno=399,
                    col_offset=17,
                    end_lineno=399,
                    end_col_offset=27,
                    value=Name(lineno=399, col_offset=17, end_lineno=399, end_col_offset=19, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=399, col_offset=28, end_lineno=406, end_col_offset=7, value='\n    ^\n    (?P<space>\\s*)                      # space and empty line\n    import\\s+                           # import\n    (?P<identifier>\\w+)\\s*              # default variable name\n    from\\s*                             # from\n    (?P<path>(?P<quote>["\'`])([^"\'`]+)(?P=quote))   # "file path" ("some/path")\n    ', kind=None),
                    BinOp(
                        lineno=406,
                        col_offset=9,
                        end_lineno=406,
                        end_col_offset=34,
                        left=Attribute(
                            lineno=406,
                            col_offset=9,
                            end_lineno=406,
                            end_col_offset=21,
                            value=Name(lineno=406, col_offset=9, end_lineno=406, end_col_offset=11, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=406,
                            col_offset=24,
                            end_lineno=406,
                            end_col_offset=34,
                            value=Name(lineno=406, col_offset=24, end_lineno=406, end_col_offset=26, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=409,
            col_offset=0,
            end_lineno=421,
            end_col_offset=44,
            name='convert_default_import',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=409, col_offset=27, end_lineno=409, end_col_offset=34, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=410,
                    col_offset=4,
                    end_lineno=419,
                    end_col_offset=7,
                    value=Constant(lineno=410, col_offset=4, end_lineno=419, end_col_offset=7, value='\n    Transpile the default import call.\n\n    .. code-block:: javascript\n\n        // before\n        import something from "some/path"\n        // after\n        const something = require("some/path")[Symbol.for("default")]\n    ', kind=None),
                ),
                Assign(
                    lineno=420,
                    col_offset=4,
                    end_lineno=420,
                    end_col_offset=90,
                    targets=[Name(lineno=420, col_offset=4, end_lineno=420, end_col_offset=8, id='repl', ctx=Store())],
                    value=Constant(lineno=420, col_offset=11, end_lineno=420, end_col_offset=90, value='\\g<space>const \\g<identifier> = require(\\g<path>)[Symbol.for("default")]', kind=None),
                    type_comment=None,
                ),
                Return(
                    lineno=421,
                    col_offset=4,
                    end_lineno=421,
                    end_col_offset=44,
                    value=Call(
                        lineno=421,
                        col_offset=11,
                        end_lineno=421,
                        end_col_offset=44,
                        func=Attribute(
                            lineno=421,
                            col_offset=11,
                            end_lineno=421,
                            end_col_offset=29,
                            value=Name(lineno=421, col_offset=11, end_lineno=421, end_col_offset=25, id='IMPORT_DEFAULT', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=421, col_offset=30, end_lineno=421, end_col_offset=34, id='repl', ctx=Load()),
                            Name(lineno=421, col_offset=36, end_lineno=421, end_col_offset=43, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=424,
            col_offset=0,
            end_lineno=426,
            end_col_offset=20,
            targets=[Name(lineno=424, col_offset=0, end_lineno=424, end_col_offset=19, id='RELATIVE_REQUIRE_RE', ctx=Store())],
            value=Call(
                lineno=424,
                col_offset=22,
                end_lineno=426,
                end_col_offset=20,
                func=Attribute(
                    lineno=424,
                    col_offset=22,
                    end_lineno=424,
                    end_col_offset=32,
                    value=Name(lineno=424, col_offset=22, end_lineno=424, end_col_offset=24, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=424, col_offset=33, end_lineno=426, end_col_offset=7, value='\n    require\\((?P<quote>["\'`])([^@"\'`]+)(?P=quote)\\)  # require("some/path")\n    ', kind=None),
                    Attribute(
                        lineno=426,
                        col_offset=9,
                        end_lineno=426,
                        end_col_offset=19,
                        value=Name(lineno=426, col_offset=9, end_lineno=426, end_col_offset=11, id='re', ctx=Load()),
                        attr='VERBOSE',
                        ctx=Load(),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=429,
            col_offset=0,
            end_lineno=453,
            end_col_offset=22,
            name='convert_relative_require',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(lineno=429, col_offset=29, end_lineno=429, end_col_offset=32, arg='url', annotation=None, type_comment=None),
                    arg(lineno=429, col_offset=34, end_lineno=429, end_col_offset=41, arg='content', annotation=None, type_comment=None),
                ],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=430,
                    col_offset=4,
                    end_lineno=446,
                    end_col_offset=7,
                    value=Constant(lineno=430, col_offset=4, end_lineno=446, end_col_offset=7, value='\n    Convert the relative path contained in a \'require()\'\n    to the new path system (@module/path)\n    .. code-block:: javascript\n\n        // Relative path:\n        // before\n        require("./path")\n        // after\n        require("@module/path")\n\n        // Not a relative path:\n        // before\n        require("other_alias")\n        // after\n        require("other_alias")\n    ', kind=None),
                ),
                Assign(
                    lineno=447,
                    col_offset=4,
                    end_lineno=447,
                    end_col_offset=25,
                    targets=[Name(lineno=447, col_offset=4, end_lineno=447, end_col_offset=15, id='new_content', ctx=Store())],
                    value=Name(lineno=447, col_offset=18, end_lineno=447, end_col_offset=25, id='content', ctx=Load()),
                    type_comment=None,
                ),
                For(
                    lineno=448,
                    col_offset=4,
                    end_lineno=452,
                    end_col_offset=60,
                    target=Tuple(
                        lineno=448,
                        col_offset=8,
                        end_lineno=448,
                        end_col_offset=19,
                        elts=[
                            Name(lineno=448, col_offset=8, end_lineno=448, end_col_offset=13, id='quote', ctx=Store()),
                            Name(lineno=448, col_offset=15, end_lineno=448, end_col_offset=19, id='path', ctx=Store()),
                        ],
                        ctx=Store(),
                    ),
                    iter=Call(
                        lineno=448,
                        col_offset=23,
                        end_lineno=448,
                        end_col_offset=63,
                        func=Attribute(
                            lineno=448,
                            col_offset=23,
                            end_lineno=448,
                            end_col_offset=50,
                            value=Name(lineno=448, col_offset=23, end_lineno=448, end_col_offset=42, id='RELATIVE_REQUIRE_RE', ctx=Load()),
                            attr='findall',
                            ctx=Load(),
                        ),
                        args=[Name(lineno=448, col_offset=51, end_lineno=448, end_col_offset=62, id='new_content', ctx=Load())],
                        keywords=[],
                    ),
                    body=[
                        If(
                            lineno=449,
                            col_offset=8,
                            end_lineno=452,
                            end_col_offset=60,
                            test=BoolOp(
                                lineno=449,
                                col_offset=11,
                                end_lineno=449,
                                end_col_offset=47,
                                op=And(),
                                values=[
                                    Call(
                                        lineno=449,
                                        col_offset=11,
                                        end_lineno=449,
                                        end_col_offset=31,
                                        func=Attribute(
                                            lineno=449,
                                            col_offset=11,
                                            end_lineno=449,
                                            end_col_offset=26,
                                            value=Name(lineno=449, col_offset=11, end_lineno=449, end_col_offset=15, id='path', ctx=Load()),
                                            attr='startswith',
                                            ctx=Load(),
                                        ),
                                        args=[Constant(lineno=449, col_offset=27, end_lineno=449, end_col_offset=30, value='.', kind=None)],
                                        keywords=[],
                                    ),
                                    Compare(
                                        lineno=449,
                                        col_offset=36,
                                        end_lineno=449,
                                        end_col_offset=47,
                                        left=Constant(lineno=449, col_offset=36, end_lineno=449, end_col_offset=39, value='/', kind=None),
                                        ops=[In()],
                                        comparators=[Name(lineno=449, col_offset=43, end_lineno=449, end_col_offset=47, id='path', ctx=Load())],
                                    ),
                                ],
                            ),
                            body=[
                                Assign(
                                    lineno=450,
                                    col_offset=12,
                                    end_lineno=450,
                                    end_col_offset=57,
                                    targets=[Name(lineno=450, col_offset=12, end_lineno=450, end_col_offset=19, id='pattern', ctx=Store())],
                                    value=JoinedStr(
                                        lineno=450,
                                        col_offset=22,
                                        end_lineno=450,
                                        end_col_offset=57,
                                        values=[
                                            Constant(lineno=450, col_offset=22, end_lineno=450, end_col_offset=57, value='require\\(', kind=None),
                                            FormattedValue(
                                                lineno=450,
                                                col_offset=22,
                                                end_lineno=450,
                                                end_col_offset=57,
                                                value=Name(lineno=450, col_offset=35, end_lineno=450, end_col_offset=40, id='quote', ctx=Load()),
                                                conversion=-1,
                                                format_spec=None,
                                            ),
                                            FormattedValue(
                                                lineno=450,
                                                col_offset=22,
                                                end_lineno=450,
                                                end_col_offset=57,
                                                value=Name(lineno=450, col_offset=42, end_lineno=450, end_col_offset=46, id='path', ctx=Load()),
                                                conversion=-1,
                                                format_spec=None,
                                            ),
                                            FormattedValue(
                                                lineno=450,
                                                col_offset=22,
                                                end_lineno=450,
                                                end_col_offset=57,
                                                value=Name(lineno=450, col_offset=35, end_lineno=450, end_col_offset=40, id='quote', ctx=Load()),
                                                conversion=-1,
                                                format_spec=None,
                                            ),
                                            Constant(lineno=450, col_offset=22, end_lineno=450, end_col_offset=57, value='\\)', kind=None),
                                        ],
                                    ),
                                    type_comment=None,
                                ),
                                Assign(
                                    lineno=451,
                                    col_offset=12,
                                    end_lineno=451,
                                    end_col_offset=74,
                                    targets=[Name(lineno=451, col_offset=12, end_lineno=451, end_col_offset=16, id='repl', ctx=Store())],
                                    value=JoinedStr(
                                        lineno=451,
                                        col_offset=19,
                                        end_lineno=451,
                                        end_col_offset=74,
                                        values=[
                                            Constant(lineno=451, col_offset=19, end_lineno=451, end_col_offset=74, value='require("', kind=None),
                                            FormattedValue(
                                                lineno=451,
                                                col_offset=19,
                                                end_lineno=451,
                                                end_col_offset=74,
                                                value=Call(
                                                    lineno=451,
                                                    col_offset=31,
                                                    end_lineno=451,
                                                    end_col_offset=70,
                                                    func=Name(lineno=451, col_offset=31, end_lineno=451, end_col_offset=59, id='relative_path_to_module_path', ctx=Load()),
                                                    args=[
                                                        Name(lineno=451, col_offset=60, end_lineno=451, end_col_offset=63, id='url', ctx=Load()),
                                                        Name(lineno=451, col_offset=65, end_lineno=451, end_col_offset=69, id='path', ctx=Load()),
                                                    ],
                                                    keywords=[],
                                                ),
                                                conversion=-1,
                                                format_spec=None,
                                            ),
                                            Constant(lineno=451, col_offset=19, end_lineno=451, end_col_offset=74, value='")', kind=None),
                                        ],
                                    ),
                                    type_comment=None,
                                ),
                                Assign(
                                    lineno=452,
                                    col_offset=12,
                                    end_lineno=452,
                                    end_col_offset=60,
                                    targets=[Name(lineno=452, col_offset=12, end_lineno=452, end_col_offset=23, id='new_content', ctx=Store())],
                                    value=Call(
                                        lineno=452,
                                        col_offset=26,
                                        end_lineno=452,
                                        end_col_offset=60,
                                        func=Attribute(
                                            lineno=452,
                                            col_offset=26,
                                            end_lineno=452,
                                            end_col_offset=32,
                                            value=Name(lineno=452, col_offset=26, end_lineno=452, end_col_offset=28, id='re', ctx=Load()),
                                            attr='sub',
                                            ctx=Load(),
                                        ),
                                        args=[
                                            Name(lineno=452, col_offset=33, end_lineno=452, end_col_offset=40, id='pattern', ctx=Load()),
                                            Name(lineno=452, col_offset=42, end_lineno=452, end_col_offset=46, id='repl', ctx=Load()),
                                            Name(lineno=452, col_offset=48, end_lineno=452, end_col_offset=59, id='new_content', ctx=Load()),
                                        ],
                                        keywords=[],
                                    ),
                                    type_comment=None,
                                ),
                            ],
                            orelse=[],
                        ),
                    ],
                    orelse=[],
                    type_comment=None,
                ),
                Return(
                    lineno=453,
                    col_offset=4,
                    end_lineno=453,
                    end_col_offset=22,
                    value=Name(lineno=453, col_offset=11, end_lineno=453, end_col_offset=22, id='new_content', ctx=Load()),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=456,
            col_offset=0,
            end_lineno=462,
            end_col_offset=31,
            targets=[Name(lineno=456, col_offset=0, end_lineno=456, end_col_offset=11, id='IMPORT_STAR', ctx=Store())],
            value=Call(
                lineno=456,
                col_offset=14,
                end_lineno=462,
                end_col_offset=31,
                func=Attribute(
                    lineno=456,
                    col_offset=14,
                    end_lineno=456,
                    end_col_offset=24,
                    value=Name(lineno=456, col_offset=14, end_lineno=456, end_col_offset=16, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=456, col_offset=25, end_lineno=462, end_col_offset=3, value='\n    ^(?P<space>\\s*)       # indentation\n    import\\s+\\*\\s+as\\s+   # import * as\n    (?P<identifier>\\w+)   # alias\n    \\s*from\\s*            # from\n    (?P<path>[^;\\n]+)     # path\n', kind=None),
                    BinOp(
                        lineno=462,
                        col_offset=5,
                        end_lineno=462,
                        end_col_offset=30,
                        left=Attribute(
                            lineno=462,
                            col_offset=5,
                            end_lineno=462,
                            end_col_offset=17,
                            value=Name(lineno=462, col_offset=5, end_lineno=462, end_col_offset=7, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=462,
                            col_offset=20,
                            end_lineno=462,
                            end_col_offset=30,
                            value=Name(lineno=462, col_offset=20, end_lineno=462, end_col_offset=22, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=465,
            col_offset=0,
            end_lineno=477,
            end_col_offset=41,
            name='convert_star_import',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=465, col_offset=24, end_lineno=465, end_col_offset=31, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=466,
                    col_offset=4,
                    end_lineno=475,
                    end_col_offset=7,
                    value=Constant(lineno=466, col_offset=4, end_lineno=475, end_col_offset=7, value='\n    Transpile import star.\n\n    .. code-block:: javascript\n\n        // before\n        import * as name from "some/path"\n        // after\n        const name = require("some/path")\n    ', kind=None),
                ),
                Assign(
                    lineno=476,
                    col_offset=4,
                    end_lineno=476,
                    end_col_offset=63,
                    targets=[Name(lineno=476, col_offset=4, end_lineno=476, end_col_offset=8, id='repl', ctx=Store())],
                    value=Constant(lineno=476, col_offset=11, end_lineno=476, end_col_offset=63, value='\\g<space>const \\g<identifier> = require(\\g<path>)', kind=None),
                    type_comment=None,
                ),
                Return(
                    lineno=477,
                    col_offset=4,
                    end_lineno=477,
                    end_col_offset=41,
                    value=Call(
                        lineno=477,
                        col_offset=11,
                        end_lineno=477,
                        end_col_offset=41,
                        func=Attribute(
                            lineno=477,
                            col_offset=11,
                            end_lineno=477,
                            end_col_offset=26,
                            value=Name(lineno=477, col_offset=11, end_lineno=477, end_col_offset=22, id='IMPORT_STAR', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=477, col_offset=27, end_lineno=477, end_col_offset=31, id='repl', ctx=Load()),
                            Name(lineno=477, col_offset=33, end_lineno=477, end_col_offset=40, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=480,
            col_offset=0,
            end_lineno=484,
            end_col_offset=31,
            targets=[Name(lineno=480, col_offset=0, end_lineno=480, end_col_offset=26, id='IMPORT_UNNAMED_RELATIVE_RE', ctx=Store())],
            value=Call(
                lineno=480,
                col_offset=29,
                end_lineno=484,
                end_col_offset=31,
                func=Attribute(
                    lineno=480,
                    col_offset=29,
                    end_lineno=480,
                    end_col_offset=39,
                    value=Name(lineno=480, col_offset=29, end_lineno=480, end_col_offset=31, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=480, col_offset=40, end_lineno=484, end_col_offset=3, value='\n    ^(?P<space>\\s*)     # indentation\n    import\\s+           # import\n    (?P<path>[^;\\n]+)   # relative path\n', kind=None),
                    BinOp(
                        lineno=484,
                        col_offset=5,
                        end_lineno=484,
                        end_col_offset=30,
                        left=Attribute(
                            lineno=484,
                            col_offset=5,
                            end_lineno=484,
                            end_col_offset=17,
                            value=Name(lineno=484, col_offset=5, end_lineno=484, end_col_offset=7, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=484,
                            col_offset=20,
                            end_lineno=484,
                            end_col_offset=30,
                            value=Name(lineno=484, col_offset=20, end_lineno=484, end_col_offset=22, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=487,
            col_offset=0,
            end_lineno=499,
            end_col_offset=56,
            name='convert_unnamed_relative_import',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=487, col_offset=36, end_lineno=487, end_col_offset=43, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=488,
                    col_offset=4,
                    end_lineno=497,
                    end_col_offset=7,
                    value=Constant(lineno=488, col_offset=4, end_lineno=497, end_col_offset=7, value='\n    Transpile relative "direct" imports. Direct meaning they are not store in a variable.\n\n    .. code-block:: javascript\n\n        // before\n        import "some/path"\n        // after\n        require("some/path")\n    ', kind=None),
                ),
                Assign(
                    lineno=498,
                    col_offset=4,
                    end_lineno=498,
                    end_col_offset=31,
                    targets=[Name(lineno=498, col_offset=4, end_lineno=498, end_col_offset=8, id='repl', ctx=Store())],
                    value=Constant(lineno=498, col_offset=11, end_lineno=498, end_col_offset=31, value='require(\\g<path>)', kind=None),
                    type_comment=None,
                ),
                Return(
                    lineno=499,
                    col_offset=4,
                    end_lineno=499,
                    end_col_offset=56,
                    value=Call(
                        lineno=499,
                        col_offset=11,
                        end_lineno=499,
                        end_col_offset=56,
                        func=Attribute(
                            lineno=499,
                            col_offset=11,
                            end_lineno=499,
                            end_col_offset=41,
                            value=Name(lineno=499, col_offset=11, end_lineno=499, end_col_offset=37, id='IMPORT_UNNAMED_RELATIVE_RE', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=499, col_offset=42, end_lineno=499, end_col_offset=46, id='repl', ctx=Load()),
                            Name(lineno=499, col_offset=48, end_lineno=499, end_col_offset=55, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=502,
            col_offset=0,
            end_lineno=507,
            end_col_offset=31,
            targets=[Name(lineno=502, col_offset=0, end_lineno=502, end_col_offset=12, id='URL_INDEX_RE', ctx=Store())],
            value=Call(
                lineno=502,
                col_offset=15,
                end_lineno=507,
                end_col_offset=31,
                func=Attribute(
                    lineno=502,
                    col_offset=15,
                    end_lineno=502,
                    end_col_offset=25,
                    value=Name(lineno=502, col_offset=15, end_lineno=502, end_col_offset=17, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=502, col_offset=26, end_lineno=507, end_col_offset=3, value='\n    require\\s*                 # require\n    \\(\\s*                      # (\n    (?P<path>(?P<quote>["\'`])([^"\'`]*/index/?)(?P=quote))  # path ended by /index or /index/\n    \\s*\\)                      # )\n', kind=None),
                    BinOp(
                        lineno=507,
                        col_offset=5,
                        end_lineno=507,
                        end_col_offset=30,
                        left=Attribute(
                            lineno=507,
                            col_offset=5,
                            end_lineno=507,
                            end_col_offset=17,
                            value=Name(lineno=507, col_offset=5, end_lineno=507, end_col_offset=7, id='re', ctx=Load()),
                            attr='MULTILINE',
                            ctx=Load(),
                        ),
                        op=BitOr(),
                        right=Attribute(
                            lineno=507,
                            col_offset=20,
                            end_lineno=507,
                            end_col_offset=30,
                            value=Name(lineno=507, col_offset=20, end_lineno=507, end_col_offset=22, id='re', ctx=Load()),
                            attr='VERBOSE',
                            ctx=Load(),
                        ),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=510,
            col_offset=0,
            end_lineno=520,
            end_col_offset=42,
            name='remove_index',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=510, col_offset=17, end_lineno=510, end_col_offset=24, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=511,
                    col_offset=4,
                    end_lineno=515,
                    end_col_offset=7,
                    value=Constant(lineno=511, col_offset=4, end_lineno=515, end_col_offset=7, value='\n    Remove in the paths the /index.js.\n    We want to be able to import a module just trough its directory name if it contains an index.js.\n    So we no longer need to specify the index.js in the paths.\n    ', kind=None),
                ),
                FunctionDef(
                    lineno=516,
                    col_offset=4,
                    end_lineno=519,
                    end_col_offset=37,
                    name='repl',
                    args=arguments(
                        posonlyargs=[],
                        args=[arg(lineno=516, col_offset=13, end_lineno=516, end_col_offset=21, arg='matchobj', annotation=None, type_comment=None)],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        Assign(
                            lineno=517,
                            col_offset=8,
                            end_lineno=517,
                            end_col_offset=31,
                            targets=[Name(lineno=517, col_offset=8, end_lineno=517, end_col_offset=12, id='path', ctx=Store())],
                            value=Subscript(
                                lineno=517,
                                col_offset=15,
                                end_lineno=517,
                                end_col_offset=31,
                                value=Name(lineno=517, col_offset=15, end_lineno=517, end_col_offset=23, id='matchobj', ctx=Load()),
                                slice=Constant(lineno=517, col_offset=24, end_lineno=517, end_col_offset=30, value='path', kind=None),
                                ctx=Load(),
                            ),
                            type_comment=None,
                        ),
                        Assign(
                            lineno=518,
                            col_offset=8,
                            end_lineno=518,
                            end_col_offset=57,
                            targets=[Name(lineno=518, col_offset=8, end_lineno=518, end_col_offset=16, id='new_path', ctx=Store())],
                            value=BinOp(
                                lineno=518,
                                col_offset=19,
                                end_lineno=518,
                                end_col_offset=57,
                                left=Subscript(
                                    lineno=518,
                                    col_offset=19,
                                    end_lineno=518,
                                    end_col_offset=47,
                                    value=Name(lineno=518, col_offset=19, end_lineno=518, end_col_offset=23, id='path', ctx=Load()),
                                    slice=Slice(
                                        lineno=518,
                                        col_offset=24,
                                        end_lineno=518,
                                        end_col_offset=46,
                                        lower=None,
                                        upper=Call(
                                            lineno=518,
                                            col_offset=26,
                                            end_lineno=518,
                                            end_col_offset=46,
                                            func=Attribute(
                                                lineno=518,
                                                col_offset=26,
                                                end_lineno=518,
                                                end_col_offset=36,
                                                value=Name(lineno=518, col_offset=26, end_lineno=518, end_col_offset=30, id='path', ctx=Load()),
                                                attr='rfind',
                                                ctx=Load(),
                                            ),
                                            args=[Constant(lineno=518, col_offset=37, end_lineno=518, end_col_offset=45, value='/index', kind=None)],
                                            keywords=[],
                                        ),
                                        step=None,
                                    ),
                                    ctx=Load(),
                                ),
                                op=Add(),
                                right=Subscript(
                                    lineno=518,
                                    col_offset=50,
                                    end_lineno=518,
                                    end_col_offset=57,
                                    value=Name(lineno=518, col_offset=50, end_lineno=518, end_col_offset=54, id='path', ctx=Load()),
                                    slice=Constant(lineno=518, col_offset=55, end_lineno=518, end_col_offset=56, value=0, kind=None),
                                    ctx=Load(),
                                ),
                            ),
                            type_comment=None,
                        ),
                        Return(
                            lineno=519,
                            col_offset=8,
                            end_lineno=519,
                            end_col_offset=37,
                            value=JoinedStr(
                                lineno=519,
                                col_offset=15,
                                end_lineno=519,
                                end_col_offset=37,
                                values=[
                                    Constant(lineno=519, col_offset=15, end_lineno=519, end_col_offset=37, value='require(', kind=None),
                                    FormattedValue(
                                        lineno=519,
                                        col_offset=15,
                                        end_lineno=519,
                                        end_col_offset=37,
                                        value=Name(lineno=519, col_offset=26, end_lineno=519, end_col_offset=34, id='new_path', ctx=Load()),
                                        conversion=-1,
                                        format_spec=None,
                                    ),
                                    Constant(lineno=519, col_offset=15, end_lineno=519, end_col_offset=37, value=')', kind=None),
                                ],
                            ),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                Return(
                    lineno=520,
                    col_offset=4,
                    end_lineno=520,
                    end_col_offset=42,
                    value=Call(
                        lineno=520,
                        col_offset=11,
                        end_lineno=520,
                        end_col_offset=42,
                        func=Attribute(
                            lineno=520,
                            col_offset=11,
                            end_lineno=520,
                            end_col_offset=27,
                            value=Name(lineno=520, col_offset=11, end_lineno=520, end_col_offset=23, id='URL_INDEX_RE', ctx=Load()),
                            attr='sub',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=520, col_offset=28, end_lineno=520, end_col_offset=32, id='repl', ctx=Load()),
                            Name(lineno=520, col_offset=34, end_lineno=520, end_col_offset=41, id='content', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=523,
            col_offset=0,
            end_lineno=534,
            end_col_offset=37,
            name='relative_path_to_module_path',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(lineno=523, col_offset=33, end_lineno=523, end_col_offset=36, arg='url', annotation=None, type_comment=None),
                    arg(lineno=523, col_offset=38, end_lineno=523, end_col_offset=46, arg='path_rel', annotation=None, type_comment=None),
                ],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=524,
                    col_offset=4,
                    end_lineno=529,
                    end_col_offset=7,
                    value=Constant(lineno=524, col_offset=4, end_lineno=529, end_col_offset=7, value='\n    Convert the relative path into a module path, which is more generic and fancy.\n\n    :param path_rel: a relative path to the current url.\n    :return: module path (@module/...)\n    ', kind=None),
                ),
                Assign(
                    lineno=530,
                    col_offset=4,
                    end_lineno=530,
                    end_col_offset=30,
                    targets=[Name(lineno=530, col_offset=4, end_lineno=530, end_col_offset=13, id='url_split', ctx=Store())],
                    value=Call(
                        lineno=530,
                        col_offset=16,
                        end_lineno=530,
                        end_col_offset=30,
                        func=Attribute(
                            lineno=530,
                            col_offset=16,
                            end_lineno=530,
                            end_col_offset=25,
                            value=Name(lineno=530, col_offset=16, end_lineno=530, end_col_offset=19, id='url', ctx=Load()),
                            attr='split',
                            ctx=Load(),
                        ),
                        args=[Constant(lineno=530, col_offset=26, end_lineno=530, end_col_offset=29, value='/', kind=None)],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=531,
                    col_offset=4,
                    end_lineno=531,
                    end_col_offset=40,
                    targets=[Name(lineno=531, col_offset=4, end_lineno=531, end_col_offset=18, id='path_rel_split', ctx=Store())],
                    value=Call(
                        lineno=531,
                        col_offset=21,
                        end_lineno=531,
                        end_col_offset=40,
                        func=Attribute(
                            lineno=531,
                            col_offset=21,
                            end_lineno=531,
                            end_col_offset=35,
                            value=Name(lineno=531, col_offset=21, end_lineno=531, end_col_offset=29, id='path_rel', ctx=Load()),
                            attr='split',
                            ctx=Load(),
                        ),
                        args=[Constant(lineno=531, col_offset=36, end_lineno=531, end_col_offset=39, value='/', kind=None)],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=532,
                    col_offset=4,
                    end_lineno=532,
                    end_col_offset=63,
                    targets=[Name(lineno=532, col_offset=4, end_lineno=532, end_col_offset=11, id='nb_back', ctx=Store())],
                    value=BinOp(
                        lineno=532,
                        col_offset=14,
                        end_lineno=532,
                        end_col_offset=63,
                        left=Call(
                            lineno=532,
                            col_offset=14,
                            end_lineno=532,
                            end_col_offset=59,
                            func=Name(lineno=532, col_offset=14, end_lineno=532, end_col_offset=17, id='len', ctx=Load()),
                            args=[
                                ListComp(
                                    lineno=532,
                                    col_offset=18,
                                    end_lineno=532,
                                    end_col_offset=58,
                                    elt=Name(lineno=532, col_offset=19, end_lineno=532, end_col_offset=20, id='v', ctx=Load()),
                                    generators=[
                                        comprehension(
                                            target=Name(lineno=532, col_offset=25, end_lineno=532, end_col_offset=26, id='v', ctx=Store()),
                                            iter=Name(lineno=532, col_offset=30, end_lineno=532, end_col_offset=44, id='path_rel_split', ctx=Load()),
                                            ifs=[
                                                Compare(
                                                    lineno=532,
                                                    col_offset=48,
                                                    end_lineno=532,
                                                    end_col_offset=57,
                                                    left=Name(lineno=532, col_offset=48, end_lineno=532, end_col_offset=49, id='v', ctx=Load()),
                                                    ops=[Eq()],
                                                    comparators=[Constant(lineno=532, col_offset=53, end_lineno=532, end_col_offset=57, value='..', kind=None)],
                                                ),
                                            ],
                                            is_async=0,
                                        ),
                                    ],
                                ),
                            ],
                            keywords=[],
                        ),
                        op=Add(),
                        right=Constant(lineno=532, col_offset=62, end_lineno=532, end_col_offset=63, value=1, kind=None),
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=533,
                    col_offset=4,
                    end_lineno=533,
                    end_col_offset=97,
                    targets=[Name(lineno=533, col_offset=4, end_lineno=533, end_col_offset=10, id='result', ctx=Store())],
                    value=Call(
                        lineno=533,
                        col_offset=13,
                        end_lineno=533,
                        end_col_offset=97,
                        func=Attribute(
                            lineno=533,
                            col_offset=13,
                            end_lineno=533,
                            end_col_offset=21,
                            value=Constant(lineno=533, col_offset=13, end_lineno=533, end_col_offset=16, value='/', kind=None),
                            attr='join',
                            ctx=Load(),
                        ),
                        args=[
                            BinOp(
                                lineno=533,
                                col_offset=22,
                                end_lineno=533,
                                end_col_offset=96,
                                left=Subscript(
                                    lineno=533,
                                    col_offset=22,
                                    end_lineno=533,
                                    end_col_offset=42,
                                    value=Name(lineno=533, col_offset=22, end_lineno=533, end_col_offset=31, id='url_split', ctx=Load()),
                                    slice=Slice(
                                        lineno=533,
                                        col_offset=32,
                                        end_lineno=533,
                                        end_col_offset=41,
                                        lower=None,
                                        upper=UnaryOp(
                                            lineno=533,
                                            col_offset=33,
                                            end_lineno=533,
                                            end_col_offset=41,
                                            op=USub(),
                                            operand=Name(lineno=533, col_offset=34, end_lineno=533, end_col_offset=41, id='nb_back', ctx=Load()),
                                        ),
                                        step=None,
                                    ),
                                    ctx=Load(),
                                ),
                                op=Add(),
                                right=ListComp(
                                    lineno=533,
                                    col_offset=45,
                                    end_lineno=533,
                                    end_col_offset=96,
                                    elt=Name(lineno=533, col_offset=46, end_lineno=533, end_col_offset=47, id='v', ctx=Load()),
                                    generators=[
                                        comprehension(
                                            target=Name(lineno=533, col_offset=52, end_lineno=533, end_col_offset=53, id='v', ctx=Store()),
                                            iter=Name(lineno=533, col_offset=57, end_lineno=533, end_col_offset=71, id='path_rel_split', ctx=Load()),
                                            ifs=[
                                                UnaryOp(
                                                    lineno=533,
                                                    col_offset=75,
                                                    end_lineno=533,
                                                    end_col_offset=95,
                                                    op=Not(),
                                                    operand=Compare(
                                                        lineno=533,
                                                        col_offset=79,
                                                        end_lineno=533,
                                                        end_col_offset=95,
                                                        left=Name(lineno=533, col_offset=79, end_lineno=533, end_col_offset=80, id='v', ctx=Load()),
                                                        ops=[In()],
                                                        comparators=[
                                                            List(
                                                                lineno=533,
                                                                col_offset=84,
                                                                end_lineno=533,
                                                                end_col_offset=95,
                                                                elts=[
                                                                    Constant(lineno=533, col_offset=85, end_lineno=533, end_col_offset=89, value='..', kind=None),
                                                                    Constant(lineno=533, col_offset=91, end_lineno=533, end_col_offset=94, value='.', kind=None),
                                                                ],
                                                                ctx=Load(),
                                                            ),
                                                        ],
                                                    ),
                                                ),
                                            ],
                                            is_async=0,
                                        ),
                                    ],
                                ),
                            ),
                        ],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Return(
                    lineno=534,
                    col_offset=4,
                    end_lineno=534,
                    end_col_offset=37,
                    value=Call(
                        lineno=534,
                        col_offset=11,
                        end_lineno=534,
                        end_col_offset=37,
                        func=Name(lineno=534, col_offset=11, end_lineno=534, end_col_offset=29, id='url_to_module_path', ctx=Load()),
                        args=[Name(lineno=534, col_offset=30, end_lineno=534, end_col_offset=36, id='result', ctx=Load())],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=537,
            col_offset=0,
            end_lineno=543,
            end_col_offset=16,
            targets=[Name(lineno=537, col_offset=0, end_lineno=537, end_col_offset=14, id='ODOO_MODULE_RE', ctx=Store())],
            value=Call(
                lineno=537,
                col_offset=17,
                end_lineno=543,
                end_col_offset=16,
                func=Attribute(
                    lineno=537,
                    col_offset=17,
                    end_lineno=537,
                    end_col_offset=27,
                    value=Name(lineno=537, col_offset=17, end_lineno=537, end_col_offset=19, id='re', ctx=Load()),
                    attr='compile',
                    ctx=Load(),
                ),
                args=[
                    Constant(lineno=537, col_offset=28, end_lineno=543, end_col_offset=3, value='\n    \\s*                                       # some starting space\n    \\/(\\*|\\/).*\\s*                            # // or /*\n    @odoo-module                              # @odoo-module\n    (\\s+alias=(?P<alias>[\\w.]+))?             # alias=web.AbstractAction (optional)\n    (\\s+default=(?P<default>False|false|0))?  # default=False or false or 0 (optional)\n', kind=None),
                    Attribute(
                        lineno=543,
                        col_offset=5,
                        end_lineno=543,
                        end_col_offset=15,
                        value=Name(lineno=543, col_offset=5, end_lineno=543, end_col_offset=7, id='re', ctx=Load()),
                        attr='VERBOSE',
                        ctx=Load(),
                    ),
                ],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=546,
            col_offset=0,
            end_lineno=555,
            end_col_offset=23,
            name='is_odoo_module',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=546, col_offset=19, end_lineno=546, end_col_offset=26, arg='content', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=547,
                    col_offset=4,
                    end_lineno=553,
                    end_col_offset=7,
                    value=Constant(lineno=547, col_offset=4, end_lineno=553, end_col_offset=7, value='\n    Detect if the file is a native odoo module.\n    We look for a comment containing @odoo-module.\n\n    :param content: source code\n    :return: is this a odoo module that need transpilation ?\n    ', kind=None),
                ),
                Assign(
                    lineno=554,
                    col_offset=4,
                    end_lineno=554,
                    end_col_offset=42,
                    targets=[Name(lineno=554, col_offset=4, end_lineno=554, end_col_offset=10, id='result', ctx=Store())],
                    value=Call(
                        lineno=554,
                        col_offset=13,
                        end_lineno=554,
                        end_col_offset=42,
                        func=Attribute(
                            lineno=554,
                            col_offset=13,
                            end_lineno=554,
                            end_col_offset=33,
                            value=Name(lineno=554, col_offset=13, end_lineno=554, end_col_offset=27, id='ODOO_MODULE_RE', ctx=Load()),
                            attr='match',
                            ctx=Load(),
                        ),
                        args=[Name(lineno=554, col_offset=34, end_lineno=554, end_col_offset=41, id='content', ctx=Load())],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Return(
                    lineno=555,
                    col_offset=4,
                    end_lineno=555,
                    end_col_offset=23,
                    value=Call(
                        lineno=555,
                        col_offset=11,
                        end_lineno=555,
                        end_col_offset=23,
                        func=Name(lineno=555, col_offset=11, end_lineno=555, end_col_offset=15, id='bool', ctx=Load()),
                        args=[Name(lineno=555, col_offset=16, end_lineno=555, end_col_offset=22, id='result', ctx=Load())],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=558,
            col_offset=0,
            end_lineno=606,
            end_col_offset=55,
            name='get_aliased_odoo_define_content',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(lineno=558, col_offset=36, end_lineno=558, end_col_offset=47, arg='module_path', annotation=None, type_comment=None),
                    arg(lineno=558, col_offset=49, end_lineno=558, end_col_offset=56, arg='content', annotation=None, type_comment=None),
                ],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=559,
                    col_offset=4,
                    end_lineno=594,
                    end_col_offset=7,
                    value=Constant(lineno=559, col_offset=4, end_lineno=594, end_col_offset=7, value='\n    To allow smooth transition between the new system and the legacy one, we have the possibility to\n    defined an alternative module name (an alias) that will act as proxy between legacy require calls and\n    new modules.\n\n    Example:\n    If we have a require call somewhere in the odoo source base being:\n    > vat AbstractAction require("web.AbstractAction")\n    we have a problem when we will have converted to module to ES6: its new name will be more like\n    "web/chrome/abstract_action". So the require would fail !\n    So we add a second small modules, an alias, as such:\n    > odoo.define("web/chrome/abstract_action", async function(require) {\n    >  return require(\'web.AbstractAction\')[Symbol.for("default")];\n    > });\n\n    To generate this, change your comment on the top of the file.\n\n    .. code-block:: javascript\n\n        // before\n        /** @odoo-module */\n        // after\n        /** @odoo-module alias=web.AbstractAction */\n\n    Notice that often, the legacy system acted like they it did defaukt imports. That\'s why we have the\n    "[Symbol.for("default")];" bit. If your use case does not need this default import, just do:\n\n    .. code-block:: javascript\n\n        // before\n        /** @odoo-module */\n        // after\n        /** @odoo-module alias=web.AbstractAction default=false */\n\n    :return: the alias content to append to the source code.\n    ', kind=None),
                ),
                Assign(
                    lineno=595,
                    col_offset=4,
                    end_lineno=595,
                    end_col_offset=44,
                    targets=[Name(lineno=595, col_offset=4, end_lineno=595, end_col_offset=12, id='matchobj', ctx=Store())],
                    value=Call(
                        lineno=595,
                        col_offset=15,
                        end_lineno=595,
                        end_col_offset=44,
                        func=Attribute(
                            lineno=595,
                            col_offset=15,
                            end_lineno=595,
                            end_col_offset=35,
                            value=Name(lineno=595, col_offset=15, end_lineno=595, end_col_offset=29, id='ODOO_MODULE_RE', ctx=Load()),
                            attr='match',
                            ctx=Load(),
                        ),
                        args=[Name(lineno=595, col_offset=36, end_lineno=595, end_col_offset=43, id='content', ctx=Load())],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                If(
                    lineno=596,
                    col_offset=4,
                    end_lineno=606,
                    end_col_offset=55,
                    test=Name(lineno=596, col_offset=7, end_lineno=596, end_col_offset=15, id='matchobj', ctx=Load()),
                    body=[
                        Assign(
                            lineno=597,
                            col_offset=8,
                            end_lineno=597,
                            end_col_offset=33,
                            targets=[Name(lineno=597, col_offset=8, end_lineno=597, end_col_offset=13, id='alias', ctx=Store())],
                            value=Subscript(
                                lineno=597,
                                col_offset=16,
                                end_lineno=597,
                                end_col_offset=33,
                                value=Name(lineno=597, col_offset=16, end_lineno=597, end_col_offset=24, id='matchobj', ctx=Load()),
                                slice=Constant(lineno=597, col_offset=25, end_lineno=597, end_col_offset=32, value='alias', kind=None),
                                ctx=Load(),
                            ),
                            type_comment=None,
                        ),
                        If(
                            lineno=598,
                            col_offset=8,
                            end_lineno=606,
                            end_col_offset=55,
                            test=Name(lineno=598, col_offset=11, end_lineno=598, end_col_offset=16, id='alias', ctx=Load()),
                            body=[
                                If(
                                    lineno=599,
                                    col_offset=12,
                                    end_lineno=606,
                                    end_col_offset=55,
                                    test=Subscript(
                                        lineno=599,
                                        col_offset=15,
                                        end_lineno=599,
                                        end_col_offset=34,
                                        value=Name(lineno=599, col_offset=15, end_lineno=599, end_col_offset=23, id='matchobj', ctx=Load()),
                                        slice=Constant(lineno=599, col_offset=24, end_lineno=599, end_col_offset=33, value='default', kind=None),
                                        ctx=Load(),
                                    ),
                                    body=[
                                        Return(
                                            lineno=600,
                                            col_offset=16,
                                            end_lineno=602,
                                            end_col_offset=55,
                                            value=BinOp(
                                                lineno=600,
                                                col_offset=23,
                                                end_lineno=602,
                                                end_col_offset=55,
                                                left=Constant(lineno=600, col_offset=23, end_lineno=602, end_col_offset=32, value="\nodoo.define(`%s`, async function(require) {\n                        return require('%s');\n                        });\n", kind=None),
                                                op=Mod(),
                                                right=Tuple(
                                                    lineno=602,
                                                    col_offset=35,
                                                    end_lineno=602,
                                                    end_col_offset=55,
                                                    elts=[
                                                        Name(lineno=602, col_offset=36, end_lineno=602, end_col_offset=41, id='alias', ctx=Load()),
                                                        Name(lineno=602, col_offset=43, end_lineno=602, end_col_offset=54, id='module_path', ctx=Load()),
                                                    ],
                                                    ctx=Load(),
                                                ),
                                            ),
                                        ),
                                    ],
                                    orelse=[
                                        Return(
                                            lineno=604,
                                            col_offset=16,
                                            end_lineno=606,
                                            end_col_offset=55,
                                            value=BinOp(
                                                lineno=604,
                                                col_offset=23,
                                                end_lineno=606,
                                                end_col_offset=55,
                                                left=Constant(lineno=604, col_offset=23, end_lineno=606, end_col_offset=32, value='\nodoo.define(`%s`, async function(require) {\n                        return require(\'%s\')[Symbol.for("default")];\n                        });\n', kind=None),
                                                op=Mod(),
                                                right=Tuple(
                                                    lineno=606,
                                                    col_offset=35,
                                                    end_lineno=606,
                                                    end_col_offset=55,
                                                    elts=[
                                                        Name(lineno=606, col_offset=36, end_lineno=606, end_col_offset=41, id='alias', ctx=Load()),
                                                        Name(lineno=606, col_offset=43, end_lineno=606, end_col_offset=54, id='module_path', ctx=Load()),
                                                    ],
                                                    ctx=Load(),
                                                ),
                                            ),
                                        ),
                                    ],
                                ),
                            ],
                            orelse=[],
                        ),
                    ],
                    orelse=[],
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=609,
            col_offset=0,
            end_lineno=611,
            end_col_offset=71,
            name='convert_as',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=609, col_offset=15, end_lineno=609, end_col_offset=18, arg='val', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Assign(
                    lineno=610,
                    col_offset=4,
                    end_lineno=610,
                    end_col_offset=29,
                    targets=[Name(lineno=610, col_offset=4, end_lineno=610, end_col_offset=9, id='parts', ctx=Store())],
                    value=Call(
                        lineno=610,
                        col_offset=12,
                        end_lineno=610,
                        end_col_offset=29,
                        func=Attribute(
                            lineno=610,
                            col_offset=12,
                            end_lineno=610,
                            end_col_offset=21,
                            value=Name(lineno=610, col_offset=12, end_lineno=610, end_col_offset=15, id='val', ctx=Load()),
                            attr='split',
                            ctx=Load(),
                        ),
                        args=[Constant(lineno=610, col_offset=22, end_lineno=610, end_col_offset=28, value=' as ', kind=None)],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Return(
                    lineno=611,
                    col_offset=4,
                    end_lineno=611,
                    end_col_offset=71,
                    value=IfExp(
                        lineno=611,
                        col_offset=11,
                        end_lineno=611,
                        end_col_offset=71,
                        test=Compare(
                            lineno=611,
                            col_offset=18,
                            end_lineno=611,
                            end_col_offset=32,
                            left=Call(
                                lineno=611,
                                col_offset=18,
                                end_lineno=611,
                                end_col_offset=28,
                                func=Name(lineno=611, col_offset=18, end_lineno=611, end_col_offset=21, id='len', ctx=Load()),
                                args=[Name(lineno=611, col_offset=22, end_lineno=611, end_col_offset=27, id='parts', ctx=Load())],
                                keywords=[],
                            ),
                            ops=[Lt()],
                            comparators=[Constant(lineno=611, col_offset=31, end_lineno=611, end_col_offset=32, value=2, kind=None)],
                        ),
                        body=Name(lineno=611, col_offset=11, end_lineno=611, end_col_offset=14, id='val', ctx=Load()),
                        orelse=BinOp(
                            lineno=611,
                            col_offset=38,
                            end_lineno=611,
                            end_col_offset=71,
                            left=Constant(lineno=611, col_offset=38, end_lineno=611, end_col_offset=46, value='%s: %s', kind=None),
                            op=Mod(),
                            right=Call(
                                lineno=611,
                                col_offset=49,
                                end_lineno=611,
                                end_col_offset=71,
                                func=Name(lineno=611, col_offset=49, end_lineno=611, end_col_offset=54, id='tuple', ctx=Load()),
                                args=[
                                    Call(
                                        lineno=611,
                                        col_offset=55,
                                        end_lineno=611,
                                        end_col_offset=70,
                                        func=Name(lineno=611, col_offset=55, end_lineno=611, end_col_offset=63, id='reversed', ctx=Load()),
                                        args=[Name(lineno=611, col_offset=64, end_lineno=611, end_col_offset=69, id='parts', ctx=Load())],
                                        keywords=[],
                                    ),
                                ],
                                keywords=[],
                            ),
                        ),
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=614,
            col_offset=0,
            end_lineno=616,
            end_col_offset=46,
            name='remove_as',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=614, col_offset=14, end_lineno=614, end_col_offset=17, arg='val', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Assign(
                    lineno=615,
                    col_offset=4,
                    end_lineno=615,
                    end_col_offset=29,
                    targets=[Name(lineno=615, col_offset=4, end_lineno=615, end_col_offset=9, id='parts', ctx=Store())],
                    value=Call(
                        lineno=615,
                        col_offset=12,
                        end_lineno=615,
                        end_col_offset=29,
                        func=Attribute(
                            lineno=615,
                            col_offset=12,
                            end_lineno=615,
                            end_col_offset=21,
                            value=Name(lineno=615, col_offset=12, end_lineno=615, end_col_offset=15, id='val', ctx=Load()),
                            attr='split',
                            ctx=Load(),
                        ),
                        args=[Constant(lineno=615, col_offset=22, end_lineno=615, end_col_offset=28, value=' as ', kind=None)],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Return(
                    lineno=616,
                    col_offset=4,
                    end_lineno=616,
                    end_col_offset=46,
                    value=IfExp(
                        lineno=616,
                        col_offset=11,
                        end_lineno=616,
                        end_col_offset=46,
                        test=Compare(
                            lineno=616,
                            col_offset=18,
                            end_lineno=616,
                            end_col_offset=32,
                            left=Call(
                                lineno=616,
                                col_offset=18,
                                end_lineno=616,
                                end_col_offset=28,
                                func=Name(lineno=616, col_offset=18, end_lineno=616, end_col_offset=21, id='len', ctx=Load()),
                                args=[Name(lineno=616, col_offset=22, end_lineno=616, end_col_offset=27, id='parts', ctx=Load())],
                                keywords=[],
                            ),
                            ops=[Lt()],
                            comparators=[Constant(lineno=616, col_offset=31, end_lineno=616, end_col_offset=32, value=2, kind=None)],
                        ),
                        body=Name(lineno=616, col_offset=11, end_lineno=616, end_col_offset=14, id='val', ctx=Load()),
                        orelse=Subscript(
                            lineno=616,
                            col_offset=38,
                            end_lineno=616,
                            end_col_offset=46,
                            value=Name(lineno=616, col_offset=38, end_lineno=616, end_col_offset=43, id='parts', ctx=Load()),
                            slice=Constant(lineno=616, col_offset=44, end_lineno=616, end_col_offset=45, value=0, kind=None),
                            ctx=Load(),
                        ),
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
    ],
    type_ignores=[],
)
