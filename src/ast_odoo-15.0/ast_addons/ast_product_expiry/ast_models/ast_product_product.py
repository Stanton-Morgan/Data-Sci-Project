Module(
    body=[
        ImportFrom(
            lineno=4,
            col_offset=0,
            end_lineno=4,
            end_col_offset=31,
            module='odoo',
            names=[
                alias(name='fields', asname=None),
                alias(name='models', asname=None),
            ],
            level=0,
        ),
        ClassDef(
            lineno=7,
            col_offset=0,
            end_lineno=14,
            end_col_offset=43,
            name='Product',
            bases=[
                Attribute(
                    lineno=7,
                    col_offset=14,
                    end_lineno=7,
                    end_col_offset=26,
                    value=Name(lineno=7, col_offset=14, end_lineno=7, end_col_offset=20, id='models', ctx=Load()),
                    attr='Model',
                    ctx=Load(),
                ),
            ],
            keywords=[],
            body=[
                Assign(
                    lineno=8,
                    col_offset=4,
                    end_lineno=8,
                    end_col_offset=32,
                    targets=[Name(lineno=8, col_offset=4, end_lineno=8, end_col_offset=12, id='_inherit', ctx=Store())],
                    value=Constant(lineno=8, col_offset=15, end_lineno=8, end_col_offset=32, value='product.product', kind=None),
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=10,
                    col_offset=4,
                    end_lineno=14,
                    end_col_offset=43,
                    name='action_open_quants',
                    args=arguments(
                        posonlyargs=[],
                        args=[arg(lineno=10, col_offset=27, end_lineno=10, end_col_offset=31, arg='self', annotation=None, type_comment=None)],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        If(
                            lineno=12,
                            col_offset=8,
                            end_lineno=13,
                            end_col_offset=60,
                            test=UnaryOp(
                                lineno=12,
                                col_offset=11,
                                end_lineno=12,
                                end_col_offset=67,
                                op=Not(),
                                operand=Call(
                                    lineno=12,
                                    col_offset=15,
                                    end_lineno=12,
                                    end_col_offset=67,
                                    func=Name(lineno=12, col_offset=15, end_lineno=12, end_col_offset=18, id='any', ctx=Load()),
                                    args=[
                                        GeneratorExp(
                                            lineno=12,
                                            col_offset=18,
                                            end_lineno=12,
                                            end_col_offset=67,
                                            elt=Attribute(
                                                lineno=12,
                                                col_offset=19,
                                                end_lineno=12,
                                                end_col_offset=46,
                                                value=Name(lineno=12, col_offset=19, end_lineno=12, end_col_offset=26, id='product', ctx=Load()),
                                                attr='use_expiration_date',
                                                ctx=Load(),
                                            ),
                                            generators=[
                                                comprehension(
                                                    target=Name(lineno=12, col_offset=51, end_lineno=12, end_col_offset=58, id='product', ctx=Store()),
                                                    iter=Name(lineno=12, col_offset=62, end_lineno=12, end_col_offset=66, id='self', ctx=Load()),
                                                    ifs=[],
                                                    is_async=0,
                                                ),
                                            ],
                                        ),
                                    ],
                                    keywords=[],
                                ),
                            ),
                            body=[
                                Assign(
                                    lineno=13,
                                    col_offset=12,
                                    end_lineno=13,
                                    end_col_offset=60,
                                    targets=[Name(lineno=13, col_offset=12, end_lineno=13, end_col_offset=16, id='self', ctx=Store())],
                                    value=Call(
                                        lineno=13,
                                        col_offset=19,
                                        end_lineno=13,
                                        end_col_offset=60,
                                        func=Attribute(
                                            lineno=13,
                                            col_offset=19,
                                            end_lineno=13,
                                            end_col_offset=36,
                                            value=Name(lineno=13, col_offset=19, end_lineno=13, end_col_offset=23, id='self', ctx=Load()),
                                            attr='with_context',
                                            ctx=Load(),
                                        ),
                                        args=[],
                                        keywords=[
                                            keyword(
                                                lineno=13,
                                                col_offset=37,
                                                end_lineno=13,
                                                end_col_offset=59,
                                                arg='hide_removal_date',
                                                value=Constant(lineno=13, col_offset=55, end_lineno=13, end_col_offset=59, value=True, kind=None),
                                            ),
                                        ],
                                    ),
                                    type_comment=None,
                                ),
                            ],
                            orelse=[],
                        ),
                        Return(
                            lineno=14,
                            col_offset=8,
                            end_lineno=14,
                            end_col_offset=43,
                            value=Call(
                                lineno=14,
                                col_offset=15,
                                end_lineno=14,
                                end_col_offset=43,
                                func=Attribute(
                                    lineno=14,
                                    col_offset=15,
                                    end_lineno=14,
                                    end_col_offset=41,
                                    value=Call(
                                        lineno=14,
                                        col_offset=15,
                                        end_lineno=14,
                                        end_col_offset=22,
                                        func=Name(lineno=14, col_offset=15, end_lineno=14, end_col_offset=20, id='super', ctx=Load()),
                                        args=[],
                                        keywords=[],
                                    ),
                                    attr='action_open_quants',
                                    ctx=Load(),
                                ),
                                args=[],
                                keywords=[],
                            ),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
            ],
            decorator_list=[],
        ),
        ClassDef(
            lineno=17,
            col_offset=0,
            end_lineno=35,
            end_col_offset=90,
            name='ProductTemplate',
            bases=[
                Attribute(
                    lineno=17,
                    col_offset=22,
                    end_lineno=17,
                    end_col_offset=34,
                    value=Name(lineno=17, col_offset=22, end_lineno=17, end_col_offset=28, id='models', ctx=Load()),
                    attr='Model',
                    ctx=Load(),
                ),
            ],
            keywords=[],
            body=[
                Assign(
                    lineno=18,
                    col_offset=4,
                    end_lineno=18,
                    end_col_offset=33,
                    targets=[Name(lineno=18, col_offset=4, end_lineno=18, end_col_offset=12, id='_inherit', ctx=Store())],
                    value=Constant(lineno=18, col_offset=15, end_lineno=18, end_col_offset=33, value='product.template', kind=None),
                    type_comment=None,
                ),
                Assign(
                    lineno=20,
                    col_offset=4,
                    end_lineno=22,
                    end_col_offset=90,
                    targets=[Name(lineno=20, col_offset=4, end_lineno=20, end_col_offset=23, id='use_expiration_date', ctx=Store())],
                    value=Call(
                        lineno=20,
                        col_offset=26,
                        end_lineno=22,
                        end_col_offset=90,
                        func=Attribute(
                            lineno=20,
                            col_offset=26,
                            end_lineno=20,
                            end_col_offset=40,
                            value=Name(lineno=20, col_offset=26, end_lineno=20, end_col_offset=32, id='fields', ctx=Load()),
                            attr='Boolean',
                            ctx=Load(),
                        ),
                        args=[],
                        keywords=[
                            keyword(
                                lineno=20,
                                col_offset=41,
                                end_lineno=20,
                                end_col_offset=65,
                                arg='string',
                                value=Constant(lineno=20, col_offset=48, end_lineno=20, end_col_offset=65, value='Expiration Date', kind=None),
                            ),
                            keyword(
                                lineno=21,
                                col_offset=8,
                                end_lineno=22,
                                end_col_offset=89,
                                arg='help',
                                value=Constant(lineno=21, col_offset=13, end_lineno=22, end_col_offset=89, value='When this box is ticked, you have the possibility to specify dates to manage product expiration, on the product and on the corresponding lot/serial numbers', kind=None),
                            ),
                        ],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=23,
                    col_offset=4,
                    end_lineno=26,
                    end_col_offset=83,
                    targets=[Name(lineno=23, col_offset=4, end_lineno=23, end_col_offset=19, id='expiration_time', ctx=Store())],
                    value=Call(
                        lineno=23,
                        col_offset=22,
                        end_lineno=26,
                        end_col_offset=83,
                        func=Attribute(
                            lineno=23,
                            col_offset=22,
                            end_lineno=23,
                            end_col_offset=36,
                            value=Name(lineno=23, col_offset=22, end_lineno=23, end_col_offset=28, id='fields', ctx=Load()),
                            attr='Integer',
                            ctx=Load(),
                        ),
                        args=[],
                        keywords=[
                            keyword(
                                lineno=23,
                                col_offset=37,
                                end_lineno=23,
                                end_col_offset=61,
                                arg='string',
                                value=Constant(lineno=23, col_offset=44, end_lineno=23, end_col_offset=61, value='Expiration Time', kind=None),
                            ),
                            keyword(
                                lineno=24,
                                col_offset=8,
                                end_lineno=26,
                                end_col_offset=82,
                                arg='help',
                                value=Constant(lineno=24, col_offset=13, end_lineno=26, end_col_offset=82, value='Number of days after the receipt of the products (from the vendor or in stock after production) after which the goods may become dangerous and must not be consumed. It will be computed on the lot/serial number.', kind=None),
                            ),
                        ],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=27,
                    col_offset=4,
                    end_lineno=29,
                    end_col_offset=101,
                    targets=[Name(lineno=27, col_offset=4, end_lineno=27, end_col_offset=12, id='use_time', ctx=Store())],
                    value=Call(
                        lineno=27,
                        col_offset=15,
                        end_lineno=29,
                        end_col_offset=101,
                        func=Attribute(
                            lineno=27,
                            col_offset=15,
                            end_lineno=27,
                            end_col_offset=29,
                            value=Name(lineno=27, col_offset=15, end_lineno=27, end_col_offset=21, id='fields', ctx=Load()),
                            attr='Integer',
                            ctx=Load(),
                        ),
                        args=[],
                        keywords=[
                            keyword(
                                lineno=27,
                                col_offset=30,
                                end_lineno=27,
                                end_col_offset=55,
                                arg='string',
                                value=Constant(lineno=27, col_offset=37, end_lineno=27, end_col_offset=55, value='Best Before Time', kind=None),
                            ),
                            keyword(
                                lineno=28,
                                col_offset=8,
                                end_lineno=29,
                                end_col_offset=100,
                                arg='help',
                                value=Constant(lineno=28, col_offset=13, end_lineno=29, end_col_offset=100, value='Number of days before the Expiration Date after which the goods starts deteriorating, without being dangerous yet. It will be computed on the lot/serial number.', kind=None),
                            ),
                        ],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=30,
                    col_offset=4,
                    end_lineno=32,
                    end_col_offset=91,
                    targets=[Name(lineno=30, col_offset=4, end_lineno=30, end_col_offset=16, id='removal_time', ctx=Store())],
                    value=Call(
                        lineno=30,
                        col_offset=19,
                        end_lineno=32,
                        end_col_offset=91,
                        func=Attribute(
                            lineno=30,
                            col_offset=19,
                            end_lineno=30,
                            end_col_offset=33,
                            value=Name(lineno=30, col_offset=19, end_lineno=30, end_col_offset=25, id='fields', ctx=Load()),
                            attr='Integer',
                            ctx=Load(),
                        ),
                        args=[],
                        keywords=[
                            keyword(
                                lineno=30,
                                col_offset=34,
                                end_lineno=30,
                                end_col_offset=55,
                                arg='string',
                                value=Constant(lineno=30, col_offset=41, end_lineno=30, end_col_offset=55, value='Removal Time', kind=None),
                            ),
                            keyword(
                                lineno=31,
                                col_offset=8,
                                end_lineno=32,
                                end_col_offset=90,
                                arg='help',
                                value=Constant(lineno=31, col_offset=13, end_lineno=32, end_col_offset=90, value='Number of days before the Expiration Date after which the goods should be removed from the stock. It will be computed on the lot/serial number.', kind=None),
                            ),
                        ],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=33,
                    col_offset=4,
                    end_lineno=35,
                    end_col_offset=90,
                    targets=[Name(lineno=33, col_offset=4, end_lineno=33, end_col_offset=14, id='alert_time', ctx=Store())],
                    value=Call(
                        lineno=33,
                        col_offset=17,
                        end_lineno=35,
                        end_col_offset=90,
                        func=Attribute(
                            lineno=33,
                            col_offset=17,
                            end_lineno=33,
                            end_col_offset=31,
                            value=Name(lineno=33, col_offset=17, end_lineno=33, end_col_offset=23, id='fields', ctx=Load()),
                            attr='Integer',
                            ctx=Load(),
                        ),
                        args=[],
                        keywords=[
                            keyword(
                                lineno=33,
                                col_offset=32,
                                end_lineno=33,
                                end_col_offset=51,
                                arg='string',
                                value=Constant(lineno=33, col_offset=39, end_lineno=33, end_col_offset=51, value='Alert Time', kind=None),
                            ),
                            keyword(
                                lineno=34,
                                col_offset=8,
                                end_lineno=35,
                                end_col_offset=89,
                                arg='help',
                                value=Constant(lineno=34, col_offset=13, end_lineno=35, end_col_offset=89, value='Number of days before the Expiration Date after which an alert should be raised on the lot/serial number. It will be computed on the lot/serial number.', kind=None),
                            ),
                        ],
                    ),
                    type_comment=None,
                ),
            ],
            decorator_list=[],
        ),
    ],
    type_ignores=[],
)
