Module(
    body=[
        Import(
            lineno=2,
            col_offset=0,
            end_lineno=2,
            end_col_offset=13,
            names=[alias(name='base64', asname=None)],
        ),
        ImportFrom(
            lineno=4,
            col_offset=0,
            end_lineno=4,
            end_col_offset=39,
            module='odoo',
            names=[
                alias(name='api', asname=None),
                alias(name='models', asname=None),
                alias(name='fields', asname=None),
                alias(name='_', asname=None),
            ],
            level=0,
        ),
        ImportFrom(
            lineno=5,
            col_offset=0,
            end_lineno=5,
            end_col_offset=37,
            module='odoo.exceptions',
            names=[alias(name='UserError', asname=None)],
            level=0,
        ),
        ImportFrom(
            lineno=6,
            col_offset=0,
            end_lineno=6,
            end_col_offset=43,
            module='odoo.tools.image',
            names=[alias(name='image_data_uri', asname=None)],
            level=0,
        ),
        Import(
            lineno=8,
            col_offset=0,
            end_lineno=8,
            end_col_offset=15,
            names=[alias(name='werkzeug', asname=None)],
        ),
        Import(
            lineno=9,
            col_offset=0,
            end_lineno=9,
            end_col_offset=26,
            names=[alias(name='werkzeug.exceptions', asname=None)],
        ),
        ClassDef(
            lineno=11,
            col_offset=0,
            end_lineno=170,
            end_col_offset=19,
            name='ResPartnerBank',
            bases=[
                Attribute(
                    lineno=11,
                    col_offset=21,
                    end_lineno=11,
                    end_col_offset=33,
                    value=Name(lineno=11, col_offset=21, end_lineno=11, end_col_offset=27, id='models', ctx=Load()),
                    attr='Model',
                    ctx=Load(),
                ),
            ],
            keywords=[],
            body=[
                Assign(
                    lineno=12,
                    col_offset=4,
                    end_lineno=12,
                    end_col_offset=33,
                    targets=[Name(lineno=12, col_offset=4, end_lineno=12, end_col_offset=12, id='_inherit', ctx=Store())],
                    value=Constant(lineno=12, col_offset=15, end_lineno=12, end_col_offset=33, value='res.partner.bank', kind=None),
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=14,
                    col_offset=4,
                    end_lineno=54,
                    end_col_offset=19,
                    name='_build_qr_code_vals',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(lineno=14, col_offset=28, end_lineno=14, end_col_offset=32, arg='self', annotation=None, type_comment=None),
                            arg(lineno=14, col_offset=34, end_lineno=14, end_col_offset=40, arg='amount', annotation=None, type_comment=None),
                            arg(lineno=14, col_offset=42, end_lineno=14, end_col_offset=60, arg='free_communication', annotation=None, type_comment=None),
                            arg(lineno=14, col_offset=62, end_lineno=14, end_col_offset=86, arg='structured_communication', annotation=None, type_comment=None),
                            arg(lineno=14, col_offset=88, end_lineno=14, end_col_offset=96, arg='currency', annotation=None, type_comment=None),
                            arg(lineno=14, col_offset=98, end_lineno=14, end_col_offset=112, arg='debtor_partner', annotation=None, type_comment=None),
                            arg(lineno=14, col_offset=114, end_lineno=14, end_col_offset=123, arg='qr_method', annotation=None, type_comment=None),
                            arg(lineno=14, col_offset=130, end_lineno=14, end_col_offset=143, arg='silent_errors', annotation=None, type_comment=None),
                        ],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[
                            Constant(lineno=14, col_offset=124, end_lineno=14, end_col_offset=128, value=None, kind=None),
                            Constant(lineno=14, col_offset=144, end_lineno=14, end_col_offset=148, value=True, kind=None),
                        ],
                    ),
                    body=[
                        Expr(
                            lineno=15,
                            col_offset=8,
                            end_lineno=25,
                            end_col_offset=11,
                            value=Constant(lineno=15, col_offset=8, end_lineno=25, end_col_offset=11, value=" Returns the QR-code vals needed to generate the QR-code report link to pay this account with the given parameters,\n        or None if no QR-code could be generated.\n\n        :param amount: The amount to be paid\n        :param free_communication: Free communication to add to the payment when generating one with the QR-code\n        :param structured_communication: Structured communication to add to the payment when generating one with the QR-code\n        :param currency: The currency in which amount is expressed\n        :param debtor_partner: The partner to which this QR-code is aimed (so the one who will have to pay)\n        :param qr_method: The QR generation method to be used to make the QR-code. If None, the first one giving a result will be used.\n        :param silent_errors: If true, forbids errors to be raised if some tested QR-code format can't be generated because of incorrect data.\n        ", kind=None),
                        ),
                        If(
                            lineno=26,
                            col_offset=8,
                            end_lineno=27,
                            end_col_offset=23,
                            test=UnaryOp(
                                lineno=26,
                                col_offset=11,
                                end_lineno=26,
                                end_col_offset=19,
                                op=Not(),
                                operand=Name(lineno=26, col_offset=15, end_lineno=26, end_col_offset=19, id='self', ctx=Load()),
                            ),
                            body=[
                                Return(
                                    lineno=27,
                                    col_offset=12,
                                    end_lineno=27,
                                    end_col_offset=23,
                                    value=Constant(lineno=27, col_offset=19, end_lineno=27, end_col_offset=23, value=None, kind=None),
                                ),
                            ],
                            orelse=[],
                        ),
                        Expr(
                            lineno=29,
                            col_offset=8,
                            end_lineno=29,
                            end_col_offset=25,
                            value=Call(
                                lineno=29,
                                col_offset=8,
                                end_lineno=29,
                                end_col_offset=25,
                                func=Attribute(
                                    lineno=29,
                                    col_offset=8,
                                    end_lineno=29,
                                    end_col_offset=23,
                                    value=Name(lineno=29, col_offset=8, end_lineno=29, end_col_offset=12, id='self', ctx=Load()),
                                    attr='ensure_one',
                                    ctx=Load(),
                                ),
                                args=[],
                                keywords=[],
                            ),
                        ),
                        If(
                            lineno=31,
                            col_offset=8,
                            end_lineno=32,
                            end_col_offset=97,
                            test=UnaryOp(
                                lineno=31,
                                col_offset=11,
                                end_lineno=31,
                                end_col_offset=23,
                                op=Not(),
                                operand=Name(lineno=31, col_offset=15, end_lineno=31, end_col_offset=23, id='currency', ctx=Load()),
                            ),
                            body=[
                                Raise(
                                    lineno=32,
                                    col_offset=12,
                                    end_lineno=32,
                                    end_col_offset=97,
                                    exc=Call(
                                        lineno=32,
                                        col_offset=18,
                                        end_lineno=32,
                                        end_col_offset=97,
                                        func=Name(lineno=32, col_offset=18, end_lineno=32, end_col_offset=27, id='UserError', ctx=Load()),
                                        args=[
                                            Call(
                                                lineno=32,
                                                col_offset=28,
                                                end_lineno=32,
                                                end_col_offset=96,
                                                func=Name(lineno=32, col_offset=28, end_lineno=32, end_col_offset=29, id='_', ctx=Load()),
                                                args=[Constant(lineno=32, col_offset=30, end_lineno=32, end_col_offset=95, value='Currency must always be provided in order to generate a QR-code', kind=None)],
                                                keywords=[],
                                            ),
                                        ],
                                        keywords=[],
                                    ),
                                    cause=None,
                                ),
                            ],
                            orelse=[],
                        ),
                        Assign(
                            lineno=34,
                            col_offset=8,
                            end_lineno=34,
                            end_col_offset=74,
                            targets=[Name(lineno=34, col_offset=8, end_lineno=34, end_col_offset=28, id='available_qr_methods', ctx=Store())],
                            value=Call(
                                lineno=34,
                                col_offset=31,
                                end_lineno=34,
                                end_col_offset=74,
                                func=Attribute(
                                    lineno=34,
                                    col_offset=31,
                                    end_lineno=34,
                                    end_col_offset=72,
                                    value=Name(lineno=34, col_offset=31, end_lineno=34, end_col_offset=35, id='self', ctx=Load()),
                                    attr='get_available_qr_methods_in_sequence',
                                    ctx=Load(),
                                ),
                                args=[],
                                keywords=[],
                            ),
                            type_comment=None,
                        ),
                        Assign(
                            lineno=35,
                            col_offset=8,
                            end_lineno=35,
                            end_col_offset=118,
                            targets=[Name(lineno=35, col_offset=8, end_lineno=35, end_col_offset=25, id='candidate_methods', ctx=Store())],
                            value=BoolOp(
                                lineno=35,
                                col_offset=28,
                                end_lineno=35,
                                end_col_offset=118,
                                op=Or(),
                                values=[
                                    BoolOp(
                                        lineno=35,
                                        col_offset=28,
                                        end_lineno=35,
                                        end_col_offset=94,
                                        op=And(),
                                        values=[
                                            Name(lineno=35, col_offset=28, end_lineno=35, end_col_offset=37, id='qr_method', ctx=Load()),
                                            List(
                                                lineno=35,
                                                col_offset=42,
                                                end_lineno=35,
                                                end_col_offset=94,
                                                elts=[
                                                    Tuple(
                                                        lineno=35,
                                                        col_offset=43,
                                                        end_lineno=35,
                                                        end_col_offset=93,
                                                        elts=[
                                                            Name(lineno=35, col_offset=44, end_lineno=35, end_col_offset=53, id='qr_method', ctx=Load()),
                                                            Subscript(
                                                                lineno=35,
                                                                col_offset=55,
                                                                end_lineno=35,
                                                                end_col_offset=92,
                                                                value=Call(
                                                                    lineno=35,
                                                                    col_offset=55,
                                                                    end_lineno=35,
                                                                    end_col_offset=81,
                                                                    func=Name(lineno=35, col_offset=55, end_lineno=35, end_col_offset=59, id='dict', ctx=Load()),
                                                                    args=[Name(lineno=35, col_offset=60, end_lineno=35, end_col_offset=80, id='available_qr_methods', ctx=Load())],
                                                                    keywords=[],
                                                                ),
                                                                slice=Name(lineno=35, col_offset=82, end_lineno=35, end_col_offset=91, id='qr_method', ctx=Load()),
                                                                ctx=Load(),
                                                            ),
                                                        ],
                                                        ctx=Load(),
                                                    ),
                                                ],
                                                ctx=Load(),
                                            ),
                                        ],
                                    ),
                                    Name(lineno=35, col_offset=98, end_lineno=35, end_col_offset=118, id='available_qr_methods', ctx=Load()),
                                ],
                            ),
                            type_comment=None,
                        ),
                        For(
                            lineno=36,
                            col_offset=8,
                            end_lineno=52,
                            end_col_offset=66,
                            target=Tuple(
                                lineno=36,
                                col_offset=12,
                                end_lineno=36,
                                end_col_offset=44,
                                elts=[
                                    Name(lineno=36, col_offset=12, end_lineno=36, end_col_offset=28, id='candidate_method', ctx=Store()),
                                    Name(lineno=36, col_offset=30, end_lineno=36, end_col_offset=44, id='candidate_name', ctx=Store()),
                                ],
                                ctx=Store(),
                            ),
                            iter=Name(lineno=36, col_offset=48, end_lineno=36, end_col_offset=65, id='candidate_methods', ctx=Load()),
                            body=[
                                If(
                                    lineno=37,
                                    col_offset=12,
                                    end_lineno=52,
                                    end_col_offset=66,
                                    test=Call(
                                        lineno=37,
                                        col_offset=15,
                                        end_lineno=37,
                                        end_col_offset=85,
                                        func=Attribute(
                                            lineno=37,
                                            col_offset=15,
                                            end_lineno=37,
                                            end_col_offset=41,
                                            value=Name(lineno=37, col_offset=15, end_lineno=37, end_col_offset=19, id='self', ctx=Load()),
                                            attr='_eligible_for_qr_code',
                                            ctx=Load(),
                                        ),
                                        args=[
                                            Name(lineno=37, col_offset=42, end_lineno=37, end_col_offset=58, id='candidate_method', ctx=Load()),
                                            Name(lineno=37, col_offset=60, end_lineno=37, end_col_offset=74, id='debtor_partner', ctx=Load()),
                                            Name(lineno=37, col_offset=76, end_lineno=37, end_col_offset=84, id='currency', ctx=Load()),
                                        ],
                                        keywords=[],
                                    ),
                                    body=[
                                        Assign(
                                            lineno=38,
                                            col_offset=16,
                                            end_lineno=38,
                                            end_col_offset=160,
                                            targets=[Name(lineno=38, col_offset=16, end_lineno=38, end_col_offset=29, id='error_message', ctx=Store())],
                                            value=Call(
                                                lineno=38,
                                                col_offset=32,
                                                end_lineno=38,
                                                end_col_offset=160,
                                                func=Attribute(
                                                    lineno=38,
                                                    col_offset=32,
                                                    end_lineno=38,
                                                    end_col_offset=62,
                                                    value=Name(lineno=38, col_offset=32, end_lineno=38, end_col_offset=36, id='self', ctx=Load()),
                                                    attr='_check_for_qr_code_errors',
                                                    ctx=Load(),
                                                ),
                                                args=[
                                                    Name(lineno=38, col_offset=63, end_lineno=38, end_col_offset=79, id='candidate_method', ctx=Load()),
                                                    Name(lineno=38, col_offset=81, end_lineno=38, end_col_offset=87, id='amount', ctx=Load()),
                                                    Name(lineno=38, col_offset=89, end_lineno=38, end_col_offset=97, id='currency', ctx=Load()),
                                                    Name(lineno=38, col_offset=99, end_lineno=38, end_col_offset=113, id='debtor_partner', ctx=Load()),
                                                    Name(lineno=38, col_offset=115, end_lineno=38, end_col_offset=133, id='free_communication', ctx=Load()),
                                                    Name(lineno=38, col_offset=135, end_lineno=38, end_col_offset=159, id='structured_communication', ctx=Load()),
                                                ],
                                                keywords=[],
                                            ),
                                            type_comment=None,
                                        ),
                                        If(
                                            lineno=40,
                                            col_offset=16,
                                            end_lineno=52,
                                            end_col_offset=66,
                                            test=UnaryOp(
                                                lineno=40,
                                                col_offset=19,
                                                end_lineno=40,
                                                end_col_offset=36,
                                                op=Not(),
                                                operand=Name(lineno=40, col_offset=23, end_lineno=40, end_col_offset=36, id='error_message', ctx=Load()),
                                            ),
                                            body=[
                                                Return(
                                                    lineno=41,
                                                    col_offset=20,
                                                    end_lineno=48,
                                                    end_col_offset=21,
                                                    value=Dict(
                                                        lineno=41,
                                                        col_offset=27,
                                                        end_lineno=48,
                                                        end_col_offset=21,
                                                        keys=[
                                                            Constant(lineno=42, col_offset=24, end_lineno=42, end_col_offset=35, value='qr_method', kind=None),
                                                            Constant(lineno=43, col_offset=24, end_lineno=43, end_col_offset=32, value='amount', kind=None),
                                                            Constant(lineno=44, col_offset=24, end_lineno=44, end_col_offset=34, value='currency', kind=None),
                                                            Constant(lineno=45, col_offset=24, end_lineno=45, end_col_offset=40, value='debtor_partner', kind=None),
                                                            Constant(lineno=46, col_offset=24, end_lineno=46, end_col_offset=44, value='free_communication', kind=None),
                                                            Constant(lineno=47, col_offset=24, end_lineno=47, end_col_offset=50, value='structured_communication', kind=None),
                                                        ],
                                                        values=[
                                                            Name(lineno=42, col_offset=37, end_lineno=42, end_col_offset=53, id='candidate_method', ctx=Load()),
                                                            Name(lineno=43, col_offset=34, end_lineno=43, end_col_offset=40, id='amount', ctx=Load()),
                                                            Name(lineno=44, col_offset=36, end_lineno=44, end_col_offset=44, id='currency', ctx=Load()),
                                                            Name(lineno=45, col_offset=42, end_lineno=45, end_col_offset=56, id='debtor_partner', ctx=Load()),
                                                            Name(lineno=46, col_offset=46, end_lineno=46, end_col_offset=64, id='free_communication', ctx=Load()),
                                                            Name(lineno=47, col_offset=52, end_lineno=47, end_col_offset=76, id='structured_communication', ctx=Load()),
                                                        ],
                                                    ),
                                                ),
                                            ],
                                            orelse=[
                                                If(
                                                    lineno=50,
                                                    col_offset=16,
                                                    end_lineno=52,
                                                    end_col_offset=66,
                                                    test=UnaryOp(
                                                        lineno=50,
                                                        col_offset=21,
                                                        end_lineno=50,
                                                        end_col_offset=38,
                                                        op=Not(),
                                                        operand=Name(lineno=50, col_offset=25, end_lineno=50, end_col_offset=38, id='silent_errors', ctx=Load()),
                                                    ),
                                                    body=[
                                                        Assign(
                                                            lineno=51,
                                                            col_offset=20,
                                                            end_lineno=51,
                                                            end_col_offset=151,
                                                            targets=[Name(lineno=51, col_offset=20, end_lineno=51, end_col_offset=32, id='error_header', ctx=Store())],
                                                            value=Call(
                                                                lineno=51,
                                                                col_offset=35,
                                                                end_lineno=51,
                                                                end_col_offset=151,
                                                                func=Name(lineno=51, col_offset=35, end_lineno=51, end_col_offset=36, id='_', ctx=Load()),
                                                                args=[
                                                                    Constant(lineno=51, col_offset=37, end_lineno=51, end_col_offset=134, value="The following error prevented '%s' QR-code to be generated though it was detected as eligible: ", kind=None),
                                                                    Name(lineno=51, col_offset=136, end_lineno=51, end_col_offset=150, id='candidate_name', ctx=Load()),
                                                                ],
                                                                keywords=[],
                                                            ),
                                                            type_comment=None,
                                                        ),
                                                        Raise(
                                                            lineno=52,
                                                            col_offset=20,
                                                            end_lineno=52,
                                                            end_col_offset=66,
                                                            exc=Call(
                                                                lineno=52,
                                                                col_offset=26,
                                                                end_lineno=52,
                                                                end_col_offset=66,
                                                                func=Name(lineno=52, col_offset=26, end_lineno=52, end_col_offset=35, id='UserError', ctx=Load()),
                                                                args=[
                                                                    BinOp(
                                                                        lineno=52,
                                                                        col_offset=37,
                                                                        end_lineno=52,
                                                                        end_col_offset=65,
                                                                        left=Name(lineno=52, col_offset=37, end_lineno=52, end_col_offset=49, id='error_header', ctx=Load()),
                                                                        op=Add(),
                                                                        right=Name(lineno=52, col_offset=52, end_lineno=52, end_col_offset=65, id='error_message', ctx=Load()),
                                                                    ),
                                                                ],
                                                                keywords=[],
                                                            ),
                                                            cause=None,
                                                        ),
                                                    ],
                                                    orelse=[],
                                                ),
                                            ],
                                        ),
                                    ],
                                    orelse=[],
                                ),
                            ],
                            orelse=[],
                            type_comment=None,
                        ),
                        Return(
                            lineno=54,
                            col_offset=8,
                            end_lineno=54,
                            end_col_offset=19,
                            value=Constant(lineno=54, col_offset=15, end_lineno=54, end_col_offset=19, value=None, kind=None),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=56,
                    col_offset=4,
                    end_lineno=67,
                    end_col_offset=19,
                    name='build_qr_code_url',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(lineno=56, col_offset=26, end_lineno=56, end_col_offset=30, arg='self', annotation=None, type_comment=None),
                            arg(lineno=56, col_offset=32, end_lineno=56, end_col_offset=38, arg='amount', annotation=None, type_comment=None),
                            arg(lineno=56, col_offset=40, end_lineno=56, end_col_offset=58, arg='free_communication', annotation=None, type_comment=None),
                            arg(lineno=56, col_offset=60, end_lineno=56, end_col_offset=84, arg='structured_communication', annotation=None, type_comment=None),
                            arg(lineno=56, col_offset=86, end_lineno=56, end_col_offset=94, arg='currency', annotation=None, type_comment=None),
                            arg(lineno=56, col_offset=96, end_lineno=56, end_col_offset=110, arg='debtor_partner', annotation=None, type_comment=None),
                            arg(lineno=56, col_offset=112, end_lineno=56, end_col_offset=121, arg='qr_method', annotation=None, type_comment=None),
                            arg(lineno=56, col_offset=128, end_lineno=56, end_col_offset=141, arg='silent_errors', annotation=None, type_comment=None),
                        ],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[
                            Constant(lineno=56, col_offset=122, end_lineno=56, end_col_offset=126, value=None, kind=None),
                            Constant(lineno=56, col_offset=142, end_lineno=56, end_col_offset=146, value=True, kind=None),
                        ],
                    ),
                    body=[
                        Assign(
                            lineno=57,
                            col_offset=8,
                            end_lineno=57,
                            end_col_offset=145,
                            targets=[Name(lineno=57, col_offset=8, end_lineno=57, end_col_offset=12, id='vals', ctx=Store())],
                            value=Call(
                                lineno=57,
                                col_offset=15,
                                end_lineno=57,
                                end_col_offset=145,
                                func=Attribute(
                                    lineno=57,
                                    col_offset=15,
                                    end_lineno=57,
                                    end_col_offset=39,
                                    value=Name(lineno=57, col_offset=15, end_lineno=57, end_col_offset=19, id='self', ctx=Load()),
                                    attr='_build_qr_code_vals',
                                    ctx=Load(),
                                ),
                                args=[
                                    Name(lineno=57, col_offset=40, end_lineno=57, end_col_offset=46, id='amount', ctx=Load()),
                                    Name(lineno=57, col_offset=48, end_lineno=57, end_col_offset=66, id='free_communication', ctx=Load()),
                                    Name(lineno=57, col_offset=68, end_lineno=57, end_col_offset=92, id='structured_communication', ctx=Load()),
                                    Name(lineno=57, col_offset=94, end_lineno=57, end_col_offset=102, id='currency', ctx=Load()),
                                    Name(lineno=57, col_offset=104, end_lineno=57, end_col_offset=118, id='debtor_partner', ctx=Load()),
                                    Name(lineno=57, col_offset=120, end_lineno=57, end_col_offset=129, id='qr_method', ctx=Load()),
                                    Name(lineno=57, col_offset=131, end_lineno=57, end_col_offset=144, id='silent_errors', ctx=Load()),
                                ],
                                keywords=[],
                            ),
                            type_comment=None,
                        ),
                        If(
                            lineno=58,
                            col_offset=8,
                            end_lineno=66,
                            end_col_offset=13,
                            test=Name(lineno=58, col_offset=11, end_lineno=58, end_col_offset=15, id='vals', ctx=Load()),
                            body=[
                                Return(
                                    lineno=59,
                                    col_offset=12,
                                    end_lineno=66,
                                    end_col_offset=13,
                                    value=Call(
                                        lineno=59,
                                        col_offset=19,
                                        end_lineno=66,
                                        end_col_offset=13,
                                        func=Attribute(
                                            lineno=59,
                                            col_offset=19,
                                            end_lineno=59,
                                            end_col_offset=40,
                                            value=Name(lineno=59, col_offset=19, end_lineno=59, end_col_offset=23, id='self', ctx=Load()),
                                            attr='_get_qr_code_url',
                                            ctx=Load(),
                                        ),
                                        args=[
                                            Subscript(
                                                lineno=60,
                                                col_offset=16,
                                                end_lineno=60,
                                                end_col_offset=33,
                                                value=Name(lineno=60, col_offset=16, end_lineno=60, end_col_offset=20, id='vals', ctx=Load()),
                                                slice=Constant(lineno=60, col_offset=21, end_lineno=60, end_col_offset=32, value='qr_method', kind=None),
                                                ctx=Load(),
                                            ),
                                            Subscript(
                                                lineno=61,
                                                col_offset=16,
                                                end_lineno=61,
                                                end_col_offset=30,
                                                value=Name(lineno=61, col_offset=16, end_lineno=61, end_col_offset=20, id='vals', ctx=Load()),
                                                slice=Constant(lineno=61, col_offset=21, end_lineno=61, end_col_offset=29, value='amount', kind=None),
                                                ctx=Load(),
                                            ),
                                            Subscript(
                                                lineno=62,
                                                col_offset=16,
                                                end_lineno=62,
                                                end_col_offset=32,
                                                value=Name(lineno=62, col_offset=16, end_lineno=62, end_col_offset=20, id='vals', ctx=Load()),
                                                slice=Constant(lineno=62, col_offset=21, end_lineno=62, end_col_offset=31, value='currency', kind=None),
                                                ctx=Load(),
                                            ),
                                            Subscript(
                                                lineno=63,
                                                col_offset=16,
                                                end_lineno=63,
                                                end_col_offset=38,
                                                value=Name(lineno=63, col_offset=16, end_lineno=63, end_col_offset=20, id='vals', ctx=Load()),
                                                slice=Constant(lineno=63, col_offset=21, end_lineno=63, end_col_offset=37, value='debtor_partner', kind=None),
                                                ctx=Load(),
                                            ),
                                            Subscript(
                                                lineno=64,
                                                col_offset=16,
                                                end_lineno=64,
                                                end_col_offset=42,
                                                value=Name(lineno=64, col_offset=16, end_lineno=64, end_col_offset=20, id='vals', ctx=Load()),
                                                slice=Constant(lineno=64, col_offset=21, end_lineno=64, end_col_offset=41, value='free_communication', kind=None),
                                                ctx=Load(),
                                            ),
                                            Subscript(
                                                lineno=65,
                                                col_offset=16,
                                                end_lineno=65,
                                                end_col_offset=48,
                                                value=Name(lineno=65, col_offset=16, end_lineno=65, end_col_offset=20, id='vals', ctx=Load()),
                                                slice=Constant(lineno=65, col_offset=21, end_lineno=65, end_col_offset=47, value='structured_communication', kind=None),
                                                ctx=Load(),
                                            ),
                                        ],
                                        keywords=[],
                                    ),
                                ),
                            ],
                            orelse=[],
                        ),
                        Return(
                            lineno=67,
                            col_offset=8,
                            end_lineno=67,
                            end_col_offset=19,
                            value=Constant(lineno=67, col_offset=15, end_lineno=67, end_col_offset=19, value=None, kind=None),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=69,
                    col_offset=4,
                    end_lineno=80,
                    end_col_offset=19,
                    name='build_qr_code_base64',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(lineno=69, col_offset=29, end_lineno=69, end_col_offset=33, arg='self', annotation=None, type_comment=None),
                            arg(lineno=69, col_offset=35, end_lineno=69, end_col_offset=41, arg='amount', annotation=None, type_comment=None),
                            arg(lineno=69, col_offset=43, end_lineno=69, end_col_offset=61, arg='free_communication', annotation=None, type_comment=None),
                            arg(lineno=69, col_offset=63, end_lineno=69, end_col_offset=87, arg='structured_communication', annotation=None, type_comment=None),
                            arg(lineno=69, col_offset=89, end_lineno=69, end_col_offset=97, arg='currency', annotation=None, type_comment=None),
                            arg(lineno=69, col_offset=99, end_lineno=69, end_col_offset=113, arg='debtor_partner', annotation=None, type_comment=None),
                            arg(lineno=69, col_offset=115, end_lineno=69, end_col_offset=124, arg='qr_method', annotation=None, type_comment=None),
                            arg(lineno=69, col_offset=131, end_lineno=69, end_col_offset=144, arg='silent_errors', annotation=None, type_comment=None),
                        ],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[
                            Constant(lineno=69, col_offset=125, end_lineno=69, end_col_offset=129, value=None, kind=None),
                            Constant(lineno=69, col_offset=145, end_lineno=69, end_col_offset=149, value=True, kind=None),
                        ],
                    ),
                    body=[
                        Assign(
                            lineno=70,
                            col_offset=8,
                            end_lineno=70,
                            end_col_offset=145,
                            targets=[Name(lineno=70, col_offset=8, end_lineno=70, end_col_offset=12, id='vals', ctx=Store())],
                            value=Call(
                                lineno=70,
                                col_offset=15,
                                end_lineno=70,
                                end_col_offset=145,
                                func=Attribute(
                                    lineno=70,
                                    col_offset=15,
                                    end_lineno=70,
                                    end_col_offset=39,
                                    value=Name(lineno=70, col_offset=15, end_lineno=70, end_col_offset=19, id='self', ctx=Load()),
                                    attr='_build_qr_code_vals',
                                    ctx=Load(),
                                ),
                                args=[
                                    Name(lineno=70, col_offset=40, end_lineno=70, end_col_offset=46, id='amount', ctx=Load()),
                                    Name(lineno=70, col_offset=48, end_lineno=70, end_col_offset=66, id='free_communication', ctx=Load()),
                                    Name(lineno=70, col_offset=68, end_lineno=70, end_col_offset=92, id='structured_communication', ctx=Load()),
                                    Name(lineno=70, col_offset=94, end_lineno=70, end_col_offset=102, id='currency', ctx=Load()),
                                    Name(lineno=70, col_offset=104, end_lineno=70, end_col_offset=118, id='debtor_partner', ctx=Load()),
                                    Name(lineno=70, col_offset=120, end_lineno=70, end_col_offset=129, id='qr_method', ctx=Load()),
                                    Name(lineno=70, col_offset=131, end_lineno=70, end_col_offset=144, id='silent_errors', ctx=Load()),
                                ],
                                keywords=[],
                            ),
                            type_comment=None,
                        ),
                        If(
                            lineno=71,
                            col_offset=8,
                            end_lineno=79,
                            end_col_offset=13,
                            test=Name(lineno=71, col_offset=11, end_lineno=71, end_col_offset=15, id='vals', ctx=Load()),
                            body=[
                                Return(
                                    lineno=72,
                                    col_offset=12,
                                    end_lineno=79,
                                    end_col_offset=13,
                                    value=Call(
                                        lineno=72,
                                        col_offset=19,
                                        end_lineno=79,
                                        end_col_offset=13,
                                        func=Attribute(
                                            lineno=72,
                                            col_offset=19,
                                            end_lineno=72,
                                            end_col_offset=43,
                                            value=Name(lineno=72, col_offset=19, end_lineno=72, end_col_offset=23, id='self', ctx=Load()),
                                            attr='_get_qr_code_base64',
                                            ctx=Load(),
                                        ),
                                        args=[
                                            Subscript(
                                                lineno=73,
                                                col_offset=16,
                                                end_lineno=73,
                                                end_col_offset=33,
                                                value=Name(lineno=73, col_offset=16, end_lineno=73, end_col_offset=20, id='vals', ctx=Load()),
                                                slice=Constant(lineno=73, col_offset=21, end_lineno=73, end_col_offset=32, value='qr_method', kind=None),
                                                ctx=Load(),
                                            ),
                                            Subscript(
                                                lineno=74,
                                                col_offset=16,
                                                end_lineno=74,
                                                end_col_offset=30,
                                                value=Name(lineno=74, col_offset=16, end_lineno=74, end_col_offset=20, id='vals', ctx=Load()),
                                                slice=Constant(lineno=74, col_offset=21, end_lineno=74, end_col_offset=29, value='amount', kind=None),
                                                ctx=Load(),
                                            ),
                                            Subscript(
                                                lineno=75,
                                                col_offset=16,
                                                end_lineno=75,
                                                end_col_offset=32,
                                                value=Name(lineno=75, col_offset=16, end_lineno=75, end_col_offset=20, id='vals', ctx=Load()),
                                                slice=Constant(lineno=75, col_offset=21, end_lineno=75, end_col_offset=31, value='currency', kind=None),
                                                ctx=Load(),
                                            ),
                                            Subscript(
                                                lineno=76,
                                                col_offset=16,
                                                end_lineno=76,
                                                end_col_offset=38,
                                                value=Name(lineno=76, col_offset=16, end_lineno=76, end_col_offset=20, id='vals', ctx=Load()),
                                                slice=Constant(lineno=76, col_offset=21, end_lineno=76, end_col_offset=37, value='debtor_partner', kind=None),
                                                ctx=Load(),
                                            ),
                                            Subscript(
                                                lineno=77,
                                                col_offset=16,
                                                end_lineno=77,
                                                end_col_offset=42,
                                                value=Name(lineno=77, col_offset=16, end_lineno=77, end_col_offset=20, id='vals', ctx=Load()),
                                                slice=Constant(lineno=77, col_offset=21, end_lineno=77, end_col_offset=41, value='free_communication', kind=None),
                                                ctx=Load(),
                                            ),
                                            Subscript(
                                                lineno=78,
                                                col_offset=16,
                                                end_lineno=78,
                                                end_col_offset=48,
                                                value=Name(lineno=78, col_offset=16, end_lineno=78, end_col_offset=20, id='vals', ctx=Load()),
                                                slice=Constant(lineno=78, col_offset=21, end_lineno=78, end_col_offset=47, value='structured_communication', kind=None),
                                                ctx=Load(),
                                            ),
                                        ],
                                        keywords=[],
                                    ),
                                ),
                            ],
                            orelse=[],
                        ),
                        Return(
                            lineno=80,
                            col_offset=8,
                            end_lineno=80,
                            end_col_offset=19,
                            value=Constant(lineno=80, col_offset=15, end_lineno=80, end_col_offset=19, value=None, kind=None),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=82,
                    col_offset=4,
                    end_lineno=83,
                    end_col_offset=19,
                    name='_get_qr_vals',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(lineno=82, col_offset=21, end_lineno=82, end_col_offset=25, arg='self', annotation=None, type_comment=None),
                            arg(lineno=82, col_offset=27, end_lineno=82, end_col_offset=36, arg='qr_method', annotation=None, type_comment=None),
                            arg(lineno=82, col_offset=38, end_lineno=82, end_col_offset=44, arg='amount', annotation=None, type_comment=None),
                            arg(lineno=82, col_offset=46, end_lineno=82, end_col_offset=54, arg='currency', annotation=None, type_comment=None),
                            arg(lineno=82, col_offset=56, end_lineno=82, end_col_offset=70, arg='debtor_partner', annotation=None, type_comment=None),
                            arg(lineno=82, col_offset=72, end_lineno=82, end_col_offset=90, arg='free_communication', annotation=None, type_comment=None),
                            arg(lineno=82, col_offset=92, end_lineno=82, end_col_offset=116, arg='structured_communication', annotation=None, type_comment=None),
                        ],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        Return(
                            lineno=83,
                            col_offset=8,
                            end_lineno=83,
                            end_col_offset=19,
                            value=Constant(lineno=83, col_offset=15, end_lineno=83, end_col_offset=19, value=None, kind=None),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=85,
                    col_offset=4,
                    end_lineno=86,
                    end_col_offset=19,
                    name='_get_qr_code_generation_params',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(lineno=85, col_offset=39, end_lineno=85, end_col_offset=43, arg='self', annotation=None, type_comment=None),
                            arg(lineno=85, col_offset=45, end_lineno=85, end_col_offset=54, arg='qr_method', annotation=None, type_comment=None),
                            arg(lineno=85, col_offset=56, end_lineno=85, end_col_offset=62, arg='amount', annotation=None, type_comment=None),
                            arg(lineno=85, col_offset=64, end_lineno=85, end_col_offset=72, arg='currency', annotation=None, type_comment=None),
                            arg(lineno=85, col_offset=74, end_lineno=85, end_col_offset=88, arg='debtor_partner', annotation=None, type_comment=None),
                            arg(lineno=85, col_offset=90, end_lineno=85, end_col_offset=108, arg='free_communication', annotation=None, type_comment=None),
                            arg(lineno=85, col_offset=110, end_lineno=85, end_col_offset=134, arg='structured_communication', annotation=None, type_comment=None),
                        ],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        Return(
                            lineno=86,
                            col_offset=8,
                            end_lineno=86,
                            end_col_offset=19,
                            value=Constant(lineno=86, col_offset=15, end_lineno=86, end_col_offset=19, value=None, kind=None),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=88,
                    col_offset=4,
                    end_lineno=107,
                    end_col_offset=19,
                    name='_get_qr_code_url',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(lineno=88, col_offset=25, end_lineno=88, end_col_offset=29, arg='self', annotation=None, type_comment=None),
                            arg(lineno=88, col_offset=31, end_lineno=88, end_col_offset=40, arg='qr_method', annotation=None, type_comment=None),
                            arg(lineno=88, col_offset=42, end_lineno=88, end_col_offset=48, arg='amount', annotation=None, type_comment=None),
                            arg(lineno=88, col_offset=50, end_lineno=88, end_col_offset=58, arg='currency', annotation=None, type_comment=None),
                            arg(lineno=88, col_offset=60, end_lineno=88, end_col_offset=74, arg='debtor_partner', annotation=None, type_comment=None),
                            arg(lineno=88, col_offset=76, end_lineno=88, end_col_offset=94, arg='free_communication', annotation=None, type_comment=None),
                            arg(lineno=88, col_offset=96, end_lineno=88, end_col_offset=120, arg='structured_communication', annotation=None, type_comment=None),
                        ],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        Expr(
                            lineno=89,
                            col_offset=8,
                            end_lineno=100,
                            end_col_offset=11,
                            value=Constant(lineno=89, col_offset=8, end_lineno=100, end_col_offset=11, value=' Hook for extension, to support the different QR generation methods.\n        This function uses the provided qr_method to try generation a QR-code for\n        the given data. It it succeeds, it returns the report URL to make this\n        QR-code; else None.\n\n        :param qr_method: The QR generation method to be used to make the QR-code.\n        :param amount: The amount to be paid\n        :param currency: The currency in which amount is expressed\n        :param debtor_partner: The partner to which this QR-code is aimed (so the one who will have to pay)\n        :param free_communication: Free communication to add to the payment when generating one with the QR-code\n        :param structured_communication: Structured communication to add to the payment when generating one with the QR-code\n        ', kind=None),
                        ),
                        Assign(
                            lineno=103,
                            col_offset=8,
                            end_lineno=103,
                            end_col_offset=143,
                            targets=[Name(lineno=103, col_offset=8, end_lineno=103, end_col_offset=14, id='params', ctx=Store())],
                            value=Call(
                                lineno=103,
                                col_offset=17,
                                end_lineno=103,
                                end_col_offset=143,
                                func=Attribute(
                                    lineno=103,
                                    col_offset=17,
                                    end_lineno=103,
                                    end_col_offset=52,
                                    value=Name(lineno=103, col_offset=17, end_lineno=103, end_col_offset=21, id='self', ctx=Load()),
                                    attr='_get_qr_code_generation_params',
                                    ctx=Load(),
                                ),
                                args=[
                                    Name(lineno=103, col_offset=53, end_lineno=103, end_col_offset=62, id='qr_method', ctx=Load()),
                                    Name(lineno=103, col_offset=64, end_lineno=103, end_col_offset=70, id='amount', ctx=Load()),
                                    Name(lineno=103, col_offset=72, end_lineno=103, end_col_offset=80, id='currency', ctx=Load()),
                                    Name(lineno=103, col_offset=82, end_lineno=103, end_col_offset=96, id='debtor_partner', ctx=Load()),
                                    Name(lineno=103, col_offset=98, end_lineno=103, end_col_offset=116, id='free_communication', ctx=Load()),
                                    Name(lineno=103, col_offset=118, end_lineno=103, end_col_offset=142, id='structured_communication', ctx=Load()),
                                ],
                                keywords=[],
                            ),
                            type_comment=None,
                        ),
                        If(
                            lineno=104,
                            col_offset=8,
                            end_lineno=106,
                            end_col_offset=73,
                            test=Name(lineno=104, col_offset=11, end_lineno=104, end_col_offset=17, id='params', ctx=Load()),
                            body=[
                                Assign(
                                    lineno=105,
                                    col_offset=12,
                                    end_lineno=105,
                                    end_col_offset=55,
                                    targets=[
                                        Subscript(
                                            lineno=105,
                                            col_offset=12,
                                            end_lineno=105,
                                            end_col_offset=26,
                                            value=Name(lineno=105, col_offset=12, end_lineno=105, end_col_offset=18, id='params', ctx=Load()),
                                            slice=Constant(lineno=105, col_offset=19, end_lineno=105, end_col_offset=25, value='type', kind=None),
                                            ctx=Store(),
                                        ),
                                    ],
                                    value=Call(
                                        lineno=105,
                                        col_offset=29,
                                        end_lineno=105,
                                        end_col_offset=55,
                                        func=Attribute(
                                            lineno=105,
                                            col_offset=29,
                                            end_lineno=105,
                                            end_col_offset=39,
                                            value=Name(lineno=105, col_offset=29, end_lineno=105, end_col_offset=35, id='params', ctx=Load()),
                                            attr='pop',
                                            ctx=Load(),
                                        ),
                                        args=[Constant(lineno=105, col_offset=40, end_lineno=105, end_col_offset=54, value='barcode_type', kind=None)],
                                        keywords=[],
                                    ),
                                    type_comment=None,
                                ),
                                Return(
                                    lineno=106,
                                    col_offset=12,
                                    end_lineno=106,
                                    end_col_offset=73,
                                    value=BinOp(
                                        lineno=106,
                                        col_offset=19,
                                        end_lineno=106,
                                        end_col_offset=73,
                                        left=Constant(lineno=106, col_offset=19, end_lineno=106, end_col_offset=38, value='/report/barcode/?', kind=None),
                                        op=Add(),
                                        right=Call(
                                            lineno=106,
                                            col_offset=41,
                                            end_lineno=106,
                                            end_col_offset=73,
                                            func=Attribute(
                                                lineno=106,
                                                col_offset=41,
                                                end_lineno=106,
                                                end_col_offset=65,
                                                value=Attribute(
                                                    lineno=106,
                                                    col_offset=41,
                                                    end_lineno=106,
                                                    end_col_offset=54,
                                                    value=Name(lineno=106, col_offset=41, end_lineno=106, end_col_offset=49, id='werkzeug', ctx=Load()),
                                                    attr='urls',
                                                    ctx=Load(),
                                                ),
                                                attr='url_encode',
                                                ctx=Load(),
                                            ),
                                            args=[Name(lineno=106, col_offset=66, end_lineno=106, end_col_offset=72, id='params', ctx=Load())],
                                            keywords=[],
                                        ),
                                    ),
                                ),
                            ],
                            orelse=[],
                        ),
                        Return(
                            lineno=107,
                            col_offset=8,
                            end_lineno=107,
                            end_col_offset=19,
                            value=Constant(lineno=107, col_offset=15, end_lineno=107, end_col_offset=19, value=None, kind=None),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=109,
                    col_offset=4,
                    end_lineno=131,
                    end_col_offset=19,
                    name='_get_qr_code_base64',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(lineno=109, col_offset=28, end_lineno=109, end_col_offset=32, arg='self', annotation=None, type_comment=None),
                            arg(lineno=109, col_offset=34, end_lineno=109, end_col_offset=43, arg='qr_method', annotation=None, type_comment=None),
                            arg(lineno=109, col_offset=45, end_lineno=109, end_col_offset=51, arg='amount', annotation=None, type_comment=None),
                            arg(lineno=109, col_offset=53, end_lineno=109, end_col_offset=61, arg='currency', annotation=None, type_comment=None),
                            arg(lineno=109, col_offset=63, end_lineno=109, end_col_offset=77, arg='debtor_partner', annotation=None, type_comment=None),
                            arg(lineno=109, col_offset=79, end_lineno=109, end_col_offset=97, arg='free_communication', annotation=None, type_comment=None),
                            arg(lineno=109, col_offset=99, end_lineno=109, end_col_offset=123, arg='structured_communication', annotation=None, type_comment=None),
                        ],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        Expr(
                            lineno=110,
                            col_offset=8,
                            end_lineno=120,
                            end_col_offset=11,
                            value=Constant(lineno=110, col_offset=8, end_lineno=120, end_col_offset=11, value=' Hook for extension, to support the different QR generation methods.\n        This function uses the provided qr_method to try generation a QR-code for\n        the given data. It it succeeds, it returns QR code in base64 url; else None.\n\n        :param qr_method: The QR generation method to be used to make the QR-code.\n        :param amount: The amount to be paid\n        :param currency: The currency in which amount is expressed\n        :param debtor_partner: The partner to which this QR-code is aimed (so the one who will have to pay)\n        :param free_communication: Free communication to add to the payment when generating one with the QR-code\n        :param structured_communication: Structured communication to add to the payment when generating one with the QR-code\n        ', kind=None),
                        ),
                        Assign(
                            lineno=124,
                            col_offset=8,
                            end_lineno=124,
                            end_col_offset=143,
                            targets=[Name(lineno=124, col_offset=8, end_lineno=124, end_col_offset=14, id='params', ctx=Store())],
                            value=Call(
                                lineno=124,
                                col_offset=17,
                                end_lineno=124,
                                end_col_offset=143,
                                func=Attribute(
                                    lineno=124,
                                    col_offset=17,
                                    end_lineno=124,
                                    end_col_offset=52,
                                    value=Name(lineno=124, col_offset=17, end_lineno=124, end_col_offset=21, id='self', ctx=Load()),
                                    attr='_get_qr_code_generation_params',
                                    ctx=Load(),
                                ),
                                args=[
                                    Name(lineno=124, col_offset=53, end_lineno=124, end_col_offset=62, id='qr_method', ctx=Load()),
                                    Name(lineno=124, col_offset=64, end_lineno=124, end_col_offset=70, id='amount', ctx=Load()),
                                    Name(lineno=124, col_offset=72, end_lineno=124, end_col_offset=80, id='currency', ctx=Load()),
                                    Name(lineno=124, col_offset=82, end_lineno=124, end_col_offset=96, id='debtor_partner', ctx=Load()),
                                    Name(lineno=124, col_offset=98, end_lineno=124, end_col_offset=116, id='free_communication', ctx=Load()),
                                    Name(lineno=124, col_offset=118, end_lineno=124, end_col_offset=142, id='structured_communication', ctx=Load()),
                                ],
                                keywords=[],
                            ),
                            type_comment=None,
                        ),
                        If(
                            lineno=125,
                            col_offset=8,
                            end_lineno=130,
                            end_col_offset=60,
                            test=Name(lineno=125, col_offset=11, end_lineno=125, end_col_offset=17, id='params', ctx=Load()),
                            body=[
                                Try(
                                    lineno=126,
                                    col_offset=12,
                                    end_lineno=129,
                                    end_col_offset=99,
                                    body=[
                                        Assign(
                                            lineno=127,
                                            col_offset=16,
                                            end_lineno=127,
                                            end_col_offset=73,
                                            targets=[Name(lineno=127, col_offset=16, end_lineno=127, end_col_offset=23, id='barcode', ctx=Store())],
                                            value=Call(
                                                lineno=127,
                                                col_offset=26,
                                                end_lineno=127,
                                                end_col_offset=73,
                                                func=Attribute(
                                                    lineno=127,
                                                    col_offset=26,
                                                    end_lineno=127,
                                                    end_col_offset=63,
                                                    value=Subscript(
                                                        lineno=127,
                                                        col_offset=26,
                                                        end_lineno=127,
                                                        end_col_offset=55,
                                                        value=Attribute(
                                                            lineno=127,
                                                            col_offset=26,
                                                            end_lineno=127,
                                                            end_col_offset=34,
                                                            value=Name(lineno=127, col_offset=26, end_lineno=127, end_col_offset=30, id='self', ctx=Load()),
                                                            attr='env',
                                                            ctx=Load(),
                                                        ),
                                                        slice=Constant(lineno=127, col_offset=35, end_lineno=127, end_col_offset=54, value='ir.actions.report', kind=None),
                                                        ctx=Load(),
                                                    ),
                                                    attr='barcode',
                                                    ctx=Load(),
                                                ),
                                                args=[],
                                                keywords=[
                                                    keyword(
                                                        lineno=127,
                                                        col_offset=64,
                                                        end_lineno=127,
                                                        end_col_offset=72,
                                                        arg=None,
                                                        value=Name(lineno=127, col_offset=66, end_lineno=127, end_col_offset=72, id='params', ctx=Load()),
                                                    ),
                                                ],
                                            ),
                                            type_comment=None,
                                        ),
                                    ],
                                    handlers=[
                                        ExceptHandler(
                                            lineno=128,
                                            col_offset=12,
                                            end_lineno=129,
                                            end_col_offset=99,
                                            type=Tuple(
                                                lineno=128,
                                                col_offset=19,
                                                end_lineno=128,
                                                end_col_offset=47,
                                                elts=[
                                                    Name(lineno=128, col_offset=20, end_lineno=128, end_col_offset=30, id='ValueError', ctx=Load()),
                                                    Name(lineno=128, col_offset=32, end_lineno=128, end_col_offset=46, id='AttributeError', ctx=Load()),
                                                ],
                                                ctx=Load(),
                                            ),
                                            name=None,
                                            body=[
                                                Raise(
                                                    lineno=129,
                                                    col_offset=16,
                                                    end_lineno=129,
                                                    end_col_offset=99,
                                                    exc=Call(
                                                        lineno=129,
                                                        col_offset=22,
                                                        end_lineno=129,
                                                        end_col_offset=99,
                                                        func=Attribute(
                                                            lineno=129,
                                                            col_offset=22,
                                                            end_lineno=129,
                                                            end_col_offset=55,
                                                            value=Attribute(
                                                                lineno=129,
                                                                col_offset=22,
                                                                end_lineno=129,
                                                                end_col_offset=41,
                                                                value=Name(lineno=129, col_offset=22, end_lineno=129, end_col_offset=30, id='werkzeug', ctx=Load()),
                                                                attr='exceptions',
                                                                ctx=Load(),
                                                            ),
                                                            attr='HTTPException',
                                                            ctx=Load(),
                                                        ),
                                                        args=[],
                                                        keywords=[
                                                            keyword(
                                                                lineno=129,
                                                                col_offset=56,
                                                                end_lineno=129,
                                                                end_col_offset=98,
                                                                arg='description',
                                                                value=Constant(lineno=129, col_offset=68, end_lineno=129, end_col_offset=98, value='Cannot convert into barcode.', kind=None),
                                                            ),
                                                        ],
                                                    ),
                                                    cause=None,
                                                ),
                                            ],
                                        ),
                                    ],
                                    orelse=[],
                                    finalbody=[],
                                ),
                                Return(
                                    lineno=130,
                                    col_offset=12,
                                    end_lineno=130,
                                    end_col_offset=60,
                                    value=Call(
                                        lineno=130,
                                        col_offset=19,
                                        end_lineno=130,
                                        end_col_offset=60,
                                        func=Name(lineno=130, col_offset=19, end_lineno=130, end_col_offset=33, id='image_data_uri', ctx=Load()),
                                        args=[
                                            Call(
                                                lineno=130,
                                                col_offset=34,
                                                end_lineno=130,
                                                end_col_offset=59,
                                                func=Attribute(
                                                    lineno=130,
                                                    col_offset=34,
                                                    end_lineno=130,
                                                    end_col_offset=50,
                                                    value=Name(lineno=130, col_offset=34, end_lineno=130, end_col_offset=40, id='base64', ctx=Load()),
                                                    attr='b64encode',
                                                    ctx=Load(),
                                                ),
                                                args=[Name(lineno=130, col_offset=51, end_lineno=130, end_col_offset=58, id='barcode', ctx=Load())],
                                                keywords=[],
                                            ),
                                        ],
                                        keywords=[],
                                    ),
                                ),
                            ],
                            orelse=[],
                        ),
                        Return(
                            lineno=131,
                            col_offset=8,
                            end_lineno=131,
                            end_col_offset=19,
                            value=Constant(lineno=131, col_offset=15, end_lineno=131, end_col_offset=19, value=None, kind=None),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=134,
                    col_offset=4,
                    end_lineno=142,
                    end_col_offset=17,
                    name='_get_available_qr_methods',
                    args=arguments(
                        posonlyargs=[],
                        args=[arg(lineno=134, col_offset=34, end_lineno=134, end_col_offset=38, arg='self', annotation=None, type_comment=None)],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        Expr(
                            lineno=135,
                            col_offset=8,
                            end_lineno=141,
                            end_col_offset=11,
                            value=Constant(lineno=135, col_offset=8, end_lineno=141, end_col_offset=11, value=" Returns the QR-code generation methods that are available on this db,\n        in the form of a list of (code, name, sequence) elements, where\n        'code' is a unique string identifier, 'name' the name to display\n        to the user to designate the method, and 'sequence' is a positive integer\n        indicating the order in which those mehtods need to be checked, to avoid\n        shadowing between them (lower sequence means more prioritary).\n        ", kind=None),
                        ),
                        Return(
                            lineno=142,
                            col_offset=8,
                            end_lineno=142,
                            end_col_offset=17,
                            value=List(lineno=142, col_offset=15, end_lineno=142, end_col_offset=17, elts=[], ctx=Load()),
                        ),
                    ],
                    decorator_list=[
                        Attribute(
                            lineno=133,
                            col_offset=5,
                            end_lineno=133,
                            end_col_offset=14,
                            value=Name(lineno=133, col_offset=5, end_lineno=133, end_col_offset=8, id='api', ctx=Load()),
                            attr='model',
                            ctx=Load(),
                        ),
                    ],
                    returns=None,
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=145,
                    col_offset=4,
                    end_lineno=151,
                    end_col_offset=73,
                    name='get_available_qr_methods_in_sequence',
                    args=arguments(
                        posonlyargs=[],
                        args=[arg(lineno=145, col_offset=45, end_lineno=145, end_col_offset=49, arg='self', annotation=None, type_comment=None)],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        Expr(
                            lineno=146,
                            col_offset=8,
                            end_lineno=148,
                            end_col_offset=11,
                            value=Constant(lineno=146, col_offset=8, end_lineno=148, end_col_offset=11, value=' Same as _get_available_qr_methods but without returning the sequence,\n        and using it directly to order the returned list.\n        ', kind=None),
                        ),
                        Assign(
                            lineno=149,
                            col_offset=8,
                            end_lineno=149,
                            end_col_offset=56,
                            targets=[Name(lineno=149, col_offset=8, end_lineno=149, end_col_offset=21, id='all_available', ctx=Store())],
                            value=Call(
                                lineno=149,
                                col_offset=24,
                                end_lineno=149,
                                end_col_offset=56,
                                func=Attribute(
                                    lineno=149,
                                    col_offset=24,
                                    end_lineno=149,
                                    end_col_offset=54,
                                    value=Name(lineno=149, col_offset=24, end_lineno=149, end_col_offset=28, id='self', ctx=Load()),
                                    attr='_get_available_qr_methods',
                                    ctx=Load(),
                                ),
                                args=[],
                                keywords=[],
                            ),
                            type_comment=None,
                        ),
                        Expr(
                            lineno=150,
                            col_offset=8,
                            end_lineno=150,
                            end_col_offset=46,
                            value=Call(
                                lineno=150,
                                col_offset=8,
                                end_lineno=150,
                                end_col_offset=46,
                                func=Attribute(
                                    lineno=150,
                                    col_offset=8,
                                    end_lineno=150,
                                    end_col_offset=26,
                                    value=Name(lineno=150, col_offset=8, end_lineno=150, end_col_offset=21, id='all_available', ctx=Load()),
                                    attr='sort',
                                    ctx=Load(),
                                ),
                                args=[],
                                keywords=[
                                    keyword(
                                        lineno=150,
                                        col_offset=27,
                                        end_lineno=150,
                                        end_col_offset=45,
                                        arg='key',
                                        value=Lambda(
                                            lineno=150,
                                            col_offset=31,
                                            end_lineno=150,
                                            end_col_offset=45,
                                            args=arguments(
                                                posonlyargs=[],
                                                args=[arg(lineno=150, col_offset=38, end_lineno=150, end_col_offset=39, arg='x', annotation=None, type_comment=None)],
                                                vararg=None,
                                                kwonlyargs=[],
                                                kw_defaults=[],
                                                kwarg=None,
                                                defaults=[],
                                            ),
                                            body=Subscript(
                                                lineno=150,
                                                col_offset=41,
                                                end_lineno=150,
                                                end_col_offset=45,
                                                value=Name(lineno=150, col_offset=41, end_lineno=150, end_col_offset=42, id='x', ctx=Load()),
                                                slice=Constant(lineno=150, col_offset=43, end_lineno=150, end_col_offset=44, value=2, kind=None),
                                                ctx=Load(),
                                            ),
                                        ),
                                    ),
                                ],
                            ),
                        ),
                        Return(
                            lineno=151,
                            col_offset=8,
                            end_lineno=151,
                            end_col_offset=73,
                            value=ListComp(
                                lineno=151,
                                col_offset=15,
                                end_lineno=151,
                                end_col_offset=73,
                                elt=Tuple(
                                    lineno=151,
                                    col_offset=16,
                                    end_lineno=151,
                                    end_col_offset=28,
                                    elts=[
                                        Name(lineno=151, col_offset=17, end_lineno=151, end_col_offset=21, id='code', ctx=Load()),
                                        Name(lineno=151, col_offset=23, end_lineno=151, end_col_offset=27, id='name', ctx=Load()),
                                    ],
                                    ctx=Load(),
                                ),
                                generators=[
                                    comprehension(
                                        target=Tuple(
                                            lineno=151,
                                            col_offset=33,
                                            end_lineno=151,
                                            end_col_offset=55,
                                            elts=[
                                                Name(lineno=151, col_offset=34, end_lineno=151, end_col_offset=38, id='code', ctx=Store()),
                                                Name(lineno=151, col_offset=40, end_lineno=151, end_col_offset=44, id='name', ctx=Store()),
                                                Name(lineno=151, col_offset=46, end_lineno=151, end_col_offset=54, id='sequence', ctx=Store()),
                                            ],
                                            ctx=Store(),
                                        ),
                                        iter=Name(lineno=151, col_offset=59, end_lineno=151, end_col_offset=72, id='all_available', ctx=Load()),
                                        ifs=[],
                                        is_async=0,
                                    ),
                                ],
                            ),
                        ),
                    ],
                    decorator_list=[
                        Attribute(
                            lineno=144,
                            col_offset=5,
                            end_lineno=144,
                            end_col_offset=14,
                            value=Name(lineno=144, col_offset=5, end_lineno=144, end_col_offset=8, id='api', ctx=Load()),
                            attr='model',
                            ctx=Load(),
                        ),
                    ],
                    returns=None,
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=154,
                    col_offset=4,
                    end_lineno=161,
                    end_col_offset=20,
                    name='_eligible_for_qr_code',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(lineno=154, col_offset=30, end_lineno=154, end_col_offset=34, arg='self', annotation=None, type_comment=None),
                            arg(lineno=154, col_offset=36, end_lineno=154, end_col_offset=45, arg='qr_method', annotation=None, type_comment=None),
                            arg(lineno=154, col_offset=47, end_lineno=154, end_col_offset=61, arg='debtor_partner', annotation=None, type_comment=None),
                            arg(lineno=154, col_offset=63, end_lineno=154, end_col_offset=71, arg='currency', annotation=None, type_comment=None),
                        ],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        Expr(
                            lineno=155,
                            col_offset=8,
                            end_lineno=160,
                            end_col_offset=11,
                            value=Constant(lineno=155, col_offset=8, end_lineno=160, end_col_offset=11, value=' Tells whether or not the criteria to apply QR-generation\n        method qr_method are met for a payment on this account, in the\n        given currency, by debtor_partner. This does not impeach generation errors,\n        it only checks that this type of QR-code *should be* possible to generate.\n        Consistency of the required field needs then to be checked by _check_for_qr_code_errors().\n        ', kind=None),
                        ),
                        Return(
                            lineno=161,
                            col_offset=8,
                            end_lineno=161,
                            end_col_offset=20,
                            value=Constant(lineno=161, col_offset=15, end_lineno=161, end_col_offset=20, value=False, kind=None),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=163,
                    col_offset=4,
                    end_lineno=170,
                    end_col_offset=19,
                    name='_check_for_qr_code_errors',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(lineno=163, col_offset=34, end_lineno=163, end_col_offset=38, arg='self', annotation=None, type_comment=None),
                            arg(lineno=163, col_offset=40, end_lineno=163, end_col_offset=49, arg='qr_method', annotation=None, type_comment=None),
                            arg(lineno=163, col_offset=51, end_lineno=163, end_col_offset=57, arg='amount', annotation=None, type_comment=None),
                            arg(lineno=163, col_offset=59, end_lineno=163, end_col_offset=67, arg='currency', annotation=None, type_comment=None),
                            arg(lineno=163, col_offset=69, end_lineno=163, end_col_offset=83, arg='debtor_partner', annotation=None, type_comment=None),
                            arg(lineno=163, col_offset=85, end_lineno=163, end_col_offset=103, arg='free_communication', annotation=None, type_comment=None),
                            arg(lineno=163, col_offset=105, end_lineno=163, end_col_offset=129, arg='structured_communication', annotation=None, type_comment=None),
                        ],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[],
                    ),
                    body=[
                        Expr(
                            lineno=164,
                            col_offset=8,
                            end_lineno=169,
                            end_col_offset=11,
                            value=Constant(lineno=164, col_offset=8, end_lineno=169, end_col_offset=11, value=' Checks the data before generating a QR-code for the specified qr_method\n        (this method must have been checked for eligbility by _eligible_for_qr_code() first).\n\n        Returns None if no error was found, or a string describing the first error encountered\n        so that it can be reported to the user.\n        ', kind=None),
                        ),
                        Return(
                            lineno=170,
                            col_offset=8,
                            end_lineno=170,
                            end_col_offset=19,
                            value=Constant(lineno=170, col_offset=15, end_lineno=170, end_col_offset=19, value=None, kind=None),
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
            ],
            decorator_list=[],
        ),
    ],
    type_ignores=[],
)
