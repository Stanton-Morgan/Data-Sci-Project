Module(
    body=[
        ImportFrom(
            lineno=4,
            col_offset=0,
            end_lineno=4,
            end_col_offset=37,
            module='__future__',
            names=[alias(name='print_function', asname=None)],
            level=0,
        ),
        Import(
            lineno=5,
            col_offset=0,
            end_lineno=5,
            end_col_offset=15,
            names=[alias(name='builtins', asname=None)],
        ),
        Import(
            lineno=6,
            col_offset=0,
            end_lineno=6,
            end_col_offset=11,
            names=[alias(name='math', asname=None)],
        ),
        FunctionDef(
            lineno=9,
            col_offset=0,
            end_lineno=23,
            end_col_offset=35,
            name='round',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=9, col_offset=10, end_lineno=9, end_col_offset=11, arg='f', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Assign(
                    lineno=19,
                    col_offset=4,
                    end_lineno=19,
                    end_col_offset=30,
                    targets=[Name(lineno=19, col_offset=4, end_lineno=19, end_col_offset=10, id='roundf', ctx=Store())],
                    value=Call(
                        lineno=19,
                        col_offset=13,
                        end_lineno=19,
                        end_col_offset=30,
                        func=Attribute(
                            lineno=19,
                            col_offset=13,
                            end_lineno=19,
                            end_col_offset=27,
                            value=Name(lineno=19, col_offset=13, end_lineno=19, end_col_offset=21, id='builtins', ctx=Load()),
                            attr='round',
                            ctx=Load(),
                        ),
                        args=[Name(lineno=19, col_offset=28, end_lineno=19, end_col_offset=29, id='f', ctx=Load())],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                If(
                    lineno=20,
                    col_offset=4,
                    end_lineno=21,
                    end_col_offset=40,
                    test=Compare(
                        lineno=20,
                        col_offset=7,
                        end_lineno=20,
                        end_col_offset=42,
                        left=BinOp(
                            lineno=20,
                            col_offset=7,
                            end_lineno=20,
                            end_col_offset=37,
                            left=Call(
                                lineno=20,
                                col_offset=7,
                                end_lineno=20,
                                end_col_offset=28,
                                func=Attribute(
                                    lineno=20,
                                    col_offset=7,
                                    end_lineno=20,
                                    end_col_offset=21,
                                    value=Name(lineno=20, col_offset=7, end_lineno=20, end_col_offset=15, id='builtins', ctx=Load()),
                                    attr='round',
                                    ctx=Load(),
                                ),
                                args=[
                                    BinOp(
                                        lineno=20,
                                        col_offset=22,
                                        end_lineno=20,
                                        end_col_offset=27,
                                        left=Name(lineno=20, col_offset=22, end_lineno=20, end_col_offset=23, id='f', ctx=Load()),
                                        op=Add(),
                                        right=Constant(lineno=20, col_offset=26, end_lineno=20, end_col_offset=27, value=1, kind=None),
                                    ),
                                ],
                                keywords=[],
                            ),
                            op=Sub(),
                            right=Name(lineno=20, col_offset=31, end_lineno=20, end_col_offset=37, id='roundf', ctx=Load()),
                        ),
                        ops=[NotEq()],
                        comparators=[Constant(lineno=20, col_offset=41, end_lineno=20, end_col_offset=42, value=1, kind=None)],
                    ),
                    body=[
                        Return(
                            lineno=21,
                            col_offset=8,
                            end_lineno=21,
                            end_col_offset=40,
                            value=BinOp(
                                lineno=21,
                                col_offset=15,
                                end_lineno=21,
                                end_col_offset=40,
                                left=Name(lineno=21, col_offset=15, end_lineno=21, end_col_offset=16, id='f', ctx=Load()),
                                op=Add(),
                                right=Call(
                                    lineno=21,
                                    col_offset=19,
                                    end_lineno=21,
                                    end_col_offset=40,
                                    func=Attribute(
                                        lineno=21,
                                        col_offset=19,
                                        end_lineno=21,
                                        end_col_offset=32,
                                        value=Name(lineno=21, col_offset=19, end_lineno=21, end_col_offset=23, id='math', ctx=Load()),
                                        attr='copysign',
                                        ctx=Load(),
                                    ),
                                    args=[
                                        Constant(lineno=21, col_offset=33, end_lineno=21, end_col_offset=36, value=0.5, kind=None),
                                        Name(lineno=21, col_offset=38, end_lineno=21, end_col_offset=39, id='f', ctx=Load()),
                                    ],
                                    keywords=[],
                                ),
                            ),
                        ),
                    ],
                    orelse=[],
                ),
                Return(
                    lineno=23,
                    col_offset=4,
                    end_lineno=23,
                    end_col_offset=35,
                    value=Call(
                        lineno=23,
                        col_offset=11,
                        end_lineno=23,
                        end_col_offset=35,
                        func=Attribute(
                            lineno=23,
                            col_offset=11,
                            end_lineno=23,
                            end_col_offset=24,
                            value=Name(lineno=23, col_offset=11, end_lineno=23, end_col_offset=15, id='math', ctx=Load()),
                            attr='copysign',
                            ctx=Load(),
                        ),
                        args=[
                            Name(lineno=23, col_offset=25, end_lineno=23, end_col_offset=31, id='roundf', ctx=Load()),
                            Name(lineno=23, col_offset=33, end_lineno=23, end_col_offset=34, id='f', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=25,
            col_offset=0,
            end_lineno=33,
            end_col_offset=29,
            name='_float_check_precision',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(lineno=25, col_offset=27, end_lineno=25, end_col_offset=43, arg='precision_digits', annotation=None, type_comment=None),
                    arg(lineno=25, col_offset=50, end_lineno=25, end_col_offset=68, arg='precision_rounding', annotation=None, type_comment=None),
                ],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[
                    Constant(lineno=25, col_offset=44, end_lineno=25, end_col_offset=48, value=None, kind=None),
                    Constant(lineno=25, col_offset=69, end_lineno=25, end_col_offset=73, value=None, kind=None),
                ],
            ),
            body=[
                Assert(
                    lineno=26,
                    col_offset=4,
                    end_lineno=28,
                    end_col_offset=83,
                    test=BoolOp(
                        lineno=26,
                        col_offset=11,
                        end_lineno=27,
                        end_col_offset=53,
                        op=And(),
                        values=[
                            BoolOp(
                                lineno=26,
                                col_offset=12,
                                end_lineno=26,
                                end_col_offset=74,
                                op=Or(),
                                values=[
                                    Compare(
                                        lineno=26,
                                        col_offset=12,
                                        end_lineno=26,
                                        end_col_offset=40,
                                        left=Name(lineno=26, col_offset=12, end_lineno=26, end_col_offset=28, id='precision_digits', ctx=Load()),
                                        ops=[IsNot()],
                                        comparators=[Constant(lineno=26, col_offset=36, end_lineno=26, end_col_offset=40, value=None, kind=None)],
                                    ),
                                    Compare(
                                        lineno=26,
                                        col_offset=44,
                                        end_lineno=26,
                                        end_col_offset=74,
                                        left=Name(lineno=26, col_offset=44, end_lineno=26, end_col_offset=62, id='precision_rounding', ctx=Load()),
                                        ops=[IsNot()],
                                        comparators=[Constant(lineno=26, col_offset=70, end_lineno=26, end_col_offset=74, value=None, kind=None)],
                                    ),
                                ],
                            ),
                            UnaryOp(
                                lineno=27,
                                col_offset=8,
                                end_lineno=27,
                                end_col_offset=53,
                                op=Not(),
                                operand=BoolOp(
                                    lineno=27,
                                    col_offset=13,
                                    end_lineno=27,
                                    end_col_offset=52,
                                    op=And(),
                                    values=[
                                        Name(lineno=27, col_offset=13, end_lineno=27, end_col_offset=29, id='precision_digits', ctx=Load()),
                                        Name(lineno=27, col_offset=34, end_lineno=27, end_col_offset=52, id='precision_rounding', ctx=Load()),
                                    ],
                                ),
                            ),
                        ],
                    ),
                    msg=Constant(lineno=28, col_offset=9, end_lineno=28, end_col_offset=83, value='exactly one of precision_digits and precision_rounding must be specified', kind=None),
                ),
                Assert(
                    lineno=29,
                    col_offset=4,
                    end_lineno=30,
                    end_col_offset=75,
                    test=BoolOp(
                        lineno=29,
                        col_offset=11,
                        end_lineno=29,
                        end_col_offset=63,
                        op=Or(),
                        values=[
                            Compare(
                                lineno=29,
                                col_offset=11,
                                end_lineno=29,
                                end_col_offset=37,
                                left=Name(lineno=29, col_offset=11, end_lineno=29, end_col_offset=29, id='precision_rounding', ctx=Load()),
                                ops=[Is()],
                                comparators=[Constant(lineno=29, col_offset=33, end_lineno=29, end_col_offset=37, value=None, kind=None)],
                            ),
                            Compare(
                                lineno=29,
                                col_offset=41,
                                end_lineno=29,
                                end_col_offset=63,
                                left=Name(lineno=29, col_offset=41, end_lineno=29, end_col_offset=59, id='precision_rounding', ctx=Load()),
                                ops=[Gt()],
                                comparators=[Constant(lineno=29, col_offset=62, end_lineno=29, end_col_offset=63, value=0, kind=None)],
                            ),
                        ],
                    ),
                    msg=BinOp(
                        lineno=30,
                        col_offset=9,
                        end_lineno=30,
                        end_col_offset=75,
                        left=Constant(lineno=30, col_offset=9, end_lineno=30, end_col_offset=54, value='precision_rounding must be positive, got %s', kind=None),
                        op=Mod(),
                        right=Name(lineno=30, col_offset=57, end_lineno=30, end_col_offset=75, id='precision_rounding', ctx=Load()),
                    ),
                ),
                If(
                    lineno=31,
                    col_offset=4,
                    end_lineno=32,
                    end_col_offset=38,
                    test=Compare(
                        lineno=31,
                        col_offset=7,
                        end_lineno=31,
                        end_col_offset=35,
                        left=Name(lineno=31, col_offset=7, end_lineno=31, end_col_offset=23, id='precision_digits', ctx=Load()),
                        ops=[IsNot()],
                        comparators=[Constant(lineno=31, col_offset=31, end_lineno=31, end_col_offset=35, value=None, kind=None)],
                    ),
                    body=[
                        Return(
                            lineno=32,
                            col_offset=8,
                            end_lineno=32,
                            end_col_offset=38,
                            value=BinOp(
                                lineno=32,
                                col_offset=15,
                                end_lineno=32,
                                end_col_offset=38,
                                left=Constant(lineno=32, col_offset=15, end_lineno=32, end_col_offset=17, value=10, kind=None),
                                op=Pow(),
                                right=UnaryOp(
                                    lineno=32,
                                    col_offset=21,
                                    end_lineno=32,
                                    end_col_offset=38,
                                    op=USub(),
                                    operand=Name(lineno=32, col_offset=22, end_lineno=32, end_col_offset=38, id='precision_digits', ctx=Load()),
                                ),
                            ),
                        ),
                    ],
                    orelse=[],
                ),
                Return(
                    lineno=33,
                    col_offset=4,
                    end_lineno=33,
                    end_col_offset=29,
                    value=Name(lineno=33, col_offset=11, end_lineno=33, end_col_offset=29, id='precision_rounding', ctx=Load()),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=35,
            col_offset=0,
            end_lineno=100,
            end_col_offset=17,
            name='float_round',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(lineno=35, col_offset=16, end_lineno=35, end_col_offset=21, arg='value', annotation=None, type_comment=None),
                    arg(lineno=35, col_offset=23, end_lineno=35, end_col_offset=39, arg='precision_digits', annotation=None, type_comment=None),
                    arg(lineno=35, col_offset=46, end_lineno=35, end_col_offset=64, arg='precision_rounding', annotation=None, type_comment=None),
                    arg(lineno=35, col_offset=71, end_lineno=35, end_col_offset=86, arg='rounding_method', annotation=None, type_comment=None),
                ],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[
                    Constant(lineno=35, col_offset=40, end_lineno=35, end_col_offset=44, value=None, kind=None),
                    Constant(lineno=35, col_offset=65, end_lineno=35, end_col_offset=69, value=None, kind=None),
                    Constant(lineno=35, col_offset=87, end_lineno=35, end_col_offset=96, value='HALF-UP', kind=None),
                ],
            ),
            body=[
                Expr(
                    lineno=36,
                    col_offset=4,
                    end_lineno=53,
                    end_col_offset=7,
                    value=Constant(lineno=36, col_offset=4, end_lineno=53, end_col_offset=7, value="Return ``value`` rounded to ``precision_digits`` decimal digits,\n       minimizing IEEE-754 floating point representation errors, and applying\n       the tie-breaking rule selected with ``rounding_method``, by default\n       HALF-UP (away from zero).\n       Precision must be given by ``precision_digits`` or ``precision_rounding``,\n       not both!\n\n       :param float value: the value to round\n       :param int precision_digits: number of fractional digits to round to.\n       :param float precision_rounding: decimal number representing the minimum\n           non-zero value at the desired precision (for example, 0.01 for a \n           2-digit precision).\n       :param rounding_method: the rounding method used: 'HALF-UP', 'UP' or 'DOWN',\n           the first one rounding up to the closest number with the rule that\n           number>=0.5 is rounded up to 1, the second always rounding up and the\n           latest one always rounding down.\n       :return: rounded float\n    ", kind=None),
                ),
                Assign(
                    lineno=54,
                    col_offset=4,
                    end_lineno=55,
                    end_col_offset=83,
                    targets=[Name(lineno=54, col_offset=4, end_lineno=54, end_col_offset=19, id='rounding_factor', ctx=Store())],
                    value=Call(
                        lineno=54,
                        col_offset=22,
                        end_lineno=55,
                        end_col_offset=83,
                        func=Name(lineno=54, col_offset=22, end_lineno=54, end_col_offset=44, id='_float_check_precision', ctx=Load()),
                        args=[],
                        keywords=[
                            keyword(
                                lineno=54,
                                col_offset=45,
                                end_lineno=54,
                                end_col_offset=78,
                                arg='precision_digits',
                                value=Name(lineno=54, col_offset=62, end_lineno=54, end_col_offset=78, id='precision_digits', ctx=Load()),
                            ),
                            keyword(
                                lineno=55,
                                col_offset=45,
                                end_lineno=55,
                                end_col_offset=82,
                                arg='precision_rounding',
                                value=Name(lineno=55, col_offset=64, end_lineno=55, end_col_offset=82, id='precision_rounding', ctx=Load()),
                            ),
                        ],
                    ),
                    type_comment=None,
                ),
                If(
                    lineno=56,
                    col_offset=4,
                    end_lineno=57,
                    end_col_offset=18,
                    test=BoolOp(
                        lineno=56,
                        col_offset=7,
                        end_lineno=56,
                        end_col_offset=41,
                        op=Or(),
                        values=[
                            Compare(
                                lineno=56,
                                col_offset=7,
                                end_lineno=56,
                                end_col_offset=27,
                                left=Name(lineno=56, col_offset=7, end_lineno=56, end_col_offset=22, id='rounding_factor', ctx=Load()),
                                ops=[Eq()],
                                comparators=[Constant(lineno=56, col_offset=26, end_lineno=56, end_col_offset=27, value=0, kind=None)],
                            ),
                            Compare(
                                lineno=56,
                                col_offset=31,
                                end_lineno=56,
                                end_col_offset=41,
                                left=Name(lineno=56, col_offset=31, end_lineno=56, end_col_offset=36, id='value', ctx=Load()),
                                ops=[Eq()],
                                comparators=[Constant(lineno=56, col_offset=40, end_lineno=56, end_col_offset=41, value=0, kind=None)],
                            ),
                        ],
                    ),
                    body=[
                        Return(
                            lineno=57,
                            col_offset=8,
                            end_lineno=57,
                            end_col_offset=18,
                            value=Constant(lineno=57, col_offset=15, end_lineno=57, end_col_offset=18, value=0.0, kind=None),
                        ),
                    ],
                    orelse=[],
                ),
                Assign(
                    lineno=72,
                    col_offset=4,
                    end_lineno=72,
                    end_col_offset=46,
                    targets=[Name(lineno=72, col_offset=4, end_lineno=72, end_col_offset=20, id='normalized_value', ctx=Store())],
                    value=BinOp(
                        lineno=72,
                        col_offset=23,
                        end_lineno=72,
                        end_col_offset=46,
                        left=Name(lineno=72, col_offset=23, end_lineno=72, end_col_offset=28, id='value', ctx=Load()),
                        op=Div(),
                        right=Name(lineno=72, col_offset=31, end_lineno=72, end_col_offset=46, id='rounding_factor', ctx=Load()),
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=73,
                    col_offset=4,
                    end_lineno=73,
                    end_col_offset=47,
                    targets=[Name(lineno=73, col_offset=4, end_lineno=73, end_col_offset=8, id='sign', ctx=Store())],
                    value=Call(
                        lineno=73,
                        col_offset=11,
                        end_lineno=73,
                        end_col_offset=47,
                        func=Attribute(
                            lineno=73,
                            col_offset=11,
                            end_lineno=73,
                            end_col_offset=24,
                            value=Name(lineno=73, col_offset=11, end_lineno=73, end_col_offset=15, id='math', ctx=Load()),
                            attr='copysign',
                            ctx=Load(),
                        ),
                        args=[
                            Constant(lineno=73, col_offset=25, end_lineno=73, end_col_offset=28, value=1.0, kind=None),
                            Name(lineno=73, col_offset=30, end_lineno=73, end_col_offset=46, id='normalized_value', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=74,
                    col_offset=4,
                    end_lineno=74,
                    end_col_offset=58,
                    targets=[Name(lineno=74, col_offset=4, end_lineno=74, end_col_offset=21, id='epsilon_magnitude', ctx=Store())],
                    value=Call(
                        lineno=74,
                        col_offset=24,
                        end_lineno=74,
                        end_col_offset=58,
                        func=Attribute(
                            lineno=74,
                            col_offset=24,
                            end_lineno=74,
                            end_col_offset=32,
                            value=Name(lineno=74, col_offset=24, end_lineno=74, end_col_offset=28, id='math', ctx=Load()),
                            attr='log',
                            ctx=Load(),
                        ),
                        args=[
                            Call(
                                lineno=74,
                                col_offset=33,
                                end_lineno=74,
                                end_col_offset=54,
                                func=Name(lineno=74, col_offset=33, end_lineno=74, end_col_offset=36, id='abs', ctx=Load()),
                                args=[Name(lineno=74, col_offset=37, end_lineno=74, end_col_offset=53, id='normalized_value', ctx=Load())],
                                keywords=[],
                            ),
                            Constant(lineno=74, col_offset=56, end_lineno=74, end_col_offset=57, value=2, kind=None),
                        ],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=75,
                    col_offset=4,
                    end_lineno=75,
                    end_col_offset=39,
                    targets=[Name(lineno=75, col_offset=4, end_lineno=75, end_col_offset=11, id='epsilon', ctx=Store())],
                    value=BinOp(
                        lineno=75,
                        col_offset=14,
                        end_lineno=75,
                        end_col_offset=39,
                        left=Constant(lineno=75, col_offset=14, end_lineno=75, end_col_offset=15, value=2, kind=None),
                        op=Pow(),
                        right=BinOp(
                            lineno=75,
                            col_offset=18,
                            end_lineno=75,
                            end_col_offset=38,
                            left=Name(lineno=75, col_offset=18, end_lineno=75, end_col_offset=35, id='epsilon_magnitude', ctx=Load()),
                            op=Sub(),
                            right=Constant(lineno=75, col_offset=36, end_lineno=75, end_col_offset=38, value=52, kind=None),
                        ),
                    ),
                    type_comment=None,
                ),
                If(
                    lineno=85,
                    col_offset=4,
                    end_lineno=97,
                    end_col_offset=47,
                    test=Compare(
                        lineno=85,
                        col_offset=7,
                        end_lineno=85,
                        end_col_offset=30,
                        left=Name(lineno=85, col_offset=7, end_lineno=85, end_col_offset=22, id='rounding_method', ctx=Load()),
                        ops=[Eq()],
                        comparators=[Constant(lineno=85, col_offset=26, end_lineno=85, end_col_offset=30, value='UP', kind=None)],
                    ),
                    body=[
                        AugAssign(
                            lineno=86,
                            col_offset=8,
                            end_lineno=86,
                            end_col_offset=40,
                            target=Name(lineno=86, col_offset=8, end_lineno=86, end_col_offset=24, id='normalized_value', ctx=Store()),
                            op=Sub(),
                            value=BinOp(
                                lineno=86,
                                col_offset=28,
                                end_lineno=86,
                                end_col_offset=40,
                                left=Name(lineno=86, col_offset=28, end_lineno=86, end_col_offset=32, id='sign', ctx=Load()),
                                op=Mult(),
                                right=Name(lineno=86, col_offset=33, end_lineno=86, end_col_offset=40, id='epsilon', ctx=Load()),
                            ),
                        ),
                        Assign(
                            lineno=87,
                            col_offset=8,
                            end_lineno=87,
                            end_col_offset=63,
                            targets=[Name(lineno=87, col_offset=8, end_lineno=87, end_col_offset=21, id='rounded_value', ctx=Store())],
                            value=BinOp(
                                lineno=87,
                                col_offset=24,
                                end_lineno=87,
                                end_col_offset=63,
                                left=Call(
                                    lineno=87,
                                    col_offset=24,
                                    end_lineno=87,
                                    end_col_offset=56,
                                    func=Attribute(
                                        lineno=87,
                                        col_offset=24,
                                        end_lineno=87,
                                        end_col_offset=33,
                                        value=Name(lineno=87, col_offset=24, end_lineno=87, end_col_offset=28, id='math', ctx=Load()),
                                        attr='ceil',
                                        ctx=Load(),
                                    ),
                                    args=[
                                        Call(
                                            lineno=87,
                                            col_offset=34,
                                            end_lineno=87,
                                            end_col_offset=55,
                                            func=Name(lineno=87, col_offset=34, end_lineno=87, end_col_offset=37, id='abs', ctx=Load()),
                                            args=[Name(lineno=87, col_offset=38, end_lineno=87, end_col_offset=54, id='normalized_value', ctx=Load())],
                                            keywords=[],
                                        ),
                                    ],
                                    keywords=[],
                                ),
                                op=Mult(),
                                right=Name(lineno=87, col_offset=59, end_lineno=87, end_col_offset=63, id='sign', ctx=Load()),
                            ),
                            type_comment=None,
                        ),
                    ],
                    orelse=[
                        If(
                            lineno=89,
                            col_offset=4,
                            end_lineno=97,
                            end_col_offset=47,
                            test=Compare(
                                lineno=89,
                                col_offset=9,
                                end_lineno=89,
                                end_col_offset=34,
                                left=Name(lineno=89, col_offset=9, end_lineno=89, end_col_offset=24, id='rounding_method', ctx=Load()),
                                ops=[Eq()],
                                comparators=[Constant(lineno=89, col_offset=28, end_lineno=89, end_col_offset=34, value='DOWN', kind=None)],
                            ),
                            body=[
                                AugAssign(
                                    lineno=90,
                                    col_offset=8,
                                    end_lineno=90,
                                    end_col_offset=40,
                                    target=Name(lineno=90, col_offset=8, end_lineno=90, end_col_offset=24, id='normalized_value', ctx=Store()),
                                    op=Add(),
                                    value=BinOp(
                                        lineno=90,
                                        col_offset=28,
                                        end_lineno=90,
                                        end_col_offset=40,
                                        left=Name(lineno=90, col_offset=28, end_lineno=90, end_col_offset=32, id='sign', ctx=Load()),
                                        op=Mult(),
                                        right=Name(lineno=90, col_offset=33, end_lineno=90, end_col_offset=40, id='epsilon', ctx=Load()),
                                    ),
                                ),
                                Assign(
                                    lineno=91,
                                    col_offset=8,
                                    end_lineno=91,
                                    end_col_offset=64,
                                    targets=[Name(lineno=91, col_offset=8, end_lineno=91, end_col_offset=21, id='rounded_value', ctx=Store())],
                                    value=BinOp(
                                        lineno=91,
                                        col_offset=24,
                                        end_lineno=91,
                                        end_col_offset=64,
                                        left=Call(
                                            lineno=91,
                                            col_offset=24,
                                            end_lineno=91,
                                            end_col_offset=57,
                                            func=Attribute(
                                                lineno=91,
                                                col_offset=24,
                                                end_lineno=91,
                                                end_col_offset=34,
                                                value=Name(lineno=91, col_offset=24, end_lineno=91, end_col_offset=28, id='math', ctx=Load()),
                                                attr='floor',
                                                ctx=Load(),
                                            ),
                                            args=[
                                                Call(
                                                    lineno=91,
                                                    col_offset=35,
                                                    end_lineno=91,
                                                    end_col_offset=56,
                                                    func=Name(lineno=91, col_offset=35, end_lineno=91, end_col_offset=38, id='abs', ctx=Load()),
                                                    args=[Name(lineno=91, col_offset=39, end_lineno=91, end_col_offset=55, id='normalized_value', ctx=Load())],
                                                    keywords=[],
                                                ),
                                            ],
                                            keywords=[],
                                        ),
                                        op=Mult(),
                                        right=Name(lineno=91, col_offset=60, end_lineno=91, end_col_offset=64, id='sign', ctx=Load()),
                                    ),
                                    type_comment=None,
                                ),
                            ],
                            orelse=[
                                AugAssign(
                                    lineno=96,
                                    col_offset=8,
                                    end_lineno=96,
                                    end_col_offset=68,
                                    target=Name(lineno=96, col_offset=8, end_lineno=96, end_col_offset=24, id='normalized_value', ctx=Store()),
                                    op=Add(),
                                    value=Call(
                                        lineno=96,
                                        col_offset=28,
                                        end_lineno=96,
                                        end_col_offset=68,
                                        func=Attribute(
                                            lineno=96,
                                            col_offset=28,
                                            end_lineno=96,
                                            end_col_offset=41,
                                            value=Name(lineno=96, col_offset=28, end_lineno=96, end_col_offset=32, id='math', ctx=Load()),
                                            attr='copysign',
                                            ctx=Load(),
                                        ),
                                        args=[
                                            Name(lineno=96, col_offset=42, end_lineno=96, end_col_offset=49, id='epsilon', ctx=Load()),
                                            Name(lineno=96, col_offset=51, end_lineno=96, end_col_offset=67, id='normalized_value', ctx=Load()),
                                        ],
                                        keywords=[],
                                    ),
                                ),
                                Assign(
                                    lineno=97,
                                    col_offset=8,
                                    end_lineno=97,
                                    end_col_offset=47,
                                    targets=[Name(lineno=97, col_offset=8, end_lineno=97, end_col_offset=21, id='rounded_value', ctx=Store())],
                                    value=Call(
                                        lineno=97,
                                        col_offset=24,
                                        end_lineno=97,
                                        end_col_offset=47,
                                        func=Name(lineno=97, col_offset=24, end_lineno=97, end_col_offset=29, id='round', ctx=Load()),
                                        args=[Name(lineno=97, col_offset=30, end_lineno=97, end_col_offset=46, id='normalized_value', ctx=Load())],
                                        keywords=[],
                                    ),
                                    type_comment=None,
                                ),
                            ],
                        ),
                    ],
                ),
                Assign(
                    lineno=99,
                    col_offset=4,
                    end_lineno=99,
                    end_col_offset=44,
                    targets=[Name(lineno=99, col_offset=4, end_lineno=99, end_col_offset=10, id='result', ctx=Store())],
                    value=BinOp(
                        lineno=99,
                        col_offset=13,
                        end_lineno=99,
                        end_col_offset=44,
                        left=Name(lineno=99, col_offset=13, end_lineno=99, end_col_offset=26, id='rounded_value', ctx=Load()),
                        op=Mult(),
                        right=Name(lineno=99, col_offset=29, end_lineno=99, end_col_offset=44, id='rounding_factor', ctx=Load()),
                    ),
                    type_comment=None,
                ),
                Return(
                    lineno=100,
                    col_offset=4,
                    end_lineno=100,
                    end_col_offset=17,
                    value=Name(lineno=100, col_offset=11, end_lineno=100, end_col_offset=17, id='result', ctx=Load()),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=102,
            col_offset=0,
            end_lineno=125,
            end_col_offset=72,
            name='float_is_zero',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(lineno=102, col_offset=18, end_lineno=102, end_col_offset=23, arg='value', annotation=None, type_comment=None),
                    arg(lineno=102, col_offset=25, end_lineno=102, end_col_offset=41, arg='precision_digits', annotation=None, type_comment=None),
                    arg(lineno=102, col_offset=48, end_lineno=102, end_col_offset=66, arg='precision_rounding', annotation=None, type_comment=None),
                ],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[
                    Constant(lineno=102, col_offset=42, end_lineno=102, end_col_offset=46, value=None, kind=None),
                    Constant(lineno=102, col_offset=67, end_lineno=102, end_col_offset=71, value=None, kind=None),
                ],
            ),
            body=[
                Expr(
                    lineno=103,
                    col_offset=4,
                    end_lineno=122,
                    end_col_offset=7,
                    value=Constant(lineno=103, col_offset=4, end_lineno=122, end_col_offset=7, value="Returns true if ``value`` is small enough to be treated as\n       zero at the given precision (smaller than the corresponding *epsilon*).\n       The precision (``10**-precision_digits`` or ``precision_rounding``)\n       is used as the zero *epsilon*: values less than that are considered\n       to be zero.\n       Precision must be given by ``precision_digits`` or ``precision_rounding``,\n       not both! \n\n       Warning: ``float_is_zero(value1-value2)`` is not equivalent to\n       ``float_compare(value1,value2) == 0``, as the former will round after\n       computing the difference, while the latter will round before, giving\n       different results for e.g. 0.006 and 0.002 at 2 digits precision. \n\n       :param int precision_digits: number of fractional digits to round to.\n       :param float precision_rounding: decimal number representing the minimum\n           non-zero value at the desired precision (for example, 0.01 for a \n           2-digit precision).\n       :param float value: value to compare with the precision's zero\n       :return: True if ``value`` is considered zero\n    ", kind=None),
                ),
                Assign(
                    lineno=123,
                    col_offset=4,
                    end_lineno=124,
                    end_col_offset=83,
                    targets=[Name(lineno=123, col_offset=4, end_lineno=123, end_col_offset=11, id='epsilon', ctx=Store())],
                    value=Call(
                        lineno=123,
                        col_offset=14,
                        end_lineno=124,
                        end_col_offset=83,
                        func=Name(lineno=123, col_offset=14, end_lineno=123, end_col_offset=36, id='_float_check_precision', ctx=Load()),
                        args=[],
                        keywords=[
                            keyword(
                                lineno=123,
                                col_offset=37,
                                end_lineno=123,
                                end_col_offset=70,
                                arg='precision_digits',
                                value=Name(lineno=123, col_offset=54, end_lineno=123, end_col_offset=70, id='precision_digits', ctx=Load()),
                            ),
                            keyword(
                                lineno=124,
                                col_offset=45,
                                end_lineno=124,
                                end_col_offset=82,
                                arg='precision_rounding',
                                value=Name(lineno=124, col_offset=64, end_lineno=124, end_col_offset=82, id='precision_rounding', ctx=Load()),
                            ),
                        ],
                    ),
                    type_comment=None,
                ),
                Return(
                    lineno=125,
                    col_offset=4,
                    end_lineno=125,
                    end_col_offset=72,
                    value=Compare(
                        lineno=125,
                        col_offset=11,
                        end_lineno=125,
                        end_col_offset=72,
                        left=Call(
                            lineno=125,
                            col_offset=11,
                            end_lineno=125,
                            end_col_offset=62,
                            func=Name(lineno=125, col_offset=11, end_lineno=125, end_col_offset=14, id='abs', ctx=Load()),
                            args=[
                                Call(
                                    lineno=125,
                                    col_offset=15,
                                    end_lineno=125,
                                    end_col_offset=61,
                                    func=Name(lineno=125, col_offset=15, end_lineno=125, end_col_offset=26, id='float_round', ctx=Load()),
                                    args=[Name(lineno=125, col_offset=27, end_lineno=125, end_col_offset=32, id='value', ctx=Load())],
                                    keywords=[
                                        keyword(
                                            lineno=125,
                                            col_offset=34,
                                            end_lineno=125,
                                            end_col_offset=60,
                                            arg='precision_rounding',
                                            value=Name(lineno=125, col_offset=53, end_lineno=125, end_col_offset=60, id='epsilon', ctx=Load()),
                                        ),
                                    ],
                                ),
                            ],
                            keywords=[],
                        ),
                        ops=[Lt()],
                        comparators=[Name(lineno=125, col_offset=65, end_lineno=125, end_col_offset=72, id='epsilon', ctx=Load())],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=127,
            col_offset=0,
            end_lineno=161,
            end_col_offset=35,
            name='float_compare',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(lineno=127, col_offset=18, end_lineno=127, end_col_offset=24, arg='value1', annotation=None, type_comment=None),
                    arg(lineno=127, col_offset=26, end_lineno=127, end_col_offset=32, arg='value2', annotation=None, type_comment=None),
                    arg(lineno=127, col_offset=34, end_lineno=127, end_col_offset=50, arg='precision_digits', annotation=None, type_comment=None),
                    arg(lineno=127, col_offset=57, end_lineno=127, end_col_offset=75, arg='precision_rounding', annotation=None, type_comment=None),
                ],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[
                    Constant(lineno=127, col_offset=51, end_lineno=127, end_col_offset=55, value=None, kind=None),
                    Constant(lineno=127, col_offset=76, end_lineno=127, end_col_offset=80, value=None, kind=None),
                ],
            ),
            body=[
                Expr(
                    lineno=128,
                    col_offset=4,
                    end_lineno=154,
                    end_col_offset=7,
                    value=Constant(lineno=128, col_offset=4, end_lineno=154, end_col_offset=7, value='Compare ``value1`` and ``value2`` after rounding them according to the\n       given precision. A value is considered lower/greater than another value\n       if their rounded value is different. This is not the same as having a\n       non-zero difference!\n       Precision must be given by ``precision_digits`` or ``precision_rounding``,\n       not both!\n\n       Example: 1.432 and 1.431 are equal at 2 digits precision,\n       so this method would return 0\n       However 0.006 and 0.002 are considered different (this method returns 1)\n       because they respectively round to 0.01 and 0.0, even though\n       0.006-0.002 = 0.004 which would be considered zero at 2 digits precision.\n\n       Warning: ``float_is_zero(value1-value2)`` is not equivalent to \n       ``float_compare(value1,value2) == 0``, as the former will round after\n       computing the difference, while the latter will round before, giving\n       different results for e.g. 0.006 and 0.002 at 2 digits precision. \n\n       :param int precision_digits: number of fractional digits to round to.\n       :param float precision_rounding: decimal number representing the minimum\n           non-zero value at the desired precision (for example, 0.01 for a \n           2-digit precision).\n       :param float value1: first value to compare\n       :param float value2: second value to compare\n       :return: (resp.) -1, 0 or 1, if ``value1`` is (resp.) lower than,\n           equal to, or greater than ``value2``, at the given precision.\n    ', kind=None),
                ),
                Assign(
                    lineno=155,
                    col_offset=4,
                    end_lineno=156,
                    end_col_offset=83,
                    targets=[Name(lineno=155, col_offset=4, end_lineno=155, end_col_offset=19, id='rounding_factor', ctx=Store())],
                    value=Call(
                        lineno=155,
                        col_offset=22,
                        end_lineno=156,
                        end_col_offset=83,
                        func=Name(lineno=155, col_offset=22, end_lineno=155, end_col_offset=44, id='_float_check_precision', ctx=Load()),
                        args=[],
                        keywords=[
                            keyword(
                                lineno=155,
                                col_offset=45,
                                end_lineno=155,
                                end_col_offset=78,
                                arg='precision_digits',
                                value=Name(lineno=155, col_offset=62, end_lineno=155, end_col_offset=78, id='precision_digits', ctx=Load()),
                            ),
                            keyword(
                                lineno=156,
                                col_offset=45,
                                end_lineno=156,
                                end_col_offset=82,
                                arg='precision_rounding',
                                value=Name(lineno=156, col_offset=64, end_lineno=156, end_col_offset=82, id='precision_rounding', ctx=Load()),
                            ),
                        ],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=157,
                    col_offset=4,
                    end_lineno=157,
                    end_col_offset=68,
                    targets=[Name(lineno=157, col_offset=4, end_lineno=157, end_col_offset=10, id='value1', ctx=Store())],
                    value=Call(
                        lineno=157,
                        col_offset=13,
                        end_lineno=157,
                        end_col_offset=68,
                        func=Name(lineno=157, col_offset=13, end_lineno=157, end_col_offset=24, id='float_round', ctx=Load()),
                        args=[Name(lineno=157, col_offset=25, end_lineno=157, end_col_offset=31, id='value1', ctx=Load())],
                        keywords=[
                            keyword(
                                lineno=157,
                                col_offset=33,
                                end_lineno=157,
                                end_col_offset=67,
                                arg='precision_rounding',
                                value=Name(lineno=157, col_offset=52, end_lineno=157, end_col_offset=67, id='rounding_factor', ctx=Load()),
                            ),
                        ],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=158,
                    col_offset=4,
                    end_lineno=158,
                    end_col_offset=68,
                    targets=[Name(lineno=158, col_offset=4, end_lineno=158, end_col_offset=10, id='value2', ctx=Store())],
                    value=Call(
                        lineno=158,
                        col_offset=13,
                        end_lineno=158,
                        end_col_offset=68,
                        func=Name(lineno=158, col_offset=13, end_lineno=158, end_col_offset=24, id='float_round', ctx=Load()),
                        args=[Name(lineno=158, col_offset=25, end_lineno=158, end_col_offset=31, id='value2', ctx=Load())],
                        keywords=[
                            keyword(
                                lineno=158,
                                col_offset=33,
                                end_lineno=158,
                                end_col_offset=67,
                                arg='precision_rounding',
                                value=Name(lineno=158, col_offset=52, end_lineno=158, end_col_offset=67, id='rounding_factor', ctx=Load()),
                            ),
                        ],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=159,
                    col_offset=4,
                    end_lineno=159,
                    end_col_offset=27,
                    targets=[Name(lineno=159, col_offset=4, end_lineno=159, end_col_offset=9, id='delta', ctx=Store())],
                    value=BinOp(
                        lineno=159,
                        col_offset=12,
                        end_lineno=159,
                        end_col_offset=27,
                        left=Name(lineno=159, col_offset=12, end_lineno=159, end_col_offset=18, id='value1', ctx=Load()),
                        op=Sub(),
                        right=Name(lineno=159, col_offset=21, end_lineno=159, end_col_offset=27, id='value2', ctx=Load()),
                    ),
                    type_comment=None,
                ),
                If(
                    lineno=160,
                    col_offset=4,
                    end_lineno=160,
                    end_col_offset=73,
                    test=Call(
                        lineno=160,
                        col_offset=7,
                        end_lineno=160,
                        end_col_offset=63,
                        func=Name(lineno=160, col_offset=7, end_lineno=160, end_col_offset=20, id='float_is_zero', ctx=Load()),
                        args=[Name(lineno=160, col_offset=21, end_lineno=160, end_col_offset=26, id='delta', ctx=Load())],
                        keywords=[
                            keyword(
                                lineno=160,
                                col_offset=28,
                                end_lineno=160,
                                end_col_offset=62,
                                arg='precision_rounding',
                                value=Name(lineno=160, col_offset=47, end_lineno=160, end_col_offset=62, id='rounding_factor', ctx=Load()),
                            ),
                        ],
                    ),
                    body=[
                        Return(
                            lineno=160,
                            col_offset=65,
                            end_lineno=160,
                            end_col_offset=73,
                            value=Constant(lineno=160, col_offset=72, end_lineno=160, end_col_offset=73, value=0, kind=None),
                        ),
                    ],
                    orelse=[],
                ),
                Return(
                    lineno=161,
                    col_offset=4,
                    end_lineno=161,
                    end_col_offset=35,
                    value=IfExp(
                        lineno=161,
                        col_offset=11,
                        end_lineno=161,
                        end_col_offset=35,
                        test=Compare(
                            lineno=161,
                            col_offset=17,
                            end_lineno=161,
                            end_col_offset=28,
                            left=Name(lineno=161, col_offset=17, end_lineno=161, end_col_offset=22, id='delta', ctx=Load()),
                            ops=[Lt()],
                            comparators=[Constant(lineno=161, col_offset=25, end_lineno=161, end_col_offset=28, value=0.0, kind=None)],
                        ),
                        body=UnaryOp(
                            lineno=161,
                            col_offset=11,
                            end_lineno=161,
                            end_col_offset=13,
                            op=USub(),
                            operand=Constant(lineno=161, col_offset=12, end_lineno=161, end_col_offset=13, value=1, kind=None),
                        ),
                        orelse=Constant(lineno=161, col_offset=34, end_lineno=161, end_col_offset=35, value=1, kind=None),
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=163,
            col_offset=0,
            end_lineno=176,
            end_col_offset=48,
            name='float_repr',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(lineno=163, col_offset=15, end_lineno=163, end_col_offset=20, arg='value', annotation=None, type_comment=None),
                    arg(lineno=163, col_offset=22, end_lineno=163, end_col_offset=38, arg='precision_digits', annotation=None, type_comment=None),
                ],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=164,
                    col_offset=4,
                    end_lineno=172,
                    end_col_offset=7,
                    value=Constant(lineno=164, col_offset=4, end_lineno=172, end_col_offset=7, value='Returns a string representation of a float with the\n       the given number of fractional digits. This should not be\n       used to perform a rounding operation (this is done via\n       :meth:`~.float_round`), but only to produce a suitable\n       string representation for a float.\n\n        :param int precision_digits: number of fractional digits to\n                                     include in the output\n    ', kind=None),
                ),
                Return(
                    lineno=176,
                    col_offset=4,
                    end_lineno=176,
                    end_col_offset=48,
                    value=BinOp(
                        lineno=176,
                        col_offset=11,
                        end_lineno=176,
                        end_col_offset=48,
                        left=BinOp(
                            lineno=176,
                            col_offset=12,
                            end_lineno=176,
                            end_col_offset=39,
                            left=Constant(lineno=176, col_offset=12, end_lineno=176, end_col_offset=20, value='%%.%sf', kind=None),
                            op=Mod(),
                            right=Name(lineno=176, col_offset=23, end_lineno=176, end_col_offset=39, id='precision_digits', ctx=Load()),
                        ),
                        op=Mod(),
                        right=Name(lineno=176, col_offset=43, end_lineno=176, end_col_offset=48, id='value', ctx=Load()),
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Assign(
            lineno=178,
            col_offset=0,
            end_lineno=178,
            end_col_offset=24,
            targets=[Name(lineno=178, col_offset=0, end_lineno=178, end_col_offset=11, id='_float_repr', ctx=Store())],
            value=Name(lineno=178, col_offset=14, end_lineno=178, end_col_offset=24, id='float_repr', ctx=Load()),
            type_comment=None,
        ),
        FunctionDef(
            lineno=180,
            col_offset=0,
            end_lineno=204,
            end_col_offset=81,
            name='float_split_str',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(lineno=180, col_offset=20, end_lineno=180, end_col_offset=25, arg='value', annotation=None, type_comment=None),
                    arg(lineno=180, col_offset=27, end_lineno=180, end_col_offset=43, arg='precision_digits', annotation=None, type_comment=None),
                ],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=181,
                    col_offset=4,
                    end_lineno=201,
                    end_col_offset=7,
                    value=Constant(lineno=181, col_offset=4, end_lineno=201, end_col_offset=7, value="Splits the given float 'value' in its unitary and decimal parts,\n       returning each of them as a string, rounding the value using\n       the provided ``precision_digits`` argument.\n\n       The length of the string returned for decimal places will always\n       be equal to ``precision_digits``, adding zeros at the end if needed.\n\n       In case ``precision_digits`` is zero, an empty string is returned for\n       the decimal places.\n\n       Examples:\n           1.432 with precision 2 => ('1', '43')\n           1.49  with precision 1 => ('1', '5')\n           1.1   with precision 3 => ('1', '100')\n           1.12  with precision 0 => ('1', '')\n\n       :param float value: value to split.\n       :param int precision_digits: number of fractional digits to round to.\n       :return: returns the tuple(<unitary part>, <decimal part>) of the given value\n       :rtype: tuple(str, str)\n    ", kind=None),
                ),
                Assign(
                    lineno=202,
                    col_offset=4,
                    end_lineno=202,
                    end_col_offset=65,
                    targets=[Name(lineno=202, col_offset=4, end_lineno=202, end_col_offset=9, id='value', ctx=Store())],
                    value=Call(
                        lineno=202,
                        col_offset=12,
                        end_lineno=202,
                        end_col_offset=65,
                        func=Name(lineno=202, col_offset=12, end_lineno=202, end_col_offset=23, id='float_round', ctx=Load()),
                        args=[Name(lineno=202, col_offset=24, end_lineno=202, end_col_offset=29, id='value', ctx=Load())],
                        keywords=[
                            keyword(
                                lineno=202,
                                col_offset=31,
                                end_lineno=202,
                                end_col_offset=64,
                                arg='precision_digits',
                                value=Name(lineno=202, col_offset=48, end_lineno=202, end_col_offset=64, id='precision_digits', ctx=Load()),
                            ),
                        ],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=203,
                    col_offset=4,
                    end_lineno=203,
                    end_col_offset=52,
                    targets=[Name(lineno=203, col_offset=4, end_lineno=203, end_col_offset=14, id='value_repr', ctx=Store())],
                    value=Call(
                        lineno=203,
                        col_offset=17,
                        end_lineno=203,
                        end_col_offset=52,
                        func=Name(lineno=203, col_offset=17, end_lineno=203, end_col_offset=27, id='float_repr', ctx=Load()),
                        args=[
                            Name(lineno=203, col_offset=28, end_lineno=203, end_col_offset=33, id='value', ctx=Load()),
                            Name(lineno=203, col_offset=35, end_lineno=203, end_col_offset=51, id='precision_digits', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Return(
                    lineno=204,
                    col_offset=4,
                    end_lineno=204,
                    end_col_offset=81,
                    value=IfExp(
                        lineno=204,
                        col_offset=11,
                        end_lineno=204,
                        end_col_offset=81,
                        test=Name(lineno=204, col_offset=43, end_lineno=204, end_col_offset=59, id='precision_digits', ctx=Load()),
                        body=Call(
                            lineno=204,
                            col_offset=11,
                            end_lineno=204,
                            end_col_offset=39,
                            func=Name(lineno=204, col_offset=11, end_lineno=204, end_col_offset=16, id='tuple', ctx=Load()),
                            args=[
                                Call(
                                    lineno=204,
                                    col_offset=17,
                                    end_lineno=204,
                                    end_col_offset=38,
                                    func=Attribute(
                                        lineno=204,
                                        col_offset=17,
                                        end_lineno=204,
                                        end_col_offset=33,
                                        value=Name(lineno=204, col_offset=17, end_lineno=204, end_col_offset=27, id='value_repr', ctx=Load()),
                                        attr='split',
                                        ctx=Load(),
                                    ),
                                    args=[Constant(lineno=204, col_offset=34, end_lineno=204, end_col_offset=37, value='.', kind=None)],
                                    keywords=[],
                                ),
                            ],
                            keywords=[],
                        ),
                        orelse=Tuple(
                            lineno=204,
                            col_offset=65,
                            end_lineno=204,
                            end_col_offset=81,
                            elts=[
                                Name(lineno=204, col_offset=66, end_lineno=204, end_col_offset=76, id='value_repr', ctx=Load()),
                                Constant(lineno=204, col_offset=78, end_lineno=204, end_col_offset=80, value='', kind=None),
                            ],
                            ctx=Load(),
                        ),
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=206,
            col_offset=0,
            end_lineno=216,
            end_col_offset=33,
            name='float_split',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(lineno=206, col_offset=16, end_lineno=206, end_col_offset=21, arg='value', annotation=None, type_comment=None),
                    arg(lineno=206, col_offset=23, end_lineno=206, end_col_offset=39, arg='precision_digits', annotation=None, type_comment=None),
                ],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=207,
                    col_offset=4,
                    end_lineno=212,
                    end_col_offset=7,
                    value=Constant(lineno=207, col_offset=4, end_lineno=212, end_col_offset=7, value=' same as float_split_str() except that it returns the unitary and decimal\n        parts as integers instead of strings. In case ``precision_digits`` is zero,\n        0 is always returned as decimal part.\n\n       :rtype: tuple(int, int)\n    ', kind=None),
                ),
                Assign(
                    lineno=213,
                    col_offset=4,
                    end_lineno=213,
                    end_col_offset=59,
                    targets=[
                        Tuple(
                            lineno=213,
                            col_offset=4,
                            end_lineno=213,
                            end_col_offset=16,
                            elts=[
                                Name(lineno=213, col_offset=4, end_lineno=213, end_col_offset=9, id='units', ctx=Store()),
                                Name(lineno=213, col_offset=11, end_lineno=213, end_col_offset=16, id='cents', ctx=Store()),
                            ],
                            ctx=Store(),
                        ),
                    ],
                    value=Call(
                        lineno=213,
                        col_offset=19,
                        end_lineno=213,
                        end_col_offset=59,
                        func=Name(lineno=213, col_offset=19, end_lineno=213, end_col_offset=34, id='float_split_str', ctx=Load()),
                        args=[
                            Name(lineno=213, col_offset=35, end_lineno=213, end_col_offset=40, id='value', ctx=Load()),
                            Name(lineno=213, col_offset=42, end_lineno=213, end_col_offset=58, id='precision_digits', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                If(
                    lineno=214,
                    col_offset=4,
                    end_lineno=215,
                    end_col_offset=28,
                    test=UnaryOp(
                        lineno=214,
                        col_offset=7,
                        end_lineno=214,
                        end_col_offset=16,
                        op=Not(),
                        operand=Name(lineno=214, col_offset=11, end_lineno=214, end_col_offset=16, id='cents', ctx=Load()),
                    ),
                    body=[
                        Return(
                            lineno=215,
                            col_offset=8,
                            end_lineno=215,
                            end_col_offset=28,
                            value=Tuple(
                                lineno=215,
                                col_offset=15,
                                end_lineno=215,
                                end_col_offset=28,
                                elts=[
                                    Call(
                                        lineno=215,
                                        col_offset=15,
                                        end_lineno=215,
                                        end_col_offset=25,
                                        func=Name(lineno=215, col_offset=15, end_lineno=215, end_col_offset=18, id='int', ctx=Load()),
                                        args=[Name(lineno=215, col_offset=19, end_lineno=215, end_col_offset=24, id='units', ctx=Load())],
                                        keywords=[],
                                    ),
                                    Constant(lineno=215, col_offset=27, end_lineno=215, end_col_offset=28, value=0, kind=None),
                                ],
                                ctx=Load(),
                            ),
                        ),
                    ],
                    orelse=[],
                ),
                Return(
                    lineno=216,
                    col_offset=4,
                    end_lineno=216,
                    end_col_offset=33,
                    value=Tuple(
                        lineno=216,
                        col_offset=11,
                        end_lineno=216,
                        end_col_offset=33,
                        elts=[
                            Call(
                                lineno=216,
                                col_offset=11,
                                end_lineno=216,
                                end_col_offset=21,
                                func=Name(lineno=216, col_offset=11, end_lineno=216, end_col_offset=14, id='int', ctx=Load()),
                                args=[Name(lineno=216, col_offset=15, end_lineno=216, end_col_offset=20, id='units', ctx=Load())],
                                keywords=[],
                            ),
                            Call(
                                lineno=216,
                                col_offset=23,
                                end_lineno=216,
                                end_col_offset=33,
                                func=Name(lineno=216, col_offset=23, end_lineno=216, end_col_offset=26, id='int', ctx=Load()),
                                args=[Name(lineno=216, col_offset=27, end_lineno=216, end_col_offset=32, id='cents', ctx=Load())],
                                keywords=[],
                            ),
                        ],
                        ctx=Load(),
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        If(
            lineno=219,
            col_offset=0,
            end_lineno=253,
            end_col_offset=84,
            test=Compare(
                lineno=219,
                col_offset=3,
                end_lineno=219,
                end_col_offset=25,
                left=Name(lineno=219, col_offset=3, end_lineno=219, end_col_offset=11, id='__name__', ctx=Load()),
                ops=[Eq()],
                comparators=[Constant(lineno=219, col_offset=15, end_lineno=219, end_col_offset=25, value='__main__', kind=None)],
            ),
            body=[
                Import(
                    lineno=221,
                    col_offset=4,
                    end_lineno=221,
                    end_col_offset=15,
                    names=[alias(name='time', asname=None)],
                ),
                Assign(
                    lineno=222,
                    col_offset=4,
                    end_lineno=222,
                    end_col_offset=23,
                    targets=[Name(lineno=222, col_offset=4, end_lineno=222, end_col_offset=9, id='start', ctx=Store())],
                    value=Call(
                        lineno=222,
                        col_offset=12,
                        end_lineno=222,
                        end_col_offset=23,
                        func=Attribute(
                            lineno=222,
                            col_offset=12,
                            end_lineno=222,
                            end_col_offset=21,
                            value=Name(lineno=222, col_offset=12, end_lineno=222, end_col_offset=16, id='time', ctx=Load()),
                            attr='time',
                            ctx=Load(),
                        ),
                        args=[],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=223,
                    col_offset=4,
                    end_lineno=223,
                    end_col_offset=13,
                    targets=[Name(lineno=223, col_offset=4, end_lineno=223, end_col_offset=9, id='count', ctx=Store())],
                    value=Constant(lineno=223, col_offset=12, end_lineno=223, end_col_offset=13, value=0, kind=None),
                    type_comment=None,
                ),
                Assign(
                    lineno=224,
                    col_offset=4,
                    end_lineno=224,
                    end_col_offset=14,
                    targets=[Name(lineno=224, col_offset=4, end_lineno=224, end_col_offset=10, id='errors', ctx=Store())],
                    value=Constant(lineno=224, col_offset=13, end_lineno=224, end_col_offset=14, value=0, kind=None),
                    type_comment=None,
                ),
                FunctionDef(
                    lineno=226,
                    col_offset=4,
                    end_lineno=232,
                    end_col_offset=85,
                    name='try_round',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(lineno=226, col_offset=18, end_lineno=226, end_col_offset=24, arg='amount', annotation=None, type_comment=None),
                            arg(lineno=226, col_offset=26, end_lineno=226, end_col_offset=34, arg='expected', annotation=None, type_comment=None),
                            arg(lineno=226, col_offset=36, end_lineno=226, end_col_offset=52, arg='precision_digits', annotation=None, type_comment=None),
                        ],
                        vararg=None,
                        kwonlyargs=[],
                        kw_defaults=[],
                        kwarg=None,
                        defaults=[Constant(lineno=226, col_offset=53, end_lineno=226, end_col_offset=54, value=3, kind=None)],
                    ),
                    body=[
                        Global(lineno=227, col_offset=8, end_lineno=227, end_col_offset=28, names=['count', 'errors']),
                        AugAssign(
                            lineno=227,
                            col_offset=30,
                            end_lineno=227,
                            end_col_offset=40,
                            target=Name(lineno=227, col_offset=30, end_lineno=227, end_col_offset=35, id='count', ctx=Store()),
                            op=Add(),
                            value=Constant(lineno=227, col_offset=39, end_lineno=227, end_col_offset=40, value=1, kind=None),
                        ),
                        Assign(
                            lineno=228,
                            col_offset=8,
                            end_lineno=229,
                            end_col_offset=62,
                            targets=[Name(lineno=228, col_offset=8, end_lineno=228, end_col_offset=14, id='result', ctx=Store())],
                            value=Call(
                                lineno=228,
                                col_offset=17,
                                end_lineno=229,
                                end_col_offset=62,
                                func=Name(lineno=228, col_offset=17, end_lineno=228, end_col_offset=27, id='float_repr', ctx=Load()),
                                args=[
                                    Call(
                                        lineno=228,
                                        col_offset=28,
                                        end_lineno=228,
                                        end_col_offset=82,
                                        func=Name(lineno=228, col_offset=28, end_lineno=228, end_col_offset=39, id='float_round', ctx=Load()),
                                        args=[Name(lineno=228, col_offset=40, end_lineno=228, end_col_offset=46, id='amount', ctx=Load())],
                                        keywords=[
                                            keyword(
                                                lineno=228,
                                                col_offset=48,
                                                end_lineno=228,
                                                end_col_offset=81,
                                                arg='precision_digits',
                                                value=Name(lineno=228, col_offset=65, end_lineno=228, end_col_offset=81, id='precision_digits', ctx=Load()),
                                            ),
                                        ],
                                    ),
                                ],
                                keywords=[
                                    keyword(
                                        lineno=229,
                                        col_offset=28,
                                        end_lineno=229,
                                        end_col_offset=61,
                                        arg='precision_digits',
                                        value=Name(lineno=229, col_offset=45, end_lineno=229, end_col_offset=61, id='precision_digits', ctx=Load()),
                                    ),
                                ],
                            ),
                            type_comment=None,
                        ),
                        If(
                            lineno=230,
                            col_offset=8,
                            end_lineno=232,
                            end_col_offset=85,
                            test=Compare(
                                lineno=230,
                                col_offset=11,
                                end_lineno=230,
                                end_col_offset=29,
                                left=Name(lineno=230, col_offset=11, end_lineno=230, end_col_offset=17, id='result', ctx=Load()),
                                ops=[NotEq()],
                                comparators=[Name(lineno=230, col_offset=21, end_lineno=230, end_col_offset=29, id='expected', ctx=Load())],
                            ),
                            body=[
                                AugAssign(
                                    lineno=231,
                                    col_offset=12,
                                    end_lineno=231,
                                    end_col_offset=23,
                                    target=Name(lineno=231, col_offset=12, end_lineno=231, end_col_offset=18, id='errors', ctx=Store()),
                                    op=Add(),
                                    value=Constant(lineno=231, col_offset=22, end_lineno=231, end_col_offset=23, value=1, kind=None),
                                ),
                                Expr(
                                    lineno=232,
                                    col_offset=12,
                                    end_lineno=232,
                                    end_col_offset=85,
                                    value=Call(
                                        lineno=232,
                                        col_offset=12,
                                        end_lineno=232,
                                        end_col_offset=85,
                                        func=Name(lineno=232, col_offset=12, end_lineno=232, end_col_offset=17, id='print', ctx=Load()),
                                        args=[
                                            BinOp(
                                                lineno=232,
                                                col_offset=18,
                                                end_lineno=232,
                                                end_col_offset=84,
                                                left=Constant(lineno=232, col_offset=18, end_lineno=232, end_col_offset=63, value='###!!! Rounding error: got %s , expected %s', kind=None),
                                                op=Mod(),
                                                right=Tuple(
                                                    lineno=232,
                                                    col_offset=66,
                                                    end_lineno=232,
                                                    end_col_offset=84,
                                                    elts=[
                                                        Name(lineno=232, col_offset=67, end_lineno=232, end_col_offset=73, id='result', ctx=Load()),
                                                        Name(lineno=232, col_offset=75, end_lineno=232, end_col_offset=83, id='expected', ctx=Load()),
                                                    ],
                                                    ctx=Load(),
                                                ),
                                            ),
                                        ],
                                        keywords=[],
                                    ),
                                ),
                            ],
                            orelse=[],
                        ),
                    ],
                    decorator_list=[],
                    returns=None,
                    type_comment=None,
                ),
                Assign(
                    lineno=235,
                    col_offset=4,
                    end_lineno=235,
                    end_col_offset=70,
                    targets=[Name(lineno=235, col_offset=4, end_lineno=235, end_col_offset=13, id='fractions', ctx=Store())],
                    value=List(
                        lineno=235,
                        col_offset=16,
                        end_lineno=235,
                        end_col_offset=70,
                        elts=[
                            Constant(lineno=235, col_offset=17, end_lineno=235, end_col_offset=19, value=0.0, kind=None),
                            Constant(lineno=235, col_offset=21, end_lineno=235, end_col_offset=25, value=0.015, kind=None),
                            Constant(lineno=235, col_offset=27, end_lineno=235, end_col_offset=33, value=0.01499, kind=None),
                            Constant(lineno=235, col_offset=35, end_lineno=235, end_col_offset=39, value=0.675, kind=None),
                            Constant(lineno=235, col_offset=41, end_lineno=235, end_col_offset=47, value=0.67499, kind=None),
                            Constant(lineno=235, col_offset=49, end_lineno=235, end_col_offset=54, value=0.4555, kind=None),
                            Constant(lineno=235, col_offset=56, end_lineno=235, end_col_offset=61, value=0.4555, kind=None),
                            Constant(lineno=235, col_offset=63, end_lineno=235, end_col_offset=69, value=0.45555, kind=None),
                        ],
                        ctx=Load(),
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=236,
                    col_offset=4,
                    end_lineno=236,
                    end_col_offset=75,
                    targets=[Name(lineno=236, col_offset=4, end_lineno=236, end_col_offset=13, id='expecteds', ctx=Store())],
                    value=List(
                        lineno=236,
                        col_offset=16,
                        end_lineno=236,
                        end_col_offset=75,
                        elts=[
                            Constant(lineno=236, col_offset=17, end_lineno=236, end_col_offset=22, value='.00', kind=None),
                            Constant(lineno=236, col_offset=24, end_lineno=236, end_col_offset=29, value='.02', kind=None),
                            Constant(lineno=236, col_offset=31, end_lineno=236, end_col_offset=36, value='.01', kind=None),
                            Constant(lineno=236, col_offset=38, end_lineno=236, end_col_offset=43, value='.68', kind=None),
                            Constant(lineno=236, col_offset=45, end_lineno=236, end_col_offset=50, value='.67', kind=None),
                            Constant(lineno=236, col_offset=52, end_lineno=236, end_col_offset=57, value='.46', kind=None),
                            Constant(lineno=236, col_offset=59, end_lineno=236, end_col_offset=65, value='.456', kind=None),
                            Constant(lineno=236, col_offset=67, end_lineno=236, end_col_offset=74, value='.4556', kind=None),
                        ],
                        ctx=Load(),
                    ),
                    type_comment=None,
                ),
                Assign(
                    lineno=237,
                    col_offset=4,
                    end_lineno=237,
                    end_col_offset=41,
                    targets=[Name(lineno=237, col_offset=4, end_lineno=237, end_col_offset=14, id='precisions', ctx=Store())],
                    value=List(
                        lineno=237,
                        col_offset=17,
                        end_lineno=237,
                        end_col_offset=41,
                        elts=[
                            Constant(lineno=237, col_offset=18, end_lineno=237, end_col_offset=19, value=2, kind=None),
                            Constant(lineno=237, col_offset=21, end_lineno=237, end_col_offset=22, value=2, kind=None),
                            Constant(lineno=237, col_offset=24, end_lineno=237, end_col_offset=25, value=2, kind=None),
                            Constant(lineno=237, col_offset=27, end_lineno=237, end_col_offset=28, value=2, kind=None),
                            Constant(lineno=237, col_offset=30, end_lineno=237, end_col_offset=31, value=2, kind=None),
                            Constant(lineno=237, col_offset=33, end_lineno=237, end_col_offset=34, value=2, kind=None),
                            Constant(lineno=237, col_offset=36, end_lineno=237, end_col_offset=37, value=3, kind=None),
                            Constant(lineno=237, col_offset=39, end_lineno=237, end_col_offset=40, value=4, kind=None),
                        ],
                        ctx=Load(),
                    ),
                    type_comment=None,
                ),
                For(
                    lineno=238,
                    col_offset=4,
                    end_lineno=245,
                    end_col_offset=62,
                    target=Name(lineno=238, col_offset=8, end_lineno=238, end_col_offset=17, id='magnitude', ctx=Store()),
                    iter=Call(
                        lineno=238,
                        col_offset=21,
                        end_lineno=238,
                        end_col_offset=29,
                        func=Name(lineno=238, col_offset=21, end_lineno=238, end_col_offset=26, id='range', ctx=Load()),
                        args=[Constant(lineno=238, col_offset=27, end_lineno=238, end_col_offset=28, value=7, kind=None)],
                        keywords=[],
                    ),
                    body=[
                        For(
                            lineno=239,
                            col_offset=8,
                            end_lineno=245,
                            end_col_offset=62,
                            target=Tuple(
                                lineno=239,
                                col_offset=12,
                                end_lineno=239,
                                end_col_offset=27,
                                elts=[
                                    Name(lineno=239, col_offset=12, end_lineno=239, end_col_offset=16, id='frac', ctx=Store()),
                                    Name(lineno=239, col_offset=18, end_lineno=239, end_col_offset=21, id='exp', ctx=Store()),
                                    Name(lineno=239, col_offset=23, end_lineno=239, end_col_offset=27, id='prec', ctx=Store()),
                                ],
                                ctx=Store(),
                            ),
                            iter=Call(
                                lineno=239,
                                col_offset=31,
                                end_lineno=239,
                                end_col_offset=68,
                                func=Name(lineno=239, col_offset=31, end_lineno=239, end_col_offset=34, id='zip', ctx=Load()),
                                args=[
                                    Name(lineno=239, col_offset=35, end_lineno=239, end_col_offset=44, id='fractions', ctx=Load()),
                                    Name(lineno=239, col_offset=46, end_lineno=239, end_col_offset=55, id='expecteds', ctx=Load()),
                                    Name(lineno=239, col_offset=57, end_lineno=239, end_col_offset=67, id='precisions', ctx=Load()),
                                ],
                                keywords=[],
                            ),
                            body=[
                                For(
                                    lineno=240,
                                    col_offset=12,
                                    end_lineno=245,
                                    end_col_offset=62,
                                    target=Name(lineno=240, col_offset=16, end_lineno=240, end_col_offset=20, id='sign', ctx=Store()),
                                    iter=List(
                                        lineno=240,
                                        col_offset=24,
                                        end_lineno=240,
                                        end_col_offset=30,
                                        elts=[
                                            UnaryOp(
                                                lineno=240,
                                                col_offset=25,
                                                end_lineno=240,
                                                end_col_offset=27,
                                                op=USub(),
                                                operand=Constant(lineno=240, col_offset=26, end_lineno=240, end_col_offset=27, value=1, kind=None),
                                            ),
                                            Constant(lineno=240, col_offset=28, end_lineno=240, end_col_offset=29, value=1, kind=None),
                                        ],
                                        ctx=Load(),
                                    ),
                                    body=[
                                        For(
                                            lineno=241,
                                            col_offset=16,
                                            end_lineno=245,
                                            end_col_offset=62,
                                            target=Name(lineno=241, col_offset=20, end_lineno=241, end_col_offset=21, id='x', ctx=Store()),
                                            iter=Call(
                                                lineno=241,
                                                col_offset=25,
                                                end_lineno=241,
                                                end_col_offset=44,
                                                func=Name(lineno=241, col_offset=25, end_lineno=241, end_col_offset=30, id='range', ctx=Load()),
                                                args=[
                                                    Constant(lineno=241, col_offset=31, end_lineno=241, end_col_offset=32, value=0, kind=None),
                                                    Constant(lineno=241, col_offset=34, end_lineno=241, end_col_offset=39, value=10000, kind=None),
                                                    Constant(lineno=241, col_offset=41, end_lineno=241, end_col_offset=43, value=97, kind=None),
                                                ],
                                                keywords=[],
                                            ),
                                            body=[
                                                Assign(
                                                    lineno=242,
                                                    col_offset=20,
                                                    end_lineno=242,
                                                    end_col_offset=41,
                                                    targets=[Name(lineno=242, col_offset=20, end_lineno=242, end_col_offset=21, id='n', ctx=Store())],
                                                    value=BinOp(
                                                        lineno=242,
                                                        col_offset=24,
                                                        end_lineno=242,
                                                        end_col_offset=41,
                                                        left=Name(lineno=242, col_offset=24, end_lineno=242, end_col_offset=25, id='x', ctx=Load()),
                                                        op=Mult(),
                                                        right=BinOp(
                                                            lineno=242,
                                                            col_offset=28,
                                                            end_lineno=242,
                                                            end_col_offset=41,
                                                            left=Constant(lineno=242, col_offset=28, end_lineno=242, end_col_offset=30, value=10, kind=None),
                                                            op=Pow(),
                                                            right=Name(lineno=242, col_offset=32, end_lineno=242, end_col_offset=41, id='magnitude', ctx=Load()),
                                                        ),
                                                    ),
                                                    type_comment=None,
                                                ),
                                                Assign(
                                                    lineno=243,
                                                    col_offset=20,
                                                    end_lineno=243,
                                                    end_col_offset=41,
                                                    targets=[Name(lineno=243, col_offset=20, end_lineno=243, end_col_offset=21, id='f', ctx=Store())],
                                                    value=BinOp(
                                                        lineno=243,
                                                        col_offset=24,
                                                        end_lineno=243,
                                                        end_col_offset=41,
                                                        left=Name(lineno=243, col_offset=24, end_lineno=243, end_col_offset=28, id='sign', ctx=Load()),
                                                        op=Mult(),
                                                        right=BinOp(
                                                            lineno=243,
                                                            col_offset=32,
                                                            end_lineno=243,
                                                            end_col_offset=40,
                                                            left=Name(lineno=243, col_offset=32, end_lineno=243, end_col_offset=33, id='n', ctx=Load()),
                                                            op=Add(),
                                                            right=Name(lineno=243, col_offset=36, end_lineno=243, end_col_offset=40, id='frac', ctx=Load()),
                                                        ),
                                                    ),
                                                    type_comment=None,
                                                ),
                                                Assign(
                                                    lineno=244,
                                                    col_offset=20,
                                                    end_lineno=244,
                                                    end_col_offset=81,
                                                    targets=[Name(lineno=244, col_offset=20, end_lineno=244, end_col_offset=25, id='f_exp', ctx=Store())],
                                                    value=BinOp(
                                                        lineno=244,
                                                        col_offset=28,
                                                        end_lineno=244,
                                                        end_col_offset=81,
                                                        left=BinOp(
                                                            lineno=244,
                                                            col_offset=28,
                                                            end_lineno=244,
                                                            end_col_offset=75,
                                                            left=IfExp(
                                                                lineno=244,
                                                                col_offset=29,
                                                                end_lineno=244,
                                                                end_col_offset=65,
                                                                test=BoolOp(
                                                                    lineno=244,
                                                                    col_offset=36,
                                                                    end_lineno=244,
                                                                    end_col_offset=57,
                                                                    op=And(),
                                                                    values=[
                                                                        Compare(
                                                                            lineno=244,
                                                                            col_offset=36,
                                                                            end_lineno=244,
                                                                            end_col_offset=42,
                                                                            left=Name(lineno=244, col_offset=36, end_lineno=244, end_col_offset=37, id='f', ctx=Load()),
                                                                            ops=[NotEq()],
                                                                            comparators=[Constant(lineno=244, col_offset=41, end_lineno=244, end_col_offset=42, value=0, kind=None)],
                                                                        ),
                                                                        Compare(
                                                                            lineno=244,
                                                                            col_offset=47,
                                                                            end_lineno=244,
                                                                            end_col_offset=57,
                                                                            left=Name(lineno=244, col_offset=47, end_lineno=244, end_col_offset=51, id='sign', ctx=Load()),
                                                                            ops=[Eq()],
                                                                            comparators=[
                                                                                UnaryOp(
                                                                                    lineno=244,
                                                                                    col_offset=55,
                                                                                    end_lineno=244,
                                                                                    end_col_offset=57,
                                                                                    op=USub(),
                                                                                    operand=Constant(lineno=244, col_offset=56, end_lineno=244, end_col_offset=57, value=1, kind=None),
                                                                                ),
                                                                            ],
                                                                        ),
                                                                    ],
                                                                ),
                                                                body=Constant(lineno=244, col_offset=29, end_lineno=244, end_col_offset=32, value='-', kind=None),
                                                                orelse=Constant(lineno=244, col_offset=63, end_lineno=244, end_col_offset=65, value='', kind=None),
                                                            ),
                                                            op=Add(),
                                                            right=Call(
                                                                lineno=244,
                                                                col_offset=69,
                                                                end_lineno=244,
                                                                end_col_offset=75,
                                                                func=Name(lineno=244, col_offset=69, end_lineno=244, end_col_offset=72, id='str', ctx=Load()),
                                                                args=[Name(lineno=244, col_offset=73, end_lineno=244, end_col_offset=74, id='n', ctx=Load())],
                                                                keywords=[],
                                                            ),
                                                        ),
                                                        op=Add(),
                                                        right=Name(lineno=244, col_offset=78, end_lineno=244, end_col_offset=81, id='exp', ctx=Load()),
                                                    ),
                                                    type_comment=None,
                                                ),
                                                Expr(
                                                    lineno=245,
                                                    col_offset=20,
                                                    end_lineno=245,
                                                    end_col_offset=62,
                                                    value=Call(
                                                        lineno=245,
                                                        col_offset=20,
                                                        end_lineno=245,
                                                        end_col_offset=62,
                                                        func=Name(lineno=245, col_offset=20, end_lineno=245, end_col_offset=29, id='try_round', ctx=Load()),
                                                        args=[
                                                            Name(lineno=245, col_offset=30, end_lineno=245, end_col_offset=31, id='f', ctx=Load()),
                                                            Name(lineno=245, col_offset=33, end_lineno=245, end_col_offset=38, id='f_exp', ctx=Load()),
                                                        ],
                                                        keywords=[
                                                            keyword(
                                                                lineno=245,
                                                                col_offset=40,
                                                                end_lineno=245,
                                                                end_col_offset=61,
                                                                arg='precision_digits',
                                                                value=Name(lineno=245, col_offset=57, end_lineno=245, end_col_offset=61, id='prec', ctx=Load()),
                                                            ),
                                                        ],
                                                    ),
                                                ),
                                            ],
                                            orelse=[],
                                            type_comment=None,
                                        ),
                                    ],
                                    orelse=[],
                                    type_comment=None,
                                ),
                            ],
                            orelse=[],
                            type_comment=None,
                        ),
                    ],
                    orelse=[],
                    type_comment=None,
                ),
                Assign(
                    lineno=247,
                    col_offset=4,
                    end_lineno=247,
                    end_col_offset=22,
                    targets=[Name(lineno=247, col_offset=4, end_lineno=247, end_col_offset=8, id='stop', ctx=Store())],
                    value=Call(
                        lineno=247,
                        col_offset=11,
                        end_lineno=247,
                        end_col_offset=22,
                        func=Attribute(
                            lineno=247,
                            col_offset=11,
                            end_lineno=247,
                            end_col_offset=20,
                            value=Name(lineno=247, col_offset=11, end_lineno=247, end_col_offset=15, id='time', ctx=Load()),
                            attr='time',
                            ctx=Load(),
                        ),
                        args=[],
                        keywords=[],
                    ),
                    type_comment=None,
                ),
                Expr(
                    lineno=253,
                    col_offset=4,
                    end_lineno=253,
                    end_col_offset=84,
                    value=Call(
                        lineno=253,
                        col_offset=4,
                        end_lineno=253,
                        end_col_offset=84,
                        func=Name(lineno=253, col_offset=4, end_lineno=253, end_col_offset=9, id='print', ctx=Load()),
                        args=[
                            Name(lineno=253, col_offset=10, end_lineno=253, end_col_offset=15, id='count', ctx=Load()),
                            Constant(lineno=253, col_offset=17, end_lineno=253, end_col_offset=33, value=' round calls, ', kind=None),
                            Name(lineno=253, col_offset=35, end_lineno=253, end_col_offset=41, id='errors', ctx=Load()),
                            Constant(lineno=253, col_offset=43, end_lineno=253, end_col_offset=61, value='errors, done in ', kind=None),
                            BinOp(
                                lineno=253,
                                col_offset=64,
                                end_lineno=253,
                                end_col_offset=74,
                                left=Name(lineno=253, col_offset=64, end_lineno=253, end_col_offset=68, id='stop', ctx=Load()),
                                op=Sub(),
                                right=Name(lineno=253, col_offset=69, end_lineno=253, end_col_offset=74, id='start', ctx=Load()),
                            ),
                            Constant(lineno=253, col_offset=77, end_lineno=253, end_col_offset=83, value='secs', kind=None),
                        ],
                        keywords=[],
                    ),
                ),
            ],
            orelse=[],
        ),
    ],
    type_ignores=[],
)
