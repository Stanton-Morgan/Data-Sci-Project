Module(
    body=[
        Import(
            lineno=3,
            col_offset=0,
            end_lineno=3,
            end_col_offset=10,
            names=[alias(name='csv', asname=None)],
        ),
        Import(
            lineno=4,
            col_offset=0,
            end_lineno=4,
            end_col_offset=13,
            names=[alias(name='codecs', asname=None)],
        ),
        Import(
            lineno=5,
            col_offset=0,
            end_lineno=5,
            end_col_offset=9,
            names=[alias(name='io', asname=None)],
        ),
        Assign(
            lineno=7,
            col_offset=0,
            end_lineno=7,
            end_col_offset=35,
            targets=[Name(lineno=7, col_offset=0, end_lineno=7, end_col_offset=7, id='_reader', ctx=Store())],
            value=Call(
                lineno=7,
                col_offset=10,
                end_lineno=7,
                end_col_offset=35,
                func=Attribute(
                    lineno=7,
                    col_offset=10,
                    end_lineno=7,
                    end_col_offset=26,
                    value=Name(lineno=7, col_offset=10, end_lineno=7, end_col_offset=16, id='codecs', ctx=Load()),
                    attr='getreader',
                    ctx=Load(),
                ),
                args=[Constant(lineno=7, col_offset=27, end_lineno=7, end_col_offset=34, value='utf-8', kind=None)],
                keywords=[],
            ),
            type_comment=None,
        ),
        Assign(
            lineno=8,
            col_offset=0,
            end_lineno=8,
            end_col_offset=35,
            targets=[Name(lineno=8, col_offset=0, end_lineno=8, end_col_offset=7, id='_writer', ctx=Store())],
            value=Call(
                lineno=8,
                col_offset=10,
                end_lineno=8,
                end_col_offset=35,
                func=Attribute(
                    lineno=8,
                    col_offset=10,
                    end_lineno=8,
                    end_col_offset=26,
                    value=Name(lineno=8, col_offset=10, end_lineno=8, end_col_offset=16, id='codecs', ctx=Load()),
                    attr='getwriter',
                    ctx=Load(),
                ),
                args=[Constant(lineno=8, col_offset=27, end_lineno=8, end_col_offset=34, value='utf-8', kind=None)],
                keywords=[],
            ),
            type_comment=None,
        ),
        FunctionDef(
            lineno=11,
            col_offset=0,
            end_lineno=14,
            end_col_offset=48,
            name='csv_reader',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=11, col_offset=15, end_lineno=11, end_col_offset=21, arg='stream', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=arg(lineno=11, col_offset=25, end_lineno=11, end_col_offset=31, arg='params', annotation=None, type_comment=None),
                defaults=[],
            ),
            body=[
                Assert(
                    lineno=12,
                    col_offset=4,
                    end_lineno=13,
                    end_col_offset=75,
                    test=UnaryOp(
                        lineno=12,
                        col_offset=11,
                        end_lineno=12,
                        end_col_offset=48,
                        op=Not(),
                        operand=Call(
                            lineno=12,
                            col_offset=15,
                            end_lineno=12,
                            end_col_offset=48,
                            func=Name(lineno=12, col_offset=15, end_lineno=12, end_col_offset=25, id='isinstance', ctx=Load()),
                            args=[
                                Name(lineno=12, col_offset=26, end_lineno=12, end_col_offset=32, id='stream', ctx=Load()),
                                Attribute(
                                    lineno=12,
                                    col_offset=34,
                                    end_lineno=12,
                                    end_col_offset=47,
                                    value=Name(lineno=12, col_offset=34, end_lineno=12, end_col_offset=36, id='io', ctx=Load()),
                                    attr='TextIOBase',
                                    ctx=Load(),
                                ),
                            ],
                            keywords=[],
                        ),
                    ),
                    msg=Constant(lineno=13, col_offset=8, end_lineno=13, end_col_offset=75, value='For cross-compatibility purposes, csv_reader takes a bytes stream', kind=None),
                ),
                Return(
                    lineno=14,
                    col_offset=4,
                    end_lineno=14,
                    end_col_offset=48,
                    value=Call(
                        lineno=14,
                        col_offset=11,
                        end_lineno=14,
                        end_col_offset=48,
                        func=Attribute(
                            lineno=14,
                            col_offset=11,
                            end_lineno=14,
                            end_col_offset=21,
                            value=Name(lineno=14, col_offset=11, end_lineno=14, end_col_offset=14, id='csv', ctx=Load()),
                            attr='reader',
                            ctx=Load(),
                        ),
                        args=[
                            Call(
                                lineno=14,
                                col_offset=22,
                                end_lineno=14,
                                end_col_offset=37,
                                func=Name(lineno=14, col_offset=22, end_lineno=14, end_col_offset=29, id='_reader', ctx=Load()),
                                args=[Name(lineno=14, col_offset=30, end_lineno=14, end_col_offset=36, id='stream', ctx=Load())],
                                keywords=[],
                            ),
                        ],
                        keywords=[
                            keyword(
                                lineno=14,
                                col_offset=39,
                                end_lineno=14,
                                end_col_offset=47,
                                arg=None,
                                value=Name(lineno=14, col_offset=41, end_lineno=14, end_col_offset=47, id='params', ctx=Load()),
                            ),
                        ],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=17,
            col_offset=0,
            end_lineno=20,
            end_col_offset=48,
            name='csv_writer',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=17, col_offset=15, end_lineno=17, end_col_offset=21, arg='stream', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=arg(lineno=17, col_offset=25, end_lineno=17, end_col_offset=31, arg='params', annotation=None, type_comment=None),
                defaults=[],
            ),
            body=[
                Assert(
                    lineno=18,
                    col_offset=4,
                    end_lineno=19,
                    end_col_offset=75,
                    test=UnaryOp(
                        lineno=18,
                        col_offset=11,
                        end_lineno=18,
                        end_col_offset=48,
                        op=Not(),
                        operand=Call(
                            lineno=18,
                            col_offset=15,
                            end_lineno=18,
                            end_col_offset=48,
                            func=Name(lineno=18, col_offset=15, end_lineno=18, end_col_offset=25, id='isinstance', ctx=Load()),
                            args=[
                                Name(lineno=18, col_offset=26, end_lineno=18, end_col_offset=32, id='stream', ctx=Load()),
                                Attribute(
                                    lineno=18,
                                    col_offset=34,
                                    end_lineno=18,
                                    end_col_offset=47,
                                    value=Name(lineno=18, col_offset=34, end_lineno=18, end_col_offset=36, id='io', ctx=Load()),
                                    attr='TextIOBase',
                                    ctx=Load(),
                                ),
                            ],
                            keywords=[],
                        ),
                    ),
                    msg=Constant(lineno=19, col_offset=8, end_lineno=19, end_col_offset=75, value='For cross-compatibility purposes, csv_writer takes a bytes stream', kind=None),
                ),
                Return(
                    lineno=20,
                    col_offset=4,
                    end_lineno=20,
                    end_col_offset=48,
                    value=Call(
                        lineno=20,
                        col_offset=11,
                        end_lineno=20,
                        end_col_offset=48,
                        func=Attribute(
                            lineno=20,
                            col_offset=11,
                            end_lineno=20,
                            end_col_offset=21,
                            value=Name(lineno=20, col_offset=11, end_lineno=20, end_col_offset=14, id='csv', ctx=Load()),
                            attr='writer',
                            ctx=Load(),
                        ),
                        args=[
                            Call(
                                lineno=20,
                                col_offset=22,
                                end_lineno=20,
                                end_col_offset=37,
                                func=Name(lineno=20, col_offset=22, end_lineno=20, end_col_offset=29, id='_writer', ctx=Load()),
                                args=[Name(lineno=20, col_offset=30, end_lineno=20, end_col_offset=36, id='stream', ctx=Load())],
                                keywords=[],
                            ),
                        ],
                        keywords=[
                            keyword(
                                lineno=20,
                                col_offset=39,
                                end_lineno=20,
                                end_col_offset=47,
                                arg=None,
                                value=Name(lineno=20, col_offset=41, end_lineno=20, end_col_offset=47, id='params', ctx=Load()),
                            ),
                        ],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        FunctionDef(
            lineno=23,
            col_offset=0,
            end_lineno=41,
            end_col_offset=22,
            name='to_text',
            args=arguments(
                posonlyargs=[],
                args=[arg(lineno=23, col_offset=12, end_lineno=23, end_col_offset=18, arg='source', annotation=None, type_comment=None)],
                vararg=None,
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=None,
                defaults=[],
            ),
            body=[
                Expr(
                    lineno=24,
                    col_offset=4,
                    end_lineno=31,
                    end_col_offset=7,
                    value=Constant(lineno=24, col_offset=4, end_lineno=31, end_col_offset=7, value=" Generates a text value (an instance of text_type) from an arbitrary\n    source.\n\n    * False and None are converted to empty strings\n    * text is passed through\n    * bytes are decoded as UTF-8\n    * rest is textified via the current version's relevant data model method\n    ", kind=None),
                ),
                If(
                    lineno=32,
                    col_offset=4,
                    end_lineno=33,
                    end_col_offset=18,
                    test=BoolOp(
                        lineno=32,
                        col_offset=7,
                        end_lineno=32,
                        end_col_offset=40,
                        op=Or(),
                        values=[
                            Compare(
                                lineno=32,
                                col_offset=7,
                                end_lineno=32,
                                end_col_offset=21,
                                left=Name(lineno=32, col_offset=7, end_lineno=32, end_col_offset=13, id='source', ctx=Load()),
                                ops=[Is()],
                                comparators=[Constant(lineno=32, col_offset=17, end_lineno=32, end_col_offset=21, value=None, kind=None)],
                            ),
                            Compare(
                                lineno=32,
                                col_offset=25,
                                end_lineno=32,
                                end_col_offset=40,
                                left=Name(lineno=32, col_offset=25, end_lineno=32, end_col_offset=31, id='source', ctx=Load()),
                                ops=[Is()],
                                comparators=[Constant(lineno=32, col_offset=35, end_lineno=32, end_col_offset=40, value=False, kind=None)],
                            ),
                        ],
                    ),
                    body=[
                        Return(
                            lineno=33,
                            col_offset=8,
                            end_lineno=33,
                            end_col_offset=18,
                            value=Constant(lineno=33, col_offset=15, end_lineno=33, end_col_offset=18, value='', kind='u'),
                        ),
                    ],
                    orelse=[],
                ),
                If(
                    lineno=35,
                    col_offset=4,
                    end_lineno=36,
                    end_col_offset=37,
                    test=Call(
                        lineno=35,
                        col_offset=7,
                        end_lineno=35,
                        end_col_offset=32,
                        func=Name(lineno=35, col_offset=7, end_lineno=35, end_col_offset=17, id='isinstance', ctx=Load()),
                        args=[
                            Name(lineno=35, col_offset=18, end_lineno=35, end_col_offset=24, id='source', ctx=Load()),
                            Name(lineno=35, col_offset=26, end_lineno=35, end_col_offset=31, id='bytes', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                    body=[
                        Return(
                            lineno=36,
                            col_offset=8,
                            end_lineno=36,
                            end_col_offset=37,
                            value=Call(
                                lineno=36,
                                col_offset=15,
                                end_lineno=36,
                                end_col_offset=37,
                                func=Attribute(
                                    lineno=36,
                                    col_offset=15,
                                    end_lineno=36,
                                    end_col_offset=28,
                                    value=Name(lineno=36, col_offset=15, end_lineno=36, end_col_offset=21, id='source', ctx=Load()),
                                    attr='decode',
                                    ctx=Load(),
                                ),
                                args=[Constant(lineno=36, col_offset=29, end_lineno=36, end_col_offset=36, value='utf-8', kind=None)],
                                keywords=[],
                            ),
                        ),
                    ],
                    orelse=[],
                ),
                If(
                    lineno=38,
                    col_offset=4,
                    end_lineno=39,
                    end_col_offset=21,
                    test=Call(
                        lineno=38,
                        col_offset=7,
                        end_lineno=38,
                        end_col_offset=30,
                        func=Name(lineno=38, col_offset=7, end_lineno=38, end_col_offset=17, id='isinstance', ctx=Load()),
                        args=[
                            Name(lineno=38, col_offset=18, end_lineno=38, end_col_offset=24, id='source', ctx=Load()),
                            Name(lineno=38, col_offset=26, end_lineno=38, end_col_offset=29, id='str', ctx=Load()),
                        ],
                        keywords=[],
                    ),
                    body=[
                        Return(
                            lineno=39,
                            col_offset=8,
                            end_lineno=39,
                            end_col_offset=21,
                            value=Name(lineno=39, col_offset=15, end_lineno=39, end_col_offset=21, id='source', ctx=Load()),
                        ),
                    ],
                    orelse=[],
                ),
                Return(
                    lineno=41,
                    col_offset=4,
                    end_lineno=41,
                    end_col_offset=22,
                    value=Call(
                        lineno=41,
                        col_offset=11,
                        end_lineno=41,
                        end_col_offset=22,
                        func=Name(lineno=41, col_offset=11, end_lineno=41, end_col_offset=14, id='str', ctx=Load()),
                        args=[Name(lineno=41, col_offset=15, end_lineno=41, end_col_offset=21, id='source', ctx=Load())],
                        keywords=[],
                    ),
                ),
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
    ],
    type_ignores=[],
)
